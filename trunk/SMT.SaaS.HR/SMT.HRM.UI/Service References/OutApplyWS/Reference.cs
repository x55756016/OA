//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.60310.0
// 
namespace SMT.HRM.UI.OutApplyWS {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.HRM.UI.OutApplyWS.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.HRM.UI.OutApplyWS.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.HRM.UI.OutApplyWS.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD))]
    public partial class EntityObject : SMT.HRM.UI.OutApplyWS.StructuralObject {
        
        private SMT.HRM.UI.OutApplyWS.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.HRM.UI.OutApplyWS.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.HRM.UI.OutApplyWS.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_HR_EMPLOYEEOUTAPPLIECRECORD", Namespace="http://schemas.datacontract.org/2004/07/SMT_HRM_EFModel", IsReference=true)]
    public partial class T_HR_EMPLOYEEOUTAPPLIECRECORD : SMT.HRM.UI.OutApplyWS.EntityObject {
        
        private string BEGINCARDTIMEField;
        
        private string BEGINCARDTYPEField;
        
        private string CHECKSTATEField;
        
        private string CREATECOMPANYIDField;
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string EMPLOYEEIDField;
        
        private string EMPLOYEENAMEField;
        
        private string ENDCARDTIMEField;
        
        private string ENDCARDTYPEField;
        
        private System.Nullable<System.DateTime> ENDDATEField;
        
        private string OVERTIMECATEField;
        
        private string OVERTIMEHOURSField;
        
        private string OVERTIMERECORDIDField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private string REMARKField;
        
        private System.Nullable<System.DateTime> STARTDATEField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BEGINCARDTIME {
            get {
                return this.BEGINCARDTIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.BEGINCARDTIMEField, value) != true)) {
                    this.BEGINCARDTIMEField = value;
                    this.RaisePropertyChanged("BEGINCARDTIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BEGINCARDTYPE {
            get {
                return this.BEGINCARDTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.BEGINCARDTYPEField, value) != true)) {
                    this.BEGINCARDTYPEField = value;
                    this.RaisePropertyChanged("BEGINCARDTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CHECKSTATE {
            get {
                return this.CHECKSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.CHECKSTATEField, value) != true)) {
                    this.CHECKSTATEField = value;
                    this.RaisePropertyChanged("CHECKSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEEID {
            get {
                return this.EMPLOYEEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEEIDField, value) != true)) {
                    this.EMPLOYEEIDField = value;
                    this.RaisePropertyChanged("EMPLOYEEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEENAME {
            get {
                return this.EMPLOYEENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEENAMEField, value) != true)) {
                    this.EMPLOYEENAMEField = value;
                    this.RaisePropertyChanged("EMPLOYEENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENDCARDTIME {
            get {
                return this.ENDCARDTIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ENDCARDTIMEField, value) != true)) {
                    this.ENDCARDTIMEField = value;
                    this.RaisePropertyChanged("ENDCARDTIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENDCARDTYPE {
            get {
                return this.ENDCARDTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.ENDCARDTYPEField, value) != true)) {
                    this.ENDCARDTYPEField = value;
                    this.RaisePropertyChanged("ENDCARDTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ENDDATE {
            get {
                return this.ENDDATEField;
            }
            set {
                if ((this.ENDDATEField.Equals(value) != true)) {
                    this.ENDDATEField = value;
                    this.RaisePropertyChanged("ENDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OVERTIMECATE {
            get {
                return this.OVERTIMECATEField;
            }
            set {
                if ((object.ReferenceEquals(this.OVERTIMECATEField, value) != true)) {
                    this.OVERTIMECATEField = value;
                    this.RaisePropertyChanged("OVERTIMECATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OVERTIMEHOURS {
            get {
                return this.OVERTIMEHOURSField;
            }
            set {
                if ((object.ReferenceEquals(this.OVERTIMEHOURSField, value) != true)) {
                    this.OVERTIMEHOURSField = value;
                    this.RaisePropertyChanged("OVERTIMEHOURS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OVERTIMERECORDID {
            get {
                return this.OVERTIMERECORDIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OVERTIMERECORDIDField, value) != true)) {
                    this.OVERTIMERECORDIDField = value;
                    this.RaisePropertyChanged("OVERTIMERECORDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> STARTDATE {
            get {
                return this.STARTDATEField;
            }
            set {
                if ((this.STARTDATEField.Equals(value) != true)) {
                    this.STARTDATEField = value;
                    this.RaisePropertyChanged("STARTDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="OutApplyWS.OutAppliecrecordService")]
    public interface OutAppliecrecordService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OutAppliecrecordService/EmployeeOverTimeRecordPaging", ReplyAction="urn:OutAppliecrecordService/EmployeeOverTimeRecordPagingResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.OutApplyWS.EntityKey))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.EntityKeyMember>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.OutApplyWS.EntityKeyMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.OutApplyWS.EntityObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.OutApplyWS.StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD))]
        System.IAsyncResult BeginEmployeeOverTimeRecordPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, ref int pageCount, string strCheckState, string strOwnerID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD> EndEmployeeOverTimeRecordPaging(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OutAppliecrecordService/GetOverTimeRdByID", ReplyAction="urn:OutAppliecrecordService/GetOverTimeRdByIDResponse")]
        System.IAsyncResult BeginGetOverTimeRdByID(string strOverTimeRecordId, System.AsyncCallback callback, object asyncState);
        
        SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD EndGetOverTimeRdByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OutAppliecrecordService/AddOverTimeRd", ReplyAction="urn:OutAppliecrecordService/AddOverTimeRdResponse")]
        System.IAsyncResult BeginAddOverTimeRd(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD entOTRd, System.AsyncCallback callback, object asyncState);
        
        string EndAddOverTimeRd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OutAppliecrecordService/ModifyOverTimeRd", ReplyAction="urn:OutAppliecrecordService/ModifyOverTimeRdResponse")]
        System.IAsyncResult BeginModifyOverTimeRd(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD entOTRd, System.AsyncCallback callback, object asyncState);
        
        string EndModifyOverTimeRd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OutAppliecrecordService/RemoveOverTimeRd", ReplyAction="urn:OutAppliecrecordService/RemoveOverTimeRdResponse")]
        System.IAsyncResult BeginRemoveOverTimeRd(System.Collections.ObjectModel.ObservableCollection<string> strOverTimeRecordId, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveOverTimeRd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OutAppliecrecordService/AuditOverTimeRd", ReplyAction="urn:OutAppliecrecordService/AuditOverTimeRdResponse")]
        System.IAsyncResult BeginAuditOverTimeRd(string strOverTimeRecordID, string strCheckState, System.AsyncCallback callback, object asyncState);
        
        string EndAuditOverTimeRd(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface OutAppliecrecordServiceChannel : SMT.HRM.UI.OutApplyWS.OutAppliecrecordService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeOverTimeRecordPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EmployeeOverTimeRecordPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOverTimeRdByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOverTimeRdByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddOverTimeRdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddOverTimeRdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModifyOverTimeRdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ModifyOverTimeRdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveOverTimeRdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveOverTimeRdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuditOverTimeRdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuditOverTimeRdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OutAppliecrecordServiceClient : System.ServiceModel.ClientBase<SMT.HRM.UI.OutApplyWS.OutAppliecrecordService>, SMT.HRM.UI.OutApplyWS.OutAppliecrecordService {
        
        private BeginOperationDelegate onBeginEmployeeOverTimeRecordPagingDelegate;
        
        private EndOperationDelegate onEndEmployeeOverTimeRecordPagingDelegate;
        
        private System.Threading.SendOrPostCallback onEmployeeOverTimeRecordPagingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOverTimeRdByIDDelegate;
        
        private EndOperationDelegate onEndGetOverTimeRdByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetOverTimeRdByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOverTimeRdDelegate;
        
        private EndOperationDelegate onEndAddOverTimeRdDelegate;
        
        private System.Threading.SendOrPostCallback onAddOverTimeRdCompletedDelegate;
        
        private BeginOperationDelegate onBeginModifyOverTimeRdDelegate;
        
        private EndOperationDelegate onEndModifyOverTimeRdDelegate;
        
        private System.Threading.SendOrPostCallback onModifyOverTimeRdCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveOverTimeRdDelegate;
        
        private EndOperationDelegate onEndRemoveOverTimeRdDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveOverTimeRdCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuditOverTimeRdDelegate;
        
        private EndOperationDelegate onEndAuditOverTimeRdDelegate;
        
        private System.Threading.SendOrPostCallback onAuditOverTimeRdCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public OutAppliecrecordServiceClient() {
        }
        
        public OutAppliecrecordServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OutAppliecrecordServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OutAppliecrecordServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OutAppliecrecordServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<EmployeeOverTimeRecordPagingCompletedEventArgs> EmployeeOverTimeRecordPagingCompleted;
        
        public event System.EventHandler<GetOverTimeRdByIDCompletedEventArgs> GetOverTimeRdByIDCompleted;
        
        public event System.EventHandler<AddOverTimeRdCompletedEventArgs> AddOverTimeRdCompleted;
        
        public event System.EventHandler<ModifyOverTimeRdCompletedEventArgs> ModifyOverTimeRdCompleted;
        
        public event System.EventHandler<RemoveOverTimeRdCompletedEventArgs> RemoveOverTimeRdCompleted;
        
        public event System.EventHandler<AuditOverTimeRdCompletedEventArgs> AuditOverTimeRdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.OutApplyWS.OutAppliecrecordService.BeginEmployeeOverTimeRecordPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, ref int pageCount, string strCheckState, string strOwnerID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmployeeOverTimeRecordPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, strCheckState, strOwnerID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD> SMT.HRM.UI.OutApplyWS.OutAppliecrecordService.EndEmployeeOverTimeRecordPaging(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndEmployeeOverTimeRecordPaging(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginEmployeeOverTimeRecordPaging(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<object> paras = ((System.Collections.ObjectModel.ObservableCollection<object>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            string strCheckState = ((string)(inValues[6]));
            string strOwnerID = ((string)(inValues[7]));
            return ((SMT.HRM.UI.OutApplyWS.OutAppliecrecordService)(this)).BeginEmployeeOverTimeRecordPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, strCheckState, strOwnerID, callback, asyncState);
        }
        
        private object[] OnEndEmployeeOverTimeRecordPaging(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD> retVal = ((SMT.HRM.UI.OutApplyWS.OutAppliecrecordService)(this)).EndEmployeeOverTimeRecordPaging(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnEmployeeOverTimeRecordPagingCompleted(object state) {
            if ((this.EmployeeOverTimeRecordPagingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmployeeOverTimeRecordPagingCompleted(this, new EmployeeOverTimeRecordPagingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmployeeOverTimeRecordPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, int pageCount, string strCheckState, string strOwnerID) {
            this.EmployeeOverTimeRecordPagingAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, strCheckState, strOwnerID, null);
        }
        
        public void EmployeeOverTimeRecordPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, int pageCount, string strCheckState, string strOwnerID, object userState) {
            if ((this.onBeginEmployeeOverTimeRecordPagingDelegate == null)) {
                this.onBeginEmployeeOverTimeRecordPagingDelegate = new BeginOperationDelegate(this.OnBeginEmployeeOverTimeRecordPaging);
            }
            if ((this.onEndEmployeeOverTimeRecordPagingDelegate == null)) {
                this.onEndEmployeeOverTimeRecordPagingDelegate = new EndOperationDelegate(this.OnEndEmployeeOverTimeRecordPaging);
            }
            if ((this.onEmployeeOverTimeRecordPagingCompletedDelegate == null)) {
                this.onEmployeeOverTimeRecordPagingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmployeeOverTimeRecordPagingCompleted);
            }
            base.InvokeAsync(this.onBeginEmployeeOverTimeRecordPagingDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount,
                        strCheckState,
                        strOwnerID}, this.onEndEmployeeOverTimeRecordPagingDelegate, this.onEmployeeOverTimeRecordPagingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.OutApplyWS.OutAppliecrecordService.BeginGetOverTimeRdByID(string strOverTimeRecordId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOverTimeRdByID(strOverTimeRecordId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD SMT.HRM.UI.OutApplyWS.OutAppliecrecordService.EndGetOverTimeRdByID(System.IAsyncResult result) {
            return base.Channel.EndGetOverTimeRdByID(result);
        }
        
        private System.IAsyncResult OnBeginGetOverTimeRdByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strOverTimeRecordId = ((string)(inValues[0]));
            return ((SMT.HRM.UI.OutApplyWS.OutAppliecrecordService)(this)).BeginGetOverTimeRdByID(strOverTimeRecordId, callback, asyncState);
        }
        
        private object[] OnEndGetOverTimeRdByID(System.IAsyncResult result) {
            SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD retVal = ((SMT.HRM.UI.OutApplyWS.OutAppliecrecordService)(this)).EndGetOverTimeRdByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOverTimeRdByIDCompleted(object state) {
            if ((this.GetOverTimeRdByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOverTimeRdByIDCompleted(this, new GetOverTimeRdByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOverTimeRdByIDAsync(string strOverTimeRecordId) {
            this.GetOverTimeRdByIDAsync(strOverTimeRecordId, null);
        }
        
        public void GetOverTimeRdByIDAsync(string strOverTimeRecordId, object userState) {
            if ((this.onBeginGetOverTimeRdByIDDelegate == null)) {
                this.onBeginGetOverTimeRdByIDDelegate = new BeginOperationDelegate(this.OnBeginGetOverTimeRdByID);
            }
            if ((this.onEndGetOverTimeRdByIDDelegate == null)) {
                this.onEndGetOverTimeRdByIDDelegate = new EndOperationDelegate(this.OnEndGetOverTimeRdByID);
            }
            if ((this.onGetOverTimeRdByIDCompletedDelegate == null)) {
                this.onGetOverTimeRdByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOverTimeRdByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetOverTimeRdByIDDelegate, new object[] {
                        strOverTimeRecordId}, this.onEndGetOverTimeRdByIDDelegate, this.onGetOverTimeRdByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.OutApplyWS.OutAppliecrecordService.BeginAddOverTimeRd(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD entOTRd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOverTimeRd(entOTRd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.HRM.UI.OutApplyWS.OutAppliecrecordService.EndAddOverTimeRd(System.IAsyncResult result) {
            return base.Channel.EndAddOverTimeRd(result);
        }
        
        private System.IAsyncResult OnBeginAddOverTimeRd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD entOTRd = ((SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD)(inValues[0]));
            return ((SMT.HRM.UI.OutApplyWS.OutAppliecrecordService)(this)).BeginAddOverTimeRd(entOTRd, callback, asyncState);
        }
        
        private object[] OnEndAddOverTimeRd(System.IAsyncResult result) {
            string retVal = ((SMT.HRM.UI.OutApplyWS.OutAppliecrecordService)(this)).EndAddOverTimeRd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddOverTimeRdCompleted(object state) {
            if ((this.AddOverTimeRdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOverTimeRdCompleted(this, new AddOverTimeRdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOverTimeRdAsync(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD entOTRd) {
            this.AddOverTimeRdAsync(entOTRd, null);
        }
        
        public void AddOverTimeRdAsync(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD entOTRd, object userState) {
            if ((this.onBeginAddOverTimeRdDelegate == null)) {
                this.onBeginAddOverTimeRdDelegate = new BeginOperationDelegate(this.OnBeginAddOverTimeRd);
            }
            if ((this.onEndAddOverTimeRdDelegate == null)) {
                this.onEndAddOverTimeRdDelegate = new EndOperationDelegate(this.OnEndAddOverTimeRd);
            }
            if ((this.onAddOverTimeRdCompletedDelegate == null)) {
                this.onAddOverTimeRdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOverTimeRdCompleted);
            }
            base.InvokeAsync(this.onBeginAddOverTimeRdDelegate, new object[] {
                        entOTRd}, this.onEndAddOverTimeRdDelegate, this.onAddOverTimeRdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.OutApplyWS.OutAppliecrecordService.BeginModifyOverTimeRd(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD entOTRd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModifyOverTimeRd(entOTRd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.HRM.UI.OutApplyWS.OutAppliecrecordService.EndModifyOverTimeRd(System.IAsyncResult result) {
            return base.Channel.EndModifyOverTimeRd(result);
        }
        
        private System.IAsyncResult OnBeginModifyOverTimeRd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD entOTRd = ((SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD)(inValues[0]));
            return ((SMT.HRM.UI.OutApplyWS.OutAppliecrecordService)(this)).BeginModifyOverTimeRd(entOTRd, callback, asyncState);
        }
        
        private object[] OnEndModifyOverTimeRd(System.IAsyncResult result) {
            string retVal = ((SMT.HRM.UI.OutApplyWS.OutAppliecrecordService)(this)).EndModifyOverTimeRd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnModifyOverTimeRdCompleted(object state) {
            if ((this.ModifyOverTimeRdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModifyOverTimeRdCompleted(this, new ModifyOverTimeRdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModifyOverTimeRdAsync(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD entOTRd) {
            this.ModifyOverTimeRdAsync(entOTRd, null);
        }
        
        public void ModifyOverTimeRdAsync(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD entOTRd, object userState) {
            if ((this.onBeginModifyOverTimeRdDelegate == null)) {
                this.onBeginModifyOverTimeRdDelegate = new BeginOperationDelegate(this.OnBeginModifyOverTimeRd);
            }
            if ((this.onEndModifyOverTimeRdDelegate == null)) {
                this.onEndModifyOverTimeRdDelegate = new EndOperationDelegate(this.OnEndModifyOverTimeRd);
            }
            if ((this.onModifyOverTimeRdCompletedDelegate == null)) {
                this.onModifyOverTimeRdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModifyOverTimeRdCompleted);
            }
            base.InvokeAsync(this.onBeginModifyOverTimeRdDelegate, new object[] {
                        entOTRd}, this.onEndModifyOverTimeRdDelegate, this.onModifyOverTimeRdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.OutApplyWS.OutAppliecrecordService.BeginRemoveOverTimeRd(System.Collections.ObjectModel.ObservableCollection<string> strOverTimeRecordId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveOverTimeRd(strOverTimeRecordId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.HRM.UI.OutApplyWS.OutAppliecrecordService.EndRemoveOverTimeRd(System.IAsyncResult result) {
            return base.Channel.EndRemoveOverTimeRd(result);
        }
        
        private System.IAsyncResult OnBeginRemoveOverTimeRd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> strOverTimeRecordId = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((SMT.HRM.UI.OutApplyWS.OutAppliecrecordService)(this)).BeginRemoveOverTimeRd(strOverTimeRecordId, callback, asyncState);
        }
        
        private object[] OnEndRemoveOverTimeRd(System.IAsyncResult result) {
            bool retVal = ((SMT.HRM.UI.OutApplyWS.OutAppliecrecordService)(this)).EndRemoveOverTimeRd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveOverTimeRdCompleted(object state) {
            if ((this.RemoveOverTimeRdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveOverTimeRdCompleted(this, new RemoveOverTimeRdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveOverTimeRdAsync(System.Collections.ObjectModel.ObservableCollection<string> strOverTimeRecordId) {
            this.RemoveOverTimeRdAsync(strOverTimeRecordId, null);
        }
        
        public void RemoveOverTimeRdAsync(System.Collections.ObjectModel.ObservableCollection<string> strOverTimeRecordId, object userState) {
            if ((this.onBeginRemoveOverTimeRdDelegate == null)) {
                this.onBeginRemoveOverTimeRdDelegate = new BeginOperationDelegate(this.OnBeginRemoveOverTimeRd);
            }
            if ((this.onEndRemoveOverTimeRdDelegate == null)) {
                this.onEndRemoveOverTimeRdDelegate = new EndOperationDelegate(this.OnEndRemoveOverTimeRd);
            }
            if ((this.onRemoveOverTimeRdCompletedDelegate == null)) {
                this.onRemoveOverTimeRdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveOverTimeRdCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveOverTimeRdDelegate, new object[] {
                        strOverTimeRecordId}, this.onEndRemoveOverTimeRdDelegate, this.onRemoveOverTimeRdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.OutApplyWS.OutAppliecrecordService.BeginAuditOverTimeRd(string strOverTimeRecordID, string strCheckState, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuditOverTimeRd(strOverTimeRecordID, strCheckState, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.HRM.UI.OutApplyWS.OutAppliecrecordService.EndAuditOverTimeRd(System.IAsyncResult result) {
            return base.Channel.EndAuditOverTimeRd(result);
        }
        
        private System.IAsyncResult OnBeginAuditOverTimeRd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strOverTimeRecordID = ((string)(inValues[0]));
            string strCheckState = ((string)(inValues[1]));
            return ((SMT.HRM.UI.OutApplyWS.OutAppliecrecordService)(this)).BeginAuditOverTimeRd(strOverTimeRecordID, strCheckState, callback, asyncState);
        }
        
        private object[] OnEndAuditOverTimeRd(System.IAsyncResult result) {
            string retVal = ((SMT.HRM.UI.OutApplyWS.OutAppliecrecordService)(this)).EndAuditOverTimeRd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuditOverTimeRdCompleted(object state) {
            if ((this.AuditOverTimeRdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuditOverTimeRdCompleted(this, new AuditOverTimeRdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuditOverTimeRdAsync(string strOverTimeRecordID, string strCheckState) {
            this.AuditOverTimeRdAsync(strOverTimeRecordID, strCheckState, null);
        }
        
        public void AuditOverTimeRdAsync(string strOverTimeRecordID, string strCheckState, object userState) {
            if ((this.onBeginAuditOverTimeRdDelegate == null)) {
                this.onBeginAuditOverTimeRdDelegate = new BeginOperationDelegate(this.OnBeginAuditOverTimeRd);
            }
            if ((this.onEndAuditOverTimeRdDelegate == null)) {
                this.onEndAuditOverTimeRdDelegate = new EndOperationDelegate(this.OnEndAuditOverTimeRd);
            }
            if ((this.onAuditOverTimeRdCompletedDelegate == null)) {
                this.onAuditOverTimeRdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuditOverTimeRdCompleted);
            }
            base.InvokeAsync(this.onBeginAuditOverTimeRdDelegate, new object[] {
                        strOverTimeRecordID,
                        strCheckState}, this.onEndAuditOverTimeRdDelegate, this.onAuditOverTimeRdCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.HRM.UI.OutApplyWS.OutAppliecrecordService CreateChannel() {
            return new OutAppliecrecordServiceClientChannel(this);
        }
        
        private class OutAppliecrecordServiceClientChannel : ChannelBase<SMT.HRM.UI.OutApplyWS.OutAppliecrecordService>, SMT.HRM.UI.OutApplyWS.OutAppliecrecordService {
            
            public OutAppliecrecordServiceClientChannel(System.ServiceModel.ClientBase<SMT.HRM.UI.OutApplyWS.OutAppliecrecordService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginEmployeeOverTimeRecordPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, ref int pageCount, string strCheckState, string strOwnerID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                _args[6] = strCheckState;
                _args[7] = strOwnerID;
                System.IAsyncResult _result = base.BeginInvoke("EmployeeOverTimeRecordPaging", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD> EndEmployeeOverTimeRecordPaging(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD>)(base.EndInvoke("EmployeeOverTimeRecordPaging", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOverTimeRdByID(string strOverTimeRecordId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = strOverTimeRecordId;
                System.IAsyncResult _result = base.BeginInvoke("GetOverTimeRdByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD EndGetOverTimeRdByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD _result = ((SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD)(base.EndInvoke("GetOverTimeRdByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddOverTimeRd(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD entOTRd, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entOTRd;
                System.IAsyncResult _result = base.BeginInvoke("AddOverTimeRd", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAddOverTimeRd(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AddOverTimeRd", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginModifyOverTimeRd(SMT.HRM.UI.OutApplyWS.T_HR_EMPLOYEEOUTAPPLIECRECORD entOTRd, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entOTRd;
                System.IAsyncResult _result = base.BeginInvoke("ModifyOverTimeRd", _args, callback, asyncState);
                return _result;
            }
            
            public string EndModifyOverTimeRd(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ModifyOverTimeRd", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveOverTimeRd(System.Collections.ObjectModel.ObservableCollection<string> strOverTimeRecordId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = strOverTimeRecordId;
                System.IAsyncResult _result = base.BeginInvoke("RemoveOverTimeRd", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveOverTimeRd(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveOverTimeRd", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuditOverTimeRd(string strOverTimeRecordID, string strCheckState, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = strOverTimeRecordID;
                _args[1] = strCheckState;
                System.IAsyncResult _result = base.BeginInvoke("AuditOverTimeRd", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAuditOverTimeRd(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AuditOverTimeRd", _args, result)));
                return _result;
            }
        }
    }
}
