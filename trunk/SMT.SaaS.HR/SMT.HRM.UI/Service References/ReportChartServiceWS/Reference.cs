//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.269
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SMT.HRM.UI.ReportChartServiceWS {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeMarriage", Namespace="http://schemas.datacontract.org/2004/07/SMT.HRM.CustomModel.Reports")]
    public partial class EmployeeMarriage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> DataEntyField;
        
        private string EmployNameField;
        
        private string MarriageEntyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DataEnty {
            get {
                return this.DataEntyField;
            }
            set {
                if ((this.DataEntyField.Equals(value) != true)) {
                    this.DataEntyField = value;
                    this.RaisePropertyChanged("DataEnty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployName {
            get {
                return this.EmployNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployNameField, value) != true)) {
                    this.EmployNameField = value;
                    this.RaisePropertyChanged("EmployName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarriageEnty {
            get {
                return this.MarriageEntyField;
            }
            set {
                if ((object.ReferenceEquals(this.MarriageEntyField, value) != true)) {
                    this.MarriageEntyField = value;
                    this.RaisePropertyChanged("MarriageEnty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PieEmployeece", Namespace="http://schemas.datacontract.org/2004/07/SMT.HRM.CustomModel.Reports")]
    public partial class PieEmployeece : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AgeField;
        
        private System.DateTime BirthdayField;
        
        private string CNAMEField;
        
        private int CountEmployeeceField;
        
        private string EMPLOYEEIDField;
        
        private string ENAMEField;
        
        private System.DateTime ENTRYDATEField;
        
        private string EducationField;
        
        private string NameField;
        
        private string OWNERCOMPANYIDField;
        
        private string SexField;
        
        private string marriageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Age {
            get {
                return this.AgeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeField, value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNAME {
            get {
                return this.CNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CNAMEField, value) != true)) {
                    this.CNAMEField = value;
                    this.RaisePropertyChanged("CNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountEmployeece {
            get {
                return this.CountEmployeeceField;
            }
            set {
                if ((this.CountEmployeeceField.Equals(value) != true)) {
                    this.CountEmployeeceField = value;
                    this.RaisePropertyChanged("CountEmployeece");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEEID {
            get {
                return this.EMPLOYEEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEEIDField, value) != true)) {
                    this.EMPLOYEEIDField = value;
                    this.RaisePropertyChanged("EMPLOYEEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENAME {
            get {
                return this.ENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ENAMEField, value) != true)) {
                    this.ENAMEField = value;
                    this.RaisePropertyChanged("ENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ENTRYDATE {
            get {
                return this.ENTRYDATEField;
            }
            set {
                if ((this.ENTRYDATEField.Equals(value) != true)) {
                    this.ENTRYDATEField = value;
                    this.RaisePropertyChanged("ENTRYDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Education {
            get {
                return this.EducationField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationField, value) != true)) {
                    this.EducationField = value;
                    this.RaisePropertyChanged("Education");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string marriage {
            get {
                return this.marriageField;
            }
            set {
                if ((object.ReferenceEquals(this.marriageField, value) != true)) {
                    this.marriageField = value;
                    this.RaisePropertyChanged("marriage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ReportChartServiceWS.ReportChartService")]
    public interface ReportChartService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ReportChartService/DoWork", ReplyAction="urn:ReportChartService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ReportChartService/NewGetAllEmployeeentryInfo", ReplyAction="urn:ReportChartService/NewGetAllEmployeeentryInfoResponse")]
        System.IAsyncResult BeginNewGetAllEmployeeentryInfo(string strCompanyid, System.DateTime StartDate, System.DateTime EndDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage> EndNewGetAllEmployeeentryInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ReportChartService/GetPieEmployeeceInfo", ReplyAction="urn:ReportChartService/GetPieEmployeeceInfoResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.ReportChartServiceWS.PieEmployeece))]
        System.IAsyncResult BeginGetPieEmployeeceInfo(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> EndGetPieEmployeeceInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ReportChartService/GetSexPieEmployeeceInfo", ReplyAction="urn:ReportChartService/GetSexPieEmployeeceInfoResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.ReportChartServiceWS.PieEmployeece))]
        System.IAsyncResult BeginGetSexPieEmployeeceInfo(string Companyid, string style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> EndGetSexPieEmployeeceInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ReportChartService/GetEducationPieEmployeeceInfo", ReplyAction="urn:ReportChartService/GetEducationPieEmployeeceInfoResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.ReportChartServiceWS.PieEmployeece))]
        System.IAsyncResult BeginGetEducationPieEmployeeceInfo(string Companyid, string style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> EndGetEducationPieEmployeeceInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ReportChartService/GetAgePieEmployeeceInfo", ReplyAction="urn:ReportChartService/GetAgePieEmployeeceInfoResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.ReportChartServiceWS.PieEmployeece))]
        System.IAsyncResult BeginGetAgePieEmployeeceInfo(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> EndGetAgePieEmployeeceInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ReportChartService/GetLengthServicePie", ReplyAction="urn:ReportChartService/GetLengthServicePieResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.ReportChartServiceWS.PieEmployeece))]
        System.IAsyncResult BeginGetLengthServicePie(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> EndGetLengthServicePie(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ReportChartService/GetAllCompanyInfo", ReplyAction="urn:ReportChartService/GetAllCompanyInfoResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.HRM.UI.ReportChartServiceWS.PieEmployeece))]
        System.IAsyncResult BeginGetAllCompanyInfo(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> EndGetAllCompanyInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ReportChartServiceChannel : SMT.HRM.UI.ReportChartServiceWS.ReportChartService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewGetAllEmployeeentryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewGetAllEmployeeentryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPieEmployeeceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPieEmployeeceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSexPieEmployeeceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSexPieEmployeeceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEducationPieEmployeeceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEducationPieEmployeeceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAgePieEmployeeceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAgePieEmployeeceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLengthServicePieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLengthServicePieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCompanyInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCompanyInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportChartServiceClient : System.ServiceModel.ClientBase<SMT.HRM.UI.ReportChartServiceWS.ReportChartService>, SMT.HRM.UI.ReportChartServiceWS.ReportChartService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewGetAllEmployeeentryInfoDelegate;
        
        private EndOperationDelegate onEndNewGetAllEmployeeentryInfoDelegate;
        
        private System.Threading.SendOrPostCallback onNewGetAllEmployeeentryInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPieEmployeeceInfoDelegate;
        
        private EndOperationDelegate onEndGetPieEmployeeceInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetPieEmployeeceInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSexPieEmployeeceInfoDelegate;
        
        private EndOperationDelegate onEndGetSexPieEmployeeceInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetSexPieEmployeeceInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEducationPieEmployeeceInfoDelegate;
        
        private EndOperationDelegate onEndGetEducationPieEmployeeceInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetEducationPieEmployeeceInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAgePieEmployeeceInfoDelegate;
        
        private EndOperationDelegate onEndGetAgePieEmployeeceInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetAgePieEmployeeceInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLengthServicePieDelegate;
        
        private EndOperationDelegate onEndGetLengthServicePieDelegate;
        
        private System.Threading.SendOrPostCallback onGetLengthServicePieCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCompanyInfoDelegate;
        
        private EndOperationDelegate onEndGetAllCompanyInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCompanyInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ReportChartServiceClient() {
        }
        
        public ReportChartServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportChartServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportChartServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportChartServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<NewGetAllEmployeeentryInfoCompletedEventArgs> NewGetAllEmployeeentryInfoCompleted;
        
        public event System.EventHandler<GetPieEmployeeceInfoCompletedEventArgs> GetPieEmployeeceInfoCompleted;
        
        public event System.EventHandler<GetSexPieEmployeeceInfoCompletedEventArgs> GetSexPieEmployeeceInfoCompleted;
        
        public event System.EventHandler<GetEducationPieEmployeeceInfoCompletedEventArgs> GetEducationPieEmployeeceInfoCompleted;
        
        public event System.EventHandler<GetAgePieEmployeeceInfoCompletedEventArgs> GetAgePieEmployeeceInfoCompleted;
        
        public event System.EventHandler<GetLengthServicePieCompletedEventArgs> GetLengthServicePieCompleted;
        
        public event System.EventHandler<GetAllCompanyInfoCompletedEventArgs> GetAllCompanyInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.ReportChartServiceWS.ReportChartService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.HRM.UI.ReportChartServiceWS.ReportChartService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.ReportChartServiceWS.ReportChartService.BeginNewGetAllEmployeeentryInfo(string strCompanyid, System.DateTime StartDate, System.DateTime EndDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewGetAllEmployeeentryInfo(strCompanyid, StartDate, EndDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage> SMT.HRM.UI.ReportChartServiceWS.ReportChartService.EndNewGetAllEmployeeentryInfo(System.IAsyncResult result) {
            return base.Channel.EndNewGetAllEmployeeentryInfo(result);
        }
        
        private System.IAsyncResult OnBeginNewGetAllEmployeeentryInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strCompanyid = ((string)(inValues[0]));
            System.DateTime StartDate = ((System.DateTime)(inValues[1]));
            System.DateTime EndDate = ((System.DateTime)(inValues[2]));
            return ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).BeginNewGetAllEmployeeentryInfo(strCompanyid, StartDate, EndDate, callback, asyncState);
        }
        
        private object[] OnEndNewGetAllEmployeeentryInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage> retVal = ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).EndNewGetAllEmployeeentryInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewGetAllEmployeeentryInfoCompleted(object state) {
            if ((this.NewGetAllEmployeeentryInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewGetAllEmployeeentryInfoCompleted(this, new NewGetAllEmployeeentryInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewGetAllEmployeeentryInfoAsync(string strCompanyid, System.DateTime StartDate, System.DateTime EndDate) {
            this.NewGetAllEmployeeentryInfoAsync(strCompanyid, StartDate, EndDate, null);
        }
        
        public void NewGetAllEmployeeentryInfoAsync(string strCompanyid, System.DateTime StartDate, System.DateTime EndDate, object userState) {
            if ((this.onBeginNewGetAllEmployeeentryInfoDelegate == null)) {
                this.onBeginNewGetAllEmployeeentryInfoDelegate = new BeginOperationDelegate(this.OnBeginNewGetAllEmployeeentryInfo);
            }
            if ((this.onEndNewGetAllEmployeeentryInfoDelegate == null)) {
                this.onEndNewGetAllEmployeeentryInfoDelegate = new EndOperationDelegate(this.OnEndNewGetAllEmployeeentryInfo);
            }
            if ((this.onNewGetAllEmployeeentryInfoCompletedDelegate == null)) {
                this.onNewGetAllEmployeeentryInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewGetAllEmployeeentryInfoCompleted);
            }
            base.InvokeAsync(this.onBeginNewGetAllEmployeeentryInfoDelegate, new object[] {
                        strCompanyid,
                        StartDate,
                        EndDate}, this.onEndNewGetAllEmployeeentryInfoDelegate, this.onNewGetAllEmployeeentryInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.ReportChartServiceWS.ReportChartService.BeginGetPieEmployeeceInfo(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPieEmployeeceInfo(Companyid, Style, StartDate, EndDate, filterString, paras, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> SMT.HRM.UI.ReportChartServiceWS.ReportChartService.EndGetPieEmployeeceInfo(System.IAsyncResult result) {
            return base.Channel.EndGetPieEmployeeceInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetPieEmployeeceInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Companyid = ((string)(inValues[0]));
            string Style = ((string)(inValues[1]));
            string StartDate = ((string)(inValues[2]));
            string EndDate = ((string)(inValues[3]));
            string filterString = ((string)(inValues[4]));
            System.Collections.ObjectModel.ObservableCollection<object> paras = ((System.Collections.ObjectModel.ObservableCollection<object>)(inValues[5]));
            string userID = ((string)(inValues[6]));
            return ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).BeginGetPieEmployeeceInfo(Companyid, Style, StartDate, EndDate, filterString, paras, userID, callback, asyncState);
        }
        
        private object[] OnEndGetPieEmployeeceInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> retVal = ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).EndGetPieEmployeeceInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPieEmployeeceInfoCompleted(object state) {
            if ((this.GetPieEmployeeceInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPieEmployeeceInfoCompleted(this, new GetPieEmployeeceInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPieEmployeeceInfoAsync(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID) {
            this.GetPieEmployeeceInfoAsync(Companyid, Style, StartDate, EndDate, filterString, paras, userID, null);
        }
        
        public void GetPieEmployeeceInfoAsync(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, object userState) {
            if ((this.onBeginGetPieEmployeeceInfoDelegate == null)) {
                this.onBeginGetPieEmployeeceInfoDelegate = new BeginOperationDelegate(this.OnBeginGetPieEmployeeceInfo);
            }
            if ((this.onEndGetPieEmployeeceInfoDelegate == null)) {
                this.onEndGetPieEmployeeceInfoDelegate = new EndOperationDelegate(this.OnEndGetPieEmployeeceInfo);
            }
            if ((this.onGetPieEmployeeceInfoCompletedDelegate == null)) {
                this.onGetPieEmployeeceInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPieEmployeeceInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetPieEmployeeceInfoDelegate, new object[] {
                        Companyid,
                        Style,
                        StartDate,
                        EndDate,
                        filterString,
                        paras,
                        userID}, this.onEndGetPieEmployeeceInfoDelegate, this.onGetPieEmployeeceInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.ReportChartServiceWS.ReportChartService.BeginGetSexPieEmployeeceInfo(string Companyid, string style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSexPieEmployeeceInfo(Companyid, style, StartDate, EndDate, filterString, paras, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> SMT.HRM.UI.ReportChartServiceWS.ReportChartService.EndGetSexPieEmployeeceInfo(System.IAsyncResult result) {
            return base.Channel.EndGetSexPieEmployeeceInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetSexPieEmployeeceInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Companyid = ((string)(inValues[0]));
            string style = ((string)(inValues[1]));
            string StartDate = ((string)(inValues[2]));
            string EndDate = ((string)(inValues[3]));
            string filterString = ((string)(inValues[4]));
            System.Collections.ObjectModel.ObservableCollection<object> paras = ((System.Collections.ObjectModel.ObservableCollection<object>)(inValues[5]));
            string userID = ((string)(inValues[6]));
            return ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).BeginGetSexPieEmployeeceInfo(Companyid, style, StartDate, EndDate, filterString, paras, userID, callback, asyncState);
        }
        
        private object[] OnEndGetSexPieEmployeeceInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> retVal = ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).EndGetSexPieEmployeeceInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSexPieEmployeeceInfoCompleted(object state) {
            if ((this.GetSexPieEmployeeceInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSexPieEmployeeceInfoCompleted(this, new GetSexPieEmployeeceInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSexPieEmployeeceInfoAsync(string Companyid, string style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID) {
            this.GetSexPieEmployeeceInfoAsync(Companyid, style, StartDate, EndDate, filterString, paras, userID, null);
        }
        
        public void GetSexPieEmployeeceInfoAsync(string Companyid, string style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, object userState) {
            if ((this.onBeginGetSexPieEmployeeceInfoDelegate == null)) {
                this.onBeginGetSexPieEmployeeceInfoDelegate = new BeginOperationDelegate(this.OnBeginGetSexPieEmployeeceInfo);
            }
            if ((this.onEndGetSexPieEmployeeceInfoDelegate == null)) {
                this.onEndGetSexPieEmployeeceInfoDelegate = new EndOperationDelegate(this.OnEndGetSexPieEmployeeceInfo);
            }
            if ((this.onGetSexPieEmployeeceInfoCompletedDelegate == null)) {
                this.onGetSexPieEmployeeceInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSexPieEmployeeceInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetSexPieEmployeeceInfoDelegate, new object[] {
                        Companyid,
                        style,
                        StartDate,
                        EndDate,
                        filterString,
                        paras,
                        userID}, this.onEndGetSexPieEmployeeceInfoDelegate, this.onGetSexPieEmployeeceInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.ReportChartServiceWS.ReportChartService.BeginGetEducationPieEmployeeceInfo(string Companyid, string style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEducationPieEmployeeceInfo(Companyid, style, StartDate, EndDate, filterString, paras, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> SMT.HRM.UI.ReportChartServiceWS.ReportChartService.EndGetEducationPieEmployeeceInfo(System.IAsyncResult result) {
            return base.Channel.EndGetEducationPieEmployeeceInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetEducationPieEmployeeceInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Companyid = ((string)(inValues[0]));
            string style = ((string)(inValues[1]));
            string StartDate = ((string)(inValues[2]));
            string EndDate = ((string)(inValues[3]));
            string filterString = ((string)(inValues[4]));
            System.Collections.ObjectModel.ObservableCollection<object> paras = ((System.Collections.ObjectModel.ObservableCollection<object>)(inValues[5]));
            string userID = ((string)(inValues[6]));
            return ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).BeginGetEducationPieEmployeeceInfo(Companyid, style, StartDate, EndDate, filterString, paras, userID, callback, asyncState);
        }
        
        private object[] OnEndGetEducationPieEmployeeceInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> retVal = ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).EndGetEducationPieEmployeeceInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEducationPieEmployeeceInfoCompleted(object state) {
            if ((this.GetEducationPieEmployeeceInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEducationPieEmployeeceInfoCompleted(this, new GetEducationPieEmployeeceInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEducationPieEmployeeceInfoAsync(string Companyid, string style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID) {
            this.GetEducationPieEmployeeceInfoAsync(Companyid, style, StartDate, EndDate, filterString, paras, userID, null);
        }
        
        public void GetEducationPieEmployeeceInfoAsync(string Companyid, string style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, object userState) {
            if ((this.onBeginGetEducationPieEmployeeceInfoDelegate == null)) {
                this.onBeginGetEducationPieEmployeeceInfoDelegate = new BeginOperationDelegate(this.OnBeginGetEducationPieEmployeeceInfo);
            }
            if ((this.onEndGetEducationPieEmployeeceInfoDelegate == null)) {
                this.onEndGetEducationPieEmployeeceInfoDelegate = new EndOperationDelegate(this.OnEndGetEducationPieEmployeeceInfo);
            }
            if ((this.onGetEducationPieEmployeeceInfoCompletedDelegate == null)) {
                this.onGetEducationPieEmployeeceInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEducationPieEmployeeceInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetEducationPieEmployeeceInfoDelegate, new object[] {
                        Companyid,
                        style,
                        StartDate,
                        EndDate,
                        filterString,
                        paras,
                        userID}, this.onEndGetEducationPieEmployeeceInfoDelegate, this.onGetEducationPieEmployeeceInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.ReportChartServiceWS.ReportChartService.BeginGetAgePieEmployeeceInfo(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAgePieEmployeeceInfo(Companyid, Style, StartDate, EndDate, filterString, paras, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> SMT.HRM.UI.ReportChartServiceWS.ReportChartService.EndGetAgePieEmployeeceInfo(System.IAsyncResult result) {
            return base.Channel.EndGetAgePieEmployeeceInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetAgePieEmployeeceInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Companyid = ((string)(inValues[0]));
            string Style = ((string)(inValues[1]));
            string StartDate = ((string)(inValues[2]));
            string EndDate = ((string)(inValues[3]));
            string filterString = ((string)(inValues[4]));
            System.Collections.ObjectModel.ObservableCollection<object> paras = ((System.Collections.ObjectModel.ObservableCollection<object>)(inValues[5]));
            string userID = ((string)(inValues[6]));
            return ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).BeginGetAgePieEmployeeceInfo(Companyid, Style, StartDate, EndDate, filterString, paras, userID, callback, asyncState);
        }
        
        private object[] OnEndGetAgePieEmployeeceInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> retVal = ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).EndGetAgePieEmployeeceInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAgePieEmployeeceInfoCompleted(object state) {
            if ((this.GetAgePieEmployeeceInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAgePieEmployeeceInfoCompleted(this, new GetAgePieEmployeeceInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAgePieEmployeeceInfoAsync(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID) {
            this.GetAgePieEmployeeceInfoAsync(Companyid, Style, StartDate, EndDate, filterString, paras, userID, null);
        }
        
        public void GetAgePieEmployeeceInfoAsync(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, object userState) {
            if ((this.onBeginGetAgePieEmployeeceInfoDelegate == null)) {
                this.onBeginGetAgePieEmployeeceInfoDelegate = new BeginOperationDelegate(this.OnBeginGetAgePieEmployeeceInfo);
            }
            if ((this.onEndGetAgePieEmployeeceInfoDelegate == null)) {
                this.onEndGetAgePieEmployeeceInfoDelegate = new EndOperationDelegate(this.OnEndGetAgePieEmployeeceInfo);
            }
            if ((this.onGetAgePieEmployeeceInfoCompletedDelegate == null)) {
                this.onGetAgePieEmployeeceInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAgePieEmployeeceInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetAgePieEmployeeceInfoDelegate, new object[] {
                        Companyid,
                        Style,
                        StartDate,
                        EndDate,
                        filterString,
                        paras,
                        userID}, this.onEndGetAgePieEmployeeceInfoDelegate, this.onGetAgePieEmployeeceInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.ReportChartServiceWS.ReportChartService.BeginGetLengthServicePie(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLengthServicePie(Companyid, Style, StartDate, EndDate, filterString, paras, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> SMT.HRM.UI.ReportChartServiceWS.ReportChartService.EndGetLengthServicePie(System.IAsyncResult result) {
            return base.Channel.EndGetLengthServicePie(result);
        }
        
        private System.IAsyncResult OnBeginGetLengthServicePie(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Companyid = ((string)(inValues[0]));
            string Style = ((string)(inValues[1]));
            string StartDate = ((string)(inValues[2]));
            string EndDate = ((string)(inValues[3]));
            string filterString = ((string)(inValues[4]));
            System.Collections.ObjectModel.ObservableCollection<object> paras = ((System.Collections.ObjectModel.ObservableCollection<object>)(inValues[5]));
            string userID = ((string)(inValues[6]));
            return ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).BeginGetLengthServicePie(Companyid, Style, StartDate, EndDate, filterString, paras, userID, callback, asyncState);
        }
        
        private object[] OnEndGetLengthServicePie(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> retVal = ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).EndGetLengthServicePie(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLengthServicePieCompleted(object state) {
            if ((this.GetLengthServicePieCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLengthServicePieCompleted(this, new GetLengthServicePieCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLengthServicePieAsync(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID) {
            this.GetLengthServicePieAsync(Companyid, Style, StartDate, EndDate, filterString, paras, userID, null);
        }
        
        public void GetLengthServicePieAsync(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, object userState) {
            if ((this.onBeginGetLengthServicePieDelegate == null)) {
                this.onBeginGetLengthServicePieDelegate = new BeginOperationDelegate(this.OnBeginGetLengthServicePie);
            }
            if ((this.onEndGetLengthServicePieDelegate == null)) {
                this.onEndGetLengthServicePieDelegate = new EndOperationDelegate(this.OnEndGetLengthServicePie);
            }
            if ((this.onGetLengthServicePieCompletedDelegate == null)) {
                this.onGetLengthServicePieCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLengthServicePieCompleted);
            }
            base.InvokeAsync(this.onBeginGetLengthServicePieDelegate, new object[] {
                        Companyid,
                        Style,
                        StartDate,
                        EndDate,
                        filterString,
                        paras,
                        userID}, this.onEndGetLengthServicePieDelegate, this.onGetLengthServicePieCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.HRM.UI.ReportChartServiceWS.ReportChartService.BeginGetAllCompanyInfo(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCompanyInfo(Companyid, Style, StartDate, EndDate, filterString, paras, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> SMT.HRM.UI.ReportChartServiceWS.ReportChartService.EndGetAllCompanyInfo(System.IAsyncResult result) {
            return base.Channel.EndGetAllCompanyInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCompanyInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Companyid = ((string)(inValues[0]));
            string Style = ((string)(inValues[1]));
            string StartDate = ((string)(inValues[2]));
            string EndDate = ((string)(inValues[3]));
            string filterString = ((string)(inValues[4]));
            System.Collections.ObjectModel.ObservableCollection<object> paras = ((System.Collections.ObjectModel.ObservableCollection<object>)(inValues[5]));
            string userID = ((string)(inValues[6]));
            return ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).BeginGetAllCompanyInfo(Companyid, Style, StartDate, EndDate, filterString, paras, userID, callback, asyncState);
        }
        
        private object[] OnEndGetAllCompanyInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> retVal = ((SMT.HRM.UI.ReportChartServiceWS.ReportChartService)(this)).EndGetAllCompanyInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCompanyInfoCompleted(object state) {
            if ((this.GetAllCompanyInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCompanyInfoCompleted(this, new GetAllCompanyInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCompanyInfoAsync(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID) {
            this.GetAllCompanyInfoAsync(Companyid, Style, StartDate, EndDate, filterString, paras, userID, null);
        }
        
        public void GetAllCompanyInfoAsync(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, object userState) {
            if ((this.onBeginGetAllCompanyInfoDelegate == null)) {
                this.onBeginGetAllCompanyInfoDelegate = new BeginOperationDelegate(this.OnBeginGetAllCompanyInfo);
            }
            if ((this.onEndGetAllCompanyInfoDelegate == null)) {
                this.onEndGetAllCompanyInfoDelegate = new EndOperationDelegate(this.OnEndGetAllCompanyInfo);
            }
            if ((this.onGetAllCompanyInfoCompletedDelegate == null)) {
                this.onGetAllCompanyInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCompanyInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCompanyInfoDelegate, new object[] {
                        Companyid,
                        Style,
                        StartDate,
                        EndDate,
                        filterString,
                        paras,
                        userID}, this.onEndGetAllCompanyInfoDelegate, this.onGetAllCompanyInfoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.HRM.UI.ReportChartServiceWS.ReportChartService CreateChannel() {
            return new ReportChartServiceClientChannel(this);
        }
        
        private class ReportChartServiceClientChannel : ChannelBase<SMT.HRM.UI.ReportChartServiceWS.ReportChartService>, SMT.HRM.UI.ReportChartServiceWS.ReportChartService {
            
            public ReportChartServiceClientChannel(System.ServiceModel.ClientBase<SMT.HRM.UI.ReportChartServiceWS.ReportChartService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginNewGetAllEmployeeentryInfo(string strCompanyid, System.DateTime StartDate, System.DateTime EndDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = strCompanyid;
                _args[1] = StartDate;
                _args[2] = EndDate;
                System.IAsyncResult _result = base.BeginInvoke("NewGetAllEmployeeentryInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage> EndNewGetAllEmployeeentryInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.EmployeeMarriage>)(base.EndInvoke("NewGetAllEmployeeentryInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPieEmployeeceInfo(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = Companyid;
                _args[1] = Style;
                _args[2] = StartDate;
                _args[3] = EndDate;
                _args[4] = filterString;
                _args[5] = paras;
                _args[6] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetPieEmployeeceInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> EndGetPieEmployeeceInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>)(base.EndInvoke("GetPieEmployeeceInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSexPieEmployeeceInfo(string Companyid, string style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = Companyid;
                _args[1] = style;
                _args[2] = StartDate;
                _args[3] = EndDate;
                _args[4] = filterString;
                _args[5] = paras;
                _args[6] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetSexPieEmployeeceInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> EndGetSexPieEmployeeceInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>)(base.EndInvoke("GetSexPieEmployeeceInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEducationPieEmployeeceInfo(string Companyid, string style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = Companyid;
                _args[1] = style;
                _args[2] = StartDate;
                _args[3] = EndDate;
                _args[4] = filterString;
                _args[5] = paras;
                _args[6] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetEducationPieEmployeeceInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> EndGetEducationPieEmployeeceInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>)(base.EndInvoke("GetEducationPieEmployeeceInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAgePieEmployeeceInfo(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = Companyid;
                _args[1] = Style;
                _args[2] = StartDate;
                _args[3] = EndDate;
                _args[4] = filterString;
                _args[5] = paras;
                _args[6] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetAgePieEmployeeceInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> EndGetAgePieEmployeeceInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>)(base.EndInvoke("GetAgePieEmployeeceInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLengthServicePie(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = Companyid;
                _args[1] = Style;
                _args[2] = StartDate;
                _args[3] = EndDate;
                _args[4] = filterString;
                _args[5] = paras;
                _args[6] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetLengthServicePie", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> EndGetLengthServicePie(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>)(base.EndInvoke("GetLengthServicePie", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllCompanyInfo(string Companyid, string Style, string StartDate, string EndDate, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = Companyid;
                _args[1] = Style;
                _args[2] = StartDate;
                _args[3] = EndDate;
                _args[4] = filterString;
                _args[5] = paras;
                _args[6] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetAllCompanyInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> EndGetAllCompanyInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.HRM.UI.ReportChartServiceWS.PieEmployeece>)(base.EndInvoke("GetAllCompanyInfo", _args, result)));
                return _result;
            }
        }
    }
}
