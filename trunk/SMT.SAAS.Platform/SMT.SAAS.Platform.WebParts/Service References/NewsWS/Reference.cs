//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SMT.SAAS.Platform.WebParts.NewsWS {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_NEWS", Namespace="http://schemas.datacontract.org/2004/07/SMT_PF_EFModel", IsReference=true)]
    public partial class T_PF_NEWS : SMT.SAAS.Platform.WebParts.NewsWS.EntityObject {
        
        private string COMMENTCOUNTField;
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private System.Nullable<System.DateTime> ENDDATEField;
        
        private string ISIMAGEField;
        
        private string ISPOPUPField;
        
        private byte[] NEWSCONTENTField;
        
        private string NEWSIDField;
        
        private string NEWSSTATEField;
        
        private string NEWSTITELField;
        
        private string NEWSTYPEIDField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERNAMEField;
        
        private string OWNERPOSTIDField;
        
        private string PUTDEPTIDField;
        
        private string PUTDEPTNAMEField;
        
        private string READCOUNTField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        private string UPDATEUSERNAMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMMENTCOUNT {
            get {
                return this.COMMENTCOUNTField;
            }
            set {
                if ((object.ReferenceEquals(this.COMMENTCOUNTField, value) != true)) {
                    this.COMMENTCOUNTField = value;
                    this.RaisePropertyChanged("COMMENTCOUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ENDDATE {
            get {
                return this.ENDDATEField;
            }
            set {
                if ((this.ENDDATEField.Equals(value) != true)) {
                    this.ENDDATEField = value;
                    this.RaisePropertyChanged("ENDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISIMAGE {
            get {
                return this.ISIMAGEField;
            }
            set {
                if ((object.ReferenceEquals(this.ISIMAGEField, value) != true)) {
                    this.ISIMAGEField = value;
                    this.RaisePropertyChanged("ISIMAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISPOPUP {
            get {
                return this.ISPOPUPField;
            }
            set {
                if ((object.ReferenceEquals(this.ISPOPUPField, value) != true)) {
                    this.ISPOPUPField = value;
                    this.RaisePropertyChanged("ISPOPUP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] NEWSCONTENT {
            get {
                return this.NEWSCONTENTField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSCONTENTField, value) != true)) {
                    this.NEWSCONTENTField = value;
                    this.RaisePropertyChanged("NEWSCONTENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSID {
            get {
                return this.NEWSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSIDField, value) != true)) {
                    this.NEWSIDField = value;
                    this.RaisePropertyChanged("NEWSID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSSTATE {
            get {
                return this.NEWSSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSSTATEField, value) != true)) {
                    this.NEWSSTATEField = value;
                    this.RaisePropertyChanged("NEWSSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSTITEL {
            get {
                return this.NEWSTITELField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSTITELField, value) != true)) {
                    this.NEWSTITELField = value;
                    this.RaisePropertyChanged("NEWSTITEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSTYPEID {
            get {
                return this.NEWSTYPEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSTYPEIDField, value) != true)) {
                    this.NEWSTYPEIDField = value;
                    this.RaisePropertyChanged("NEWSTYPEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERNAME {
            get {
                return this.OWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERNAMEField, value) != true)) {
                    this.OWNERNAMEField = value;
                    this.RaisePropertyChanged("OWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUTDEPTID {
            get {
                return this.PUTDEPTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PUTDEPTIDField, value) != true)) {
                    this.PUTDEPTIDField = value;
                    this.RaisePropertyChanged("PUTDEPTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUTDEPTNAME {
            get {
                return this.PUTDEPTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PUTDEPTNAMEField, value) != true)) {
                    this.PUTDEPTNAMEField = value;
                    this.RaisePropertyChanged("PUTDEPTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string READCOUNT {
            get {
                return this.READCOUNTField;
            }
            set {
                if ((object.ReferenceEquals(this.READCOUNTField, value) != true)) {
                    this.READCOUNTField = value;
                    this.RaisePropertyChanged("READCOUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERNAME {
            get {
                return this.UPDATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERNAMEField, value) != true)) {
                    this.UPDATEUSERNAMEField = value;
                    this.RaisePropertyChanged("UPDATEUSERNAME");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS))]
    public partial class EntityObject : SMT.SAAS.Platform.WebParts.NewsWS.StructuralObject {
        
        private SMT.SAAS.Platform.WebParts.NewsWS.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.SAAS.Platform.WebParts.NewsWS.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_PLATFORMCONFIG", Namespace="http://schemas.datacontract.org/2004/07/SMT_PF_EFModel", IsReference=true)]
    public partial class T_PF_PLATFORMCONFIG : SMT.SAAS.Platform.WebParts.NewsWS.EntityObject {
        
        private string ASSEMPLYNAMEField;
        
        private string CONFIGIDField;
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string FULLNAMEField;
        
        private string INITPARAMSField;
        
        private string ISDEFAULTField;
        
        private string ISRESIZABLEField;
        
        private string ISSYSNEEDField;
        
        private string ISSYSSHORTCUTField;
        
        private string ISWEBPARTField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERNAMEField;
        
        private string OWNERPOSTIDField;
        
        private string PARENTIDField;
        
        private string PIOCPATHField;
        
        private string PROGRAMTYPEField;
        
        private string SYSTEMCODEField;
        
        private string TITELField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> T_PF_USERCONFIGRELEVANCEField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        private string UPDATEUSERNAMEField;
        
        private string USERSTATEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ASSEMPLYNAME {
            get {
                return this.ASSEMPLYNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ASSEMPLYNAMEField, value) != true)) {
                    this.ASSEMPLYNAMEField = value;
                    this.RaisePropertyChanged("ASSEMPLYNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONFIGID {
            get {
                return this.CONFIGIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CONFIGIDField, value) != true)) {
                    this.CONFIGIDField = value;
                    this.RaisePropertyChanged("CONFIGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FULLNAME {
            get {
                return this.FULLNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FULLNAMEField, value) != true)) {
                    this.FULLNAMEField = value;
                    this.RaisePropertyChanged("FULLNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INITPARAMS {
            get {
                return this.INITPARAMSField;
            }
            set {
                if ((object.ReferenceEquals(this.INITPARAMSField, value) != true)) {
                    this.INITPARAMSField = value;
                    this.RaisePropertyChanged("INITPARAMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISDEFAULT {
            get {
                return this.ISDEFAULTField;
            }
            set {
                if ((object.ReferenceEquals(this.ISDEFAULTField, value) != true)) {
                    this.ISDEFAULTField = value;
                    this.RaisePropertyChanged("ISDEFAULT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISRESIZABLE {
            get {
                return this.ISRESIZABLEField;
            }
            set {
                if ((object.ReferenceEquals(this.ISRESIZABLEField, value) != true)) {
                    this.ISRESIZABLEField = value;
                    this.RaisePropertyChanged("ISRESIZABLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISSYSNEED {
            get {
                return this.ISSYSNEEDField;
            }
            set {
                if ((object.ReferenceEquals(this.ISSYSNEEDField, value) != true)) {
                    this.ISSYSNEEDField = value;
                    this.RaisePropertyChanged("ISSYSNEED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISSYSSHORTCUT {
            get {
                return this.ISSYSSHORTCUTField;
            }
            set {
                if ((object.ReferenceEquals(this.ISSYSSHORTCUTField, value) != true)) {
                    this.ISSYSSHORTCUTField = value;
                    this.RaisePropertyChanged("ISSYSSHORTCUT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISWEBPART {
            get {
                return this.ISWEBPARTField;
            }
            set {
                if ((object.ReferenceEquals(this.ISWEBPARTField, value) != true)) {
                    this.ISWEBPARTField = value;
                    this.RaisePropertyChanged("ISWEBPART");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERNAME {
            get {
                return this.OWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERNAMEField, value) != true)) {
                    this.OWNERNAMEField = value;
                    this.RaisePropertyChanged("OWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARENTID {
            get {
                return this.PARENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PARENTIDField, value) != true)) {
                    this.PARENTIDField = value;
                    this.RaisePropertyChanged("PARENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIOCPATH {
            get {
                return this.PIOCPATHField;
            }
            set {
                if ((object.ReferenceEquals(this.PIOCPATHField, value) != true)) {
                    this.PIOCPATHField = value;
                    this.RaisePropertyChanged("PIOCPATH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROGRAMTYPE {
            get {
                return this.PROGRAMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.PROGRAMTYPEField, value) != true)) {
                    this.PROGRAMTYPEField = value;
                    this.RaisePropertyChanged("PROGRAMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMCODE {
            get {
                return this.SYSTEMCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMCODEField, value) != true)) {
                    this.SYSTEMCODEField = value;
                    this.RaisePropertyChanged("SYSTEMCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TITEL {
            get {
                return this.TITELField;
            }
            set {
                if ((object.ReferenceEquals(this.TITELField, value) != true)) {
                    this.TITELField = value;
                    this.RaisePropertyChanged("TITEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> T_PF_USERCONFIGRELEVANCE {
            get {
                return this.T_PF_USERCONFIGRELEVANCEField;
            }
            set {
                if ((object.ReferenceEquals(this.T_PF_USERCONFIGRELEVANCEField, value) != true)) {
                    this.T_PF_USERCONFIGRELEVANCEField = value;
                    this.RaisePropertyChanged("T_PF_USERCONFIGRELEVANCE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERNAME {
            get {
                return this.UPDATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERNAMEField, value) != true)) {
                    this.UPDATEUSERNAMEField = value;
                    this.RaisePropertyChanged("UPDATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERSTATE {
            get {
                return this.USERSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.USERSTATEField, value) != true)) {
                    this.USERSTATEField = value;
                    this.RaisePropertyChanged("USERSTATE");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_USERCONFIGRELEVANCE", Namespace="http://schemas.datacontract.org/2004/07/SMT_PF_EFModel", IsReference=true)]
    public partial class T_PF_USERCONFIGRELEVANCE : SMT.SAAS.Platform.WebParts.NewsWS.EntityObject {
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string CUSTOMPARAMSField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERNAMEField;
        
        private string OWNERPOSTIDField;
        
        private string TEMPLATENAMEField;
        
        private SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG T_PF_PLATFORMCONFIGField;
        
        private SMT.SAAS.Platform.WebParts.NewsWS.EntityReferenceOfT_PF_PLATFORMCONFIGsUifyzDF T_PF_PLATFORMCONFIGReferenceField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        private string UPDATEUSERNAMEField;
        
        private string USERCONFIGRELEVANCEIDField;
        
        private string USERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CUSTOMPARAMS {
            get {
                return this.CUSTOMPARAMSField;
            }
            set {
                if ((object.ReferenceEquals(this.CUSTOMPARAMSField, value) != true)) {
                    this.CUSTOMPARAMSField = value;
                    this.RaisePropertyChanged("CUSTOMPARAMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERNAME {
            get {
                return this.OWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERNAMEField, value) != true)) {
                    this.OWNERNAMEField = value;
                    this.RaisePropertyChanged("OWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TEMPLATENAME {
            get {
                return this.TEMPLATENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TEMPLATENAMEField, value) != true)) {
                    this.TEMPLATENAMEField = value;
                    this.RaisePropertyChanged("TEMPLATENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG T_PF_PLATFORMCONFIG {
            get {
                return this.T_PF_PLATFORMCONFIGField;
            }
            set {
                if ((object.ReferenceEquals(this.T_PF_PLATFORMCONFIGField, value) != true)) {
                    this.T_PF_PLATFORMCONFIGField = value;
                    this.RaisePropertyChanged("T_PF_PLATFORMCONFIG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.SAAS.Platform.WebParts.NewsWS.EntityReferenceOfT_PF_PLATFORMCONFIGsUifyzDF T_PF_PLATFORMCONFIGReference {
            get {
                return this.T_PF_PLATFORMCONFIGReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_PF_PLATFORMCONFIGReferenceField, value) != true)) {
                    this.T_PF_PLATFORMCONFIGReferenceField = value;
                    this.RaisePropertyChanged("T_PF_PLATFORMCONFIGReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERNAME {
            get {
                return this.UPDATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERNAMEField, value) != true)) {
                    this.UPDATEUSERNAMEField = value;
                    this.RaisePropertyChanged("UPDATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERCONFIGRELEVANCEID {
            get {
                return this.USERCONFIGRELEVANCEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.USERCONFIGRELEVANCEIDField, value) != true)) {
                    this.USERCONFIGRELEVANCEIDField = value;
                    this.RaisePropertyChanged("USERCONFIGRELEVANCEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERID {
            get {
                return this.USERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.USERIDField, value) != true)) {
                    this.USERIDField = value;
                    this.RaisePropertyChanged("USERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_PROJECTCONFIG", Namespace="http://schemas.datacontract.org/2004/07/SMT_PF_EFModel", IsReference=true)]
    public partial class T_PF_PROJECTCONFIG : SMT.SAAS.Platform.WebParts.NewsWS.EntityObject {
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string DESCRIPTIONField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERNAMEField;
        
        private string OWNERPOSTIDField;
        
        private string PROJECTIDField;
        
        private string PROJECTNAMEField;
        
        private string SYSTEMCODEField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        private string UPDATEUSERNAMEField;
        
        private string VERSIONFILENAMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DESCRIPTION {
            get {
                return this.DESCRIPTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.DESCRIPTIONField, value) != true)) {
                    this.DESCRIPTIONField = value;
                    this.RaisePropertyChanged("DESCRIPTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERNAME {
            get {
                return this.OWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERNAMEField, value) != true)) {
                    this.OWNERNAMEField = value;
                    this.RaisePropertyChanged("OWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROJECTID {
            get {
                return this.PROJECTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PROJECTIDField, value) != true)) {
                    this.PROJECTIDField = value;
                    this.RaisePropertyChanged("PROJECTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROJECTNAME {
            get {
                return this.PROJECTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PROJECTNAMEField, value) != true)) {
                    this.PROJECTNAMEField = value;
                    this.RaisePropertyChanged("PROJECTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMCODE {
            get {
                return this.SYSTEMCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMCODEField, value) != true)) {
                    this.SYSTEMCODEField = value;
                    this.RaisePropertyChanged("SYSTEMCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERNAME {
            get {
                return this.UPDATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERNAMEField, value) != true)) {
                    this.UPDATEUSERNAMEField = value;
                    this.RaisePropertyChanged("UPDATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VERSIONFILENAME {
            get {
                return this.VERSIONFILENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.VERSIONFILENAMEField, value) != true)) {
                    this.VERSIONFILENAMEField = value;
                    this.RaisePropertyChanged("VERSIONFILENAME");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_USERCONFIG", Namespace="http://schemas.datacontract.org/2004/07/SMT_PF_EFModel", IsReference=true)]
    public partial class T_PF_USERCONFIG : SMT.SAAS.Platform.WebParts.NewsWS.EntityObject {
        
        private string CONFIGINFOField;
        
        private string CONFIGNAMEField;
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERNAMEField;
        
        private string OWNERPOSTIDField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        private string UPDATEUSERNAMEField;
        
        private string USERCONFIGIDField;
        
        private string USERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONFIGINFO {
            get {
                return this.CONFIGINFOField;
            }
            set {
                if ((object.ReferenceEquals(this.CONFIGINFOField, value) != true)) {
                    this.CONFIGINFOField = value;
                    this.RaisePropertyChanged("CONFIGINFO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONFIGNAME {
            get {
                return this.CONFIGNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CONFIGNAMEField, value) != true)) {
                    this.CONFIGNAMEField = value;
                    this.RaisePropertyChanged("CONFIGNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERNAME {
            get {
                return this.OWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERNAMEField, value) != true)) {
                    this.OWNERNAMEField = value;
                    this.RaisePropertyChanged("OWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERNAME {
            get {
                return this.UPDATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERNAMEField, value) != true)) {
                    this.UPDATEUSERNAMEField = value;
                    this.RaisePropertyChanged("UPDATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERCONFIGID {
            get {
                return this.USERCONFIGIDField;
            }
            set {
                if ((object.ReferenceEquals(this.USERCONFIGIDField, value) != true)) {
                    this.USERCONFIGIDField = value;
                    this.RaisePropertyChanged("USERCONFIGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERID {
            get {
                return this.USERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.USERIDField, value) != true)) {
                    this.USERIDField = value;
                    this.RaisePropertyChanged("USERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_DISTRIBUTEUSER", Namespace="http://schemas.datacontract.org/2004/07/SMT_PF_EFModel", IsReference=true)]
    public partial class T_PF_DISTRIBUTEUSER : SMT.SAAS.Platform.WebParts.NewsWS.EntityObject {
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string DISTRIBUTEUSERIDField;
        
        private string FORMIDField;
        
        private string MODELNAMEField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERNAMEField;
        
        private string OWNERPOSTIDField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        private string UPDATEUSERNAMEField;
        
        private string VIEWERField;
        
        private string VIEWTYPEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DISTRIBUTEUSERID {
            get {
                return this.DISTRIBUTEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DISTRIBUTEUSERIDField, value) != true)) {
                    this.DISTRIBUTEUSERIDField = value;
                    this.RaisePropertyChanged("DISTRIBUTEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FORMID {
            get {
                return this.FORMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FORMIDField, value) != true)) {
                    this.FORMIDField = value;
                    this.RaisePropertyChanged("FORMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELNAME {
            get {
                return this.MODELNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELNAMEField, value) != true)) {
                    this.MODELNAMEField = value;
                    this.RaisePropertyChanged("MODELNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERNAME {
            get {
                return this.OWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERNAMEField, value) != true)) {
                    this.OWNERNAMEField = value;
                    this.RaisePropertyChanged("OWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERNAME {
            get {
                return this.UPDATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERNAMEField, value) != true)) {
                    this.UPDATEUSERNAMEField = value;
                    this.RaisePropertyChanged("UPDATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VIEWER {
            get {
                return this.VIEWERField;
            }
            set {
                if ((object.ReferenceEquals(this.VIEWERField, value) != true)) {
                    this.VIEWERField = value;
                    this.RaisePropertyChanged("VIEWER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VIEWTYPE {
            get {
                return this.VIEWTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.VIEWTYPEField, value) != true)) {
                    this.VIEWTYPEField = value;
                    this.RaisePropertyChanged("VIEWTYPE");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.RSSModel>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.RSSModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.EntityReferenceOfT_PF_PLATFORMCONFIGsUifyzDF))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.RelatedEnd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSView))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RSSModel", Namespace="http://schemas.datacontract.org/2004/07/SMT.SAAS.Platform.Services")]
    public partial class RSSModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorField;
        
        private string DescriptionField;
        
        private string LinkField;
        
        private string PubDateField;
        
        private string TitelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PubDate {
            get {
                return this.PubDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PubDateField, value) != true)) {
                    this.PubDateField = value;
                    this.RaisePropertyChanged("PubDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titel {
            get {
                return this.TitelField;
            }
            set {
                if ((object.ReferenceEquals(this.TitelField, value) != true)) {
                    this.TitelField = value;
                    this.RaisePropertyChanged("Titel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfT_PF_PLATFORMCONFIGsUifyzDF", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfT_PF_PLATFORMCONFIGsUifyzDF : SMT.SAAS.Platform.WebParts.NewsWS.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReference", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.EntityReferenceOfT_PF_PLATFORMCONFIGsUifyzDF))]
    public partial class EntityReference : SMT.SAAS.Platform.WebParts.NewsWS.RelatedEnd {
        
        private SMT.SAAS.Platform.WebParts.NewsWS.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.SAAS.Platform.WebParts.NewsWS.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedEnd", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsWS.EntityReferenceOfT_PF_PLATFORMCONFIGsUifyzDF))]
    public partial class RelatedEnd : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_NEWSListView", Namespace="http://schemas.datacontract.org/2004/07/SMT_PF_EFModel")]
    public partial class T_PF_NEWSListView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NEWSIDField;
        
        private string NEWSTATEField;
        
        private string NEWSTITELField;
        
        private string NEWSTYPEIDField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSID {
            get {
                return this.NEWSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSIDField, value) != true)) {
                    this.NEWSIDField = value;
                    this.RaisePropertyChanged("NEWSID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSTATE {
            get {
                return this.NEWSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSTATEField, value) != true)) {
                    this.NEWSTATEField = value;
                    this.RaisePropertyChanged("NEWSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSTITEL {
            get {
                return this.NEWSTITELField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSTITELField, value) != true)) {
                    this.NEWSTITELField = value;
                    this.RaisePropertyChanged("NEWSTITEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSTYPEID {
            get {
                return this.NEWSTYPEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSTYPEIDField, value) != true)) {
                    this.NEWSTYPEIDField = value;
                    this.RaisePropertyChanged("NEWSTYPEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_NEWSView", Namespace="http://schemas.datacontract.org/2004/07/SMT_PF_EFModel")]
    public partial class T_PF_NEWSView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> T_PF_DISTRIBUTEUSERSField;
        
        private SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS T_PF_NEWSField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> T_PF_DISTRIBUTEUSERS {
            get {
                return this.T_PF_DISTRIBUTEUSERSField;
            }
            set {
                if ((object.ReferenceEquals(this.T_PF_DISTRIBUTEUSERSField, value) != true)) {
                    this.T_PF_DISTRIBUTEUSERSField = value;
                    this.RaisePropertyChanged("T_PF_DISTRIBUTEUSERS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS T_PF_NEWS {
            get {
                return this.T_PF_NEWSField;
            }
            set {
                if ((object.ReferenceEquals(this.T_PF_NEWSField, value) != true)) {
                    this.T_PF_NEWSField = value;
                    this.RaisePropertyChanged("T_PF_NEWS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsWS.IPlatformServices")]
    public interface IPlatformServices {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetImageNewsList", ReplyAction="http://tempuri.org/IPlatformServices/GetImageNewsListResponse")]
        System.IAsyncResult BeginGetImageNewsList(int topCount, string state, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> EndGetImageNewsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetNewsListByPage", ReplyAction="http://tempuri.org/IPlatformServices/GetNewsListByPageResponse")]
        System.IAsyncResult BeginGetNewsListByPage(int pageIndex, int pageSize, string sort, string filterString, ref int pageCount, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> EndGetNewsListByPage(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetWebPartList", ReplyAction="http://tempuri.org/IPlatformServices/GetWebPartListResponse")]
        System.IAsyncResult BeginGetWebPartList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG> EndGetWebPartList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetWebPartListByState", ReplyAction="http://tempuri.org/IPlatformServices/GetWebPartListByStateResponse")]
        System.IAsyncResult BeginGetWebPartListByState(string _state, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG> EndGetWebPartListByState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetUserWebPartsByUserID", ReplyAction="http://tempuri.org/IPlatformServices/GetUserWebPartsByUserIDResponse")]
        System.IAsyncResult BeginGetUserWebPartsByUserID(string _userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> EndGetUserWebPartsByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetUserShortCutByUserID", ReplyAction="http://tempuri.org/IPlatformServices/GetUserShortCutByUserIDResponse")]
        System.IAsyncResult BeginGetUserShortCutByUserID(string _userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> EndGetUserShortCutByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/RefreshUserWebPartList", ReplyAction="http://tempuri.org/IPlatformServices/RefreshUserWebPartListResponse")]
        System.IAsyncResult BeginRefreshUserWebPartList(string _userID, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshUserWebPartList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/RefreshUserShortCutList", ReplyAction="http://tempuri.org/IPlatformServices/RefreshUserShortCutListResponse")]
        System.IAsyncResult BeginRefreshUserShortCutList(string _userID, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshUserShortCutList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetPopupNewsList", ReplyAction="http://tempuri.org/IPlatformServices/GetPopupNewsListResponse")]
        System.IAsyncResult BeginGetPopupNewsList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> EndGetPopupNewsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetNewsListByMobile", ReplyAction="http://tempuri.org/IPlatformServices/GetNewsListByMobileResponse")]
        System.IAsyncResult BeginGetNewsListByMobile(int pageIndex, int pageSize, string sort, string filterString, ref int pageCount, ref int rowCount, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> EndGetNewsListByMobile(ref int pageCount, ref int rowCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetRssSource", ReplyAction="http://tempuri.org/IPlatformServices/GetRssSourceResponse")]
        System.IAsyncResult BeginGetRssSource(string rssAddress, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.RSSModel> EndGetRssSource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/AddPlatformConfig", ReplyAction="http://tempuri.org/IPlatformServices/AddPlatformConfigResponse")]
        System.IAsyncResult BeginAddPlatformConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG model, System.AsyncCallback callback, object asyncState);
        
        bool EndAddPlatformConfig(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/UpdatePlatformConfig", ReplyAction="http://tempuri.org/IPlatformServices/UpdatePlatformConfigResponse")]
        System.IAsyncResult BeginUpdatePlatformConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG model, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdatePlatformConfig(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/DeletePlatformConfig", ReplyAction="http://tempuri.org/IPlatformServices/DeletePlatformConfigResponse")]
        System.IAsyncResult BeginDeletePlatformConfig(string _configID, System.AsyncCallback callback, object asyncState);
        
        bool EndDeletePlatformConfig(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetPlatformConfigModelByID", ReplyAction="http://tempuri.org/IPlatformServices/GetPlatformConfigModelByIDResponse")]
        System.IAsyncResult BeginGetPlatformConfigModelByID(string _configID, System.AsyncCallback callback, object asyncState);
        
        SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG EndGetPlatformConfigModelByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/AddProjectConfig", ReplyAction="http://tempuri.org/IPlatformServices/AddProjectConfigResponse")]
        System.IAsyncResult BeginAddProjectConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG model, System.AsyncCallback callback, object asyncState);
        
        bool EndAddProjectConfig(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/UpdateProjectConfig", ReplyAction="http://tempuri.org/IPlatformServices/UpdateProjectConfigResponse")]
        System.IAsyncResult BeginUpdateProjectConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG model, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateProjectConfig(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/DeleteProjectConfig", ReplyAction="http://tempuri.org/IPlatformServices/DeleteProjectConfigResponse")]
        System.IAsyncResult BeginDeleteProjectConfig(string _configID, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteProjectConfig(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetProjectConfigModelByID", ReplyAction="http://tempuri.org/IPlatformServices/GetProjectConfigModelByIDResponse")]
        System.IAsyncResult BeginGetProjectConfigModelByID(string _configID, System.AsyncCallback callback, object asyncState);
        
        SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG EndGetProjectConfigModelByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/AddUserConfigRelevance", ReplyAction="http://tempuri.org/IPlatformServices/AddUserConfigRelevanceResponse")]
        System.IAsyncResult BeginAddUserConfigRelevance(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE model, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUserConfigRelevance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/UpdateUserConfigRelevance", ReplyAction="http://tempuri.org/IPlatformServices/UpdateUserConfigRelevanceResponse")]
        System.IAsyncResult BeginUpdateUserConfigRelevance(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE model, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateUserConfigRelevance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/DeleteUserConfigRelevance", ReplyAction="http://tempuri.org/IPlatformServices/DeleteUserConfigRelevanceResponse")]
        System.IAsyncResult BeginDeleteUserConfigRelevance(string _configID, string _userID, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteUserConfigRelevance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/AddUserRelevanceConfig", ReplyAction="http://tempuri.org/IPlatformServices/AddUserRelevanceConfigResponse")]
        System.IAsyncResult BeginAddUserRelevanceConfig(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> _configList, bool iswebpart, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUserRelevanceConfig(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/AddUserConfig", ReplyAction="http://tempuri.org/IPlatformServices/AddUserConfigResponse")]
        System.IAsyncResult BeginAddUserConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG model, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUserConfig(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/UpdateUserConfig", ReplyAction="http://tempuri.org/IPlatformServices/UpdateUserConfigResponse")]
        System.IAsyncResult BeginUpdateUserConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG model, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateUserConfig(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/DeleteUserConfig", ReplyAction="http://tempuri.org/IPlatformServices/DeleteUserConfigResponse")]
        System.IAsyncResult BeginDeleteUserConfig(string _userConfigID, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteUserConfig(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetUserConfigModelByID", ReplyAction="http://tempuri.org/IPlatformServices/GetUserConfigModelByIDResponse")]
        System.IAsyncResult BeginGetUserConfigModelByID(string _userConfigID, System.AsyncCallback callback, object asyncState);
        
        SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG EndGetUserConfigModelByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/AddNews", ReplyAction="http://tempuri.org/IPlatformServices/AddNewsResponse")]
        System.IAsyncResult BeginAddNews(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/AddNewsByViewer", ReplyAction="http://tempuri.org/IPlatformServices/AddNewsByViewerResponse")]
        System.IAsyncResult BeginAddNewsByViewer(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> _viewer, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewsByViewer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/UpdateNews", ReplyAction="http://tempuri.org/IPlatformServices/UpdateNewsResponse")]
        System.IAsyncResult BeginUpdateNews(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> _viewer, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/DeleteNews", ReplyAction="http://tempuri.org/IPlatformServices/DeleteNewsResponse")]
        System.IAsyncResult BeginDeleteNews(string _newsID, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetNewsModelByID", ReplyAction="http://tempuri.org/IPlatformServices/GetNewsModelByIDResponse")]
        System.IAsyncResult BeginGetNewsModelByID(string _newsID, System.AsyncCallback callback, object asyncState);
        
        SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS EndGetNewsModelByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetNewsDetailsByID", ReplyAction="http://tempuri.org/IPlatformServices/GetNewsDetailsByIDResponse")]
        System.IAsyncResult BeginGetNewsDetailsByID(string _newsID, System.AsyncCallback callback, object asyncState);
        
        SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSView EndGetNewsDetailsByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetNewsList", ReplyAction="http://tempuri.org/IPlatformServices/GetNewsListResponse")]
        System.IAsyncResult BeginGetNewsList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> EndGetNewsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetNewsLists", ReplyAction="http://tempuri.org/IPlatformServices/GetNewsListsResponse")]
        System.IAsyncResult BeginGetNewsLists(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER>> EndGetNewsLists(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetNewsListByParams", ReplyAction="http://tempuri.org/IPlatformServices/GetNewsListByParamsResponse")]
        System.IAsyncResult BeginGetNewsListByParams(string type, int topCount, string state, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> EndGetNewsListByParams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetNewsListByEmployeeID", ReplyAction="http://tempuri.org/IPlatformServices/GetNewsListByEmployeeIDResponse")]
        System.IAsyncResult BeginGetNewsListByEmployeeID(string type, int topCount, string state, string employeeID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> EndGetNewsListByEmployeeID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetNewsListByState", ReplyAction="http://tempuri.org/IPlatformServices/GetNewsListByStateResponse")]
        System.IAsyncResult BeginGetNewsListByState(string state, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> EndGetNewsListByState(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlatformServicesChannel : SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetImageNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetImageNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWebPartListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWebPartListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWebPartListByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWebPartListByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserWebPartsByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserWebPartsByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserShortCutByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserShortCutByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPopupNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPopupNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListByMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListByMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public int rowCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView>)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRssSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRssSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.RSSModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.RSSModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddPlatformConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddPlatformConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdatePlatformConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePlatformConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePlatformConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePlatformConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlatformConfigModelByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlatformConfigModelByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddProjectConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddProjectConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateProjectConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateProjectConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteProjectConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteProjectConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjectConfigModelByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjectConfigModelByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUserConfigRelevanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUserConfigRelevanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateUserConfigRelevanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateUserConfigRelevanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteUserConfigRelevanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteUserConfigRelevanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUserRelevanceConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUserRelevanceConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUserConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUserConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateUserConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateUserConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteUserConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteUserConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserConfigModelByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserConfigModelByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewsByViewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewsByViewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsModelByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsModelByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsDetailsByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsDetailsByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSView Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSView)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListByParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListByParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListByEmployeeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListByEmployeeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlatformServicesClient : System.ServiceModel.ClientBase<SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices>, SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices {
        
        private BeginOperationDelegate onBeginGetImageNewsListDelegate;
        
        private EndOperationDelegate onEndGetImageNewsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetImageNewsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListByPageDelegate;
        
        private EndOperationDelegate onEndGetNewsListByPageDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWebPartListDelegate;
        
        private EndOperationDelegate onEndGetWebPartListDelegate;
        
        private System.Threading.SendOrPostCallback onGetWebPartListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWebPartListByStateDelegate;
        
        private EndOperationDelegate onEndGetWebPartListByStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetWebPartListByStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserWebPartsByUserIDDelegate;
        
        private EndOperationDelegate onEndGetUserWebPartsByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserWebPartsByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserShortCutByUserIDDelegate;
        
        private EndOperationDelegate onEndGetUserShortCutByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserShortCutByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginRefreshUserWebPartListDelegate;
        
        private EndOperationDelegate onEndRefreshUserWebPartListDelegate;
        
        private System.Threading.SendOrPostCallback onRefreshUserWebPartListCompletedDelegate;
        
        private BeginOperationDelegate onBeginRefreshUserShortCutListDelegate;
        
        private EndOperationDelegate onEndRefreshUserShortCutListDelegate;
        
        private System.Threading.SendOrPostCallback onRefreshUserShortCutListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPopupNewsListDelegate;
        
        private EndOperationDelegate onEndGetPopupNewsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPopupNewsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListByMobileDelegate;
        
        private EndOperationDelegate onEndGetNewsListByMobileDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListByMobileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRssSourceDelegate;
        
        private EndOperationDelegate onEndGetRssSourceDelegate;
        
        private System.Threading.SendOrPostCallback onGetRssSourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPlatformConfigDelegate;
        
        private EndOperationDelegate onEndAddPlatformConfigDelegate;
        
        private System.Threading.SendOrPostCallback onAddPlatformConfigCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePlatformConfigDelegate;
        
        private EndOperationDelegate onEndUpdatePlatformConfigDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePlatformConfigCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePlatformConfigDelegate;
        
        private EndOperationDelegate onEndDeletePlatformConfigDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePlatformConfigCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlatformConfigModelByIDDelegate;
        
        private EndOperationDelegate onEndGetPlatformConfigModelByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlatformConfigModelByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddProjectConfigDelegate;
        
        private EndOperationDelegate onEndAddProjectConfigDelegate;
        
        private System.Threading.SendOrPostCallback onAddProjectConfigCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateProjectConfigDelegate;
        
        private EndOperationDelegate onEndUpdateProjectConfigDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateProjectConfigCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteProjectConfigDelegate;
        
        private EndOperationDelegate onEndDeleteProjectConfigDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteProjectConfigCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjectConfigModelByIDDelegate;
        
        private EndOperationDelegate onEndGetProjectConfigModelByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjectConfigModelByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUserConfigRelevanceDelegate;
        
        private EndOperationDelegate onEndAddUserConfigRelevanceDelegate;
        
        private System.Threading.SendOrPostCallback onAddUserConfigRelevanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateUserConfigRelevanceDelegate;
        
        private EndOperationDelegate onEndUpdateUserConfigRelevanceDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateUserConfigRelevanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserConfigRelevanceDelegate;
        
        private EndOperationDelegate onEndDeleteUserConfigRelevanceDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserConfigRelevanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUserRelevanceConfigDelegate;
        
        private EndOperationDelegate onEndAddUserRelevanceConfigDelegate;
        
        private System.Threading.SendOrPostCallback onAddUserRelevanceConfigCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUserConfigDelegate;
        
        private EndOperationDelegate onEndAddUserConfigDelegate;
        
        private System.Threading.SendOrPostCallback onAddUserConfigCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateUserConfigDelegate;
        
        private EndOperationDelegate onEndUpdateUserConfigDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateUserConfigCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserConfigDelegate;
        
        private EndOperationDelegate onEndDeleteUserConfigDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserConfigCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserConfigModelByIDDelegate;
        
        private EndOperationDelegate onEndGetUserConfigModelByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserConfigModelByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewsDelegate;
        
        private EndOperationDelegate onEndAddNewsDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewsByViewerDelegate;
        
        private EndOperationDelegate onEndAddNewsByViewerDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewsByViewerCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateNewsDelegate;
        
        private EndOperationDelegate onEndUpdateNewsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteNewsDelegate;
        
        private EndOperationDelegate onEndDeleteNewsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsModelByIDDelegate;
        
        private EndOperationDelegate onEndGetNewsModelByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsModelByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsDetailsByIDDelegate;
        
        private EndOperationDelegate onEndGetNewsDetailsByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsDetailsByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListDelegate;
        
        private EndOperationDelegate onEndGetNewsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListsDelegate;
        
        private EndOperationDelegate onEndGetNewsListsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListByParamsDelegate;
        
        private EndOperationDelegate onEndGetNewsListByParamsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListByParamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListByEmployeeIDDelegate;
        
        private EndOperationDelegate onEndGetNewsListByEmployeeIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListByEmployeeIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListByStateDelegate;
        
        private EndOperationDelegate onEndGetNewsListByStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListByStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PlatformServicesClient() {
        }
        
        public PlatformServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlatformServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlatformServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlatformServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetImageNewsListCompletedEventArgs> GetImageNewsListCompleted;
        
        public event System.EventHandler<GetNewsListByPageCompletedEventArgs> GetNewsListByPageCompleted;
        
        public event System.EventHandler<GetWebPartListCompletedEventArgs> GetWebPartListCompleted;
        
        public event System.EventHandler<GetWebPartListByStateCompletedEventArgs> GetWebPartListByStateCompleted;
        
        public event System.EventHandler<GetUserWebPartsByUserIDCompletedEventArgs> GetUserWebPartsByUserIDCompleted;
        
        public event System.EventHandler<GetUserShortCutByUserIDCompletedEventArgs> GetUserShortCutByUserIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RefreshUserWebPartListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RefreshUserShortCutListCompleted;
        
        public event System.EventHandler<GetPopupNewsListCompletedEventArgs> GetPopupNewsListCompleted;
        
        public event System.EventHandler<GetNewsListByMobileCompletedEventArgs> GetNewsListByMobileCompleted;
        
        public event System.EventHandler<GetRssSourceCompletedEventArgs> GetRssSourceCompleted;
        
        public event System.EventHandler<AddPlatformConfigCompletedEventArgs> AddPlatformConfigCompleted;
        
        public event System.EventHandler<UpdatePlatformConfigCompletedEventArgs> UpdatePlatformConfigCompleted;
        
        public event System.EventHandler<DeletePlatformConfigCompletedEventArgs> DeletePlatformConfigCompleted;
        
        public event System.EventHandler<GetPlatformConfigModelByIDCompletedEventArgs> GetPlatformConfigModelByIDCompleted;
        
        public event System.EventHandler<AddProjectConfigCompletedEventArgs> AddProjectConfigCompleted;
        
        public event System.EventHandler<UpdateProjectConfigCompletedEventArgs> UpdateProjectConfigCompleted;
        
        public event System.EventHandler<DeleteProjectConfigCompletedEventArgs> DeleteProjectConfigCompleted;
        
        public event System.EventHandler<GetProjectConfigModelByIDCompletedEventArgs> GetProjectConfigModelByIDCompleted;
        
        public event System.EventHandler<AddUserConfigRelevanceCompletedEventArgs> AddUserConfigRelevanceCompleted;
        
        public event System.EventHandler<UpdateUserConfigRelevanceCompletedEventArgs> UpdateUserConfigRelevanceCompleted;
        
        public event System.EventHandler<DeleteUserConfigRelevanceCompletedEventArgs> DeleteUserConfigRelevanceCompleted;
        
        public event System.EventHandler<AddUserRelevanceConfigCompletedEventArgs> AddUserRelevanceConfigCompleted;
        
        public event System.EventHandler<AddUserConfigCompletedEventArgs> AddUserConfigCompleted;
        
        public event System.EventHandler<UpdateUserConfigCompletedEventArgs> UpdateUserConfigCompleted;
        
        public event System.EventHandler<DeleteUserConfigCompletedEventArgs> DeleteUserConfigCompleted;
        
        public event System.EventHandler<GetUserConfigModelByIDCompletedEventArgs> GetUserConfigModelByIDCompleted;
        
        public event System.EventHandler<AddNewsCompletedEventArgs> AddNewsCompleted;
        
        public event System.EventHandler<AddNewsByViewerCompletedEventArgs> AddNewsByViewerCompleted;
        
        public event System.EventHandler<UpdateNewsCompletedEventArgs> UpdateNewsCompleted;
        
        public event System.EventHandler<DeleteNewsCompletedEventArgs> DeleteNewsCompleted;
        
        public event System.EventHandler<GetNewsModelByIDCompletedEventArgs> GetNewsModelByIDCompleted;
        
        public event System.EventHandler<GetNewsDetailsByIDCompletedEventArgs> GetNewsDetailsByIDCompleted;
        
        public event System.EventHandler<GetNewsListCompletedEventArgs> GetNewsListCompleted;
        
        public event System.EventHandler<GetNewsListsCompletedEventArgs> GetNewsListsCompleted;
        
        public event System.EventHandler<GetNewsListByParamsCompletedEventArgs> GetNewsListByParamsCompleted;
        
        public event System.EventHandler<GetNewsListByEmployeeIDCompletedEventArgs> GetNewsListByEmployeeIDCompleted;
        
        public event System.EventHandler<GetNewsListByStateCompletedEventArgs> GetNewsListByStateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetImageNewsList(int topCount, string state, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetImageNewsList(topCount, state, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetImageNewsList(System.IAsyncResult result) {
            return base.Channel.EndGetImageNewsList(result);
        }
        
        private System.IAsyncResult OnBeginGetImageNewsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int topCount = ((int)(inValues[0]));
            string state = ((string)(inValues[1]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetImageNewsList(topCount, state, callback, asyncState);
        }
        
        private object[] OnEndGetImageNewsList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetImageNewsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetImageNewsListCompleted(object state) {
            if ((this.GetImageNewsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetImageNewsListCompleted(this, new GetImageNewsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetImageNewsListAsync(int topCount, string state) {
            this.GetImageNewsListAsync(topCount, state, null);
        }
        
        public void GetImageNewsListAsync(int topCount, string state, object userState) {
            if ((this.onBeginGetImageNewsListDelegate == null)) {
                this.onBeginGetImageNewsListDelegate = new BeginOperationDelegate(this.OnBeginGetImageNewsList);
            }
            if ((this.onEndGetImageNewsListDelegate == null)) {
                this.onEndGetImageNewsListDelegate = new EndOperationDelegate(this.OnEndGetImageNewsList);
            }
            if ((this.onGetImageNewsListCompletedDelegate == null)) {
                this.onGetImageNewsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetImageNewsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetImageNewsListDelegate, new object[] {
                        topCount,
                        state}, this.onEndGetImageNewsListDelegate, this.onGetImageNewsListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetNewsListByPage(int pageIndex, int pageSize, string sort, string filterString, ref int pageCount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsListByPage(pageIndex, pageSize, sort, filterString, ref pageCount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetNewsListByPage(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetNewsListByPage(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetNewsListByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            int pageCount = ((int)(inValues[4]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetNewsListByPage(pageIndex, pageSize, sort, filterString, ref pageCount, callback, asyncState);
        }
        
        private object[] OnEndGetNewsListByPage(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetNewsListByPage(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetNewsListByPageCompleted(object state) {
            if ((this.GetNewsListByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListByPageCompleted(this, new GetNewsListByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListByPageAsync(int pageIndex, int pageSize, string sort, string filterString, int pageCount) {
            this.GetNewsListByPageAsync(pageIndex, pageSize, sort, filterString, pageCount, null);
        }
        
        public void GetNewsListByPageAsync(int pageIndex, int pageSize, string sort, string filterString, int pageCount, object userState) {
            if ((this.onBeginGetNewsListByPageDelegate == null)) {
                this.onBeginGetNewsListByPageDelegate = new BeginOperationDelegate(this.OnBeginGetNewsListByPage);
            }
            if ((this.onEndGetNewsListByPageDelegate == null)) {
                this.onEndGetNewsListByPageDelegate = new EndOperationDelegate(this.OnEndGetNewsListByPage);
            }
            if ((this.onGetNewsListByPageCompletedDelegate == null)) {
                this.onGetNewsListByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListByPageCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListByPageDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        pageCount}, this.onEndGetNewsListByPageDelegate, this.onGetNewsListByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetWebPartList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWebPartList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetWebPartList(System.IAsyncResult result) {
            return base.Channel.EndGetWebPartList(result);
        }
        
        private System.IAsyncResult OnBeginGetWebPartList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetWebPartList(callback, asyncState);
        }
        
        private object[] OnEndGetWebPartList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetWebPartList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWebPartListCompleted(object state) {
            if ((this.GetWebPartListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWebPartListCompleted(this, new GetWebPartListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWebPartListAsync() {
            this.GetWebPartListAsync(null);
        }
        
        public void GetWebPartListAsync(object userState) {
            if ((this.onBeginGetWebPartListDelegate == null)) {
                this.onBeginGetWebPartListDelegate = new BeginOperationDelegate(this.OnBeginGetWebPartList);
            }
            if ((this.onEndGetWebPartListDelegate == null)) {
                this.onEndGetWebPartListDelegate = new EndOperationDelegate(this.OnEndGetWebPartList);
            }
            if ((this.onGetWebPartListCompletedDelegate == null)) {
                this.onGetWebPartListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWebPartListCompleted);
            }
            base.InvokeAsync(this.onBeginGetWebPartListDelegate, null, this.onEndGetWebPartListDelegate, this.onGetWebPartListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetWebPartListByState(string _state, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWebPartListByState(_state, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetWebPartListByState(System.IAsyncResult result) {
            return base.Channel.EndGetWebPartListByState(result);
        }
        
        private System.IAsyncResult OnBeginGetWebPartListByState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _state = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetWebPartListByState(_state, callback, asyncState);
        }
        
        private object[] OnEndGetWebPartListByState(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetWebPartListByState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWebPartListByStateCompleted(object state) {
            if ((this.GetWebPartListByStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWebPartListByStateCompleted(this, new GetWebPartListByStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWebPartListByStateAsync(string _state) {
            this.GetWebPartListByStateAsync(_state, null);
        }
        
        public void GetWebPartListByStateAsync(string _state, object userState) {
            if ((this.onBeginGetWebPartListByStateDelegate == null)) {
                this.onBeginGetWebPartListByStateDelegate = new BeginOperationDelegate(this.OnBeginGetWebPartListByState);
            }
            if ((this.onEndGetWebPartListByStateDelegate == null)) {
                this.onEndGetWebPartListByStateDelegate = new EndOperationDelegate(this.OnEndGetWebPartListByState);
            }
            if ((this.onGetWebPartListByStateCompletedDelegate == null)) {
                this.onGetWebPartListByStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWebPartListByStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetWebPartListByStateDelegate, new object[] {
                        _state}, this.onEndGetWebPartListByStateDelegate, this.onGetWebPartListByStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetUserWebPartsByUserID(string _userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserWebPartsByUserID(_userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetUserWebPartsByUserID(System.IAsyncResult result) {
            return base.Channel.EndGetUserWebPartsByUserID(result);
        }
        
        private System.IAsyncResult OnBeginGetUserWebPartsByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _userID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetUserWebPartsByUserID(_userID, callback, asyncState);
        }
        
        private object[] OnEndGetUserWebPartsByUserID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetUserWebPartsByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserWebPartsByUserIDCompleted(object state) {
            if ((this.GetUserWebPartsByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserWebPartsByUserIDCompleted(this, new GetUserWebPartsByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserWebPartsByUserIDAsync(string _userID) {
            this.GetUserWebPartsByUserIDAsync(_userID, null);
        }
        
        public void GetUserWebPartsByUserIDAsync(string _userID, object userState) {
            if ((this.onBeginGetUserWebPartsByUserIDDelegate == null)) {
                this.onBeginGetUserWebPartsByUserIDDelegate = new BeginOperationDelegate(this.OnBeginGetUserWebPartsByUserID);
            }
            if ((this.onEndGetUserWebPartsByUserIDDelegate == null)) {
                this.onEndGetUserWebPartsByUserIDDelegate = new EndOperationDelegate(this.OnEndGetUserWebPartsByUserID);
            }
            if ((this.onGetUserWebPartsByUserIDCompletedDelegate == null)) {
                this.onGetUserWebPartsByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserWebPartsByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserWebPartsByUserIDDelegate, new object[] {
                        _userID}, this.onEndGetUserWebPartsByUserIDDelegate, this.onGetUserWebPartsByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetUserShortCutByUserID(string _userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserShortCutByUserID(_userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetUserShortCutByUserID(System.IAsyncResult result) {
            return base.Channel.EndGetUserShortCutByUserID(result);
        }
        
        private System.IAsyncResult OnBeginGetUserShortCutByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _userID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetUserShortCutByUserID(_userID, callback, asyncState);
        }
        
        private object[] OnEndGetUserShortCutByUserID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetUserShortCutByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserShortCutByUserIDCompleted(object state) {
            if ((this.GetUserShortCutByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserShortCutByUserIDCompleted(this, new GetUserShortCutByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserShortCutByUserIDAsync(string _userID) {
            this.GetUserShortCutByUserIDAsync(_userID, null);
        }
        
        public void GetUserShortCutByUserIDAsync(string _userID, object userState) {
            if ((this.onBeginGetUserShortCutByUserIDDelegate == null)) {
                this.onBeginGetUserShortCutByUserIDDelegate = new BeginOperationDelegate(this.OnBeginGetUserShortCutByUserID);
            }
            if ((this.onEndGetUserShortCutByUserIDDelegate == null)) {
                this.onEndGetUserShortCutByUserIDDelegate = new EndOperationDelegate(this.OnEndGetUserShortCutByUserID);
            }
            if ((this.onGetUserShortCutByUserIDCompletedDelegate == null)) {
                this.onGetUserShortCutByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserShortCutByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserShortCutByUserIDDelegate, new object[] {
                        _userID}, this.onEndGetUserShortCutByUserIDDelegate, this.onGetUserShortCutByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginRefreshUserWebPartList(string _userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRefreshUserWebPartList(_userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndRefreshUserWebPartList(System.IAsyncResult result) {
            base.Channel.EndRefreshUserWebPartList(result);
        }
        
        private System.IAsyncResult OnBeginRefreshUserWebPartList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _userID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginRefreshUserWebPartList(_userID, callback, asyncState);
        }
        
        private object[] OnEndRefreshUserWebPartList(System.IAsyncResult result) {
            ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndRefreshUserWebPartList(result);
            return null;
        }
        
        private void OnRefreshUserWebPartListCompleted(object state) {
            if ((this.RefreshUserWebPartListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RefreshUserWebPartListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RefreshUserWebPartListAsync(string _userID) {
            this.RefreshUserWebPartListAsync(_userID, null);
        }
        
        public void RefreshUserWebPartListAsync(string _userID, object userState) {
            if ((this.onBeginRefreshUserWebPartListDelegate == null)) {
                this.onBeginRefreshUserWebPartListDelegate = new BeginOperationDelegate(this.OnBeginRefreshUserWebPartList);
            }
            if ((this.onEndRefreshUserWebPartListDelegate == null)) {
                this.onEndRefreshUserWebPartListDelegate = new EndOperationDelegate(this.OnEndRefreshUserWebPartList);
            }
            if ((this.onRefreshUserWebPartListCompletedDelegate == null)) {
                this.onRefreshUserWebPartListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRefreshUserWebPartListCompleted);
            }
            base.InvokeAsync(this.onBeginRefreshUserWebPartListDelegate, new object[] {
                        _userID}, this.onEndRefreshUserWebPartListDelegate, this.onRefreshUserWebPartListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginRefreshUserShortCutList(string _userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRefreshUserShortCutList(_userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndRefreshUserShortCutList(System.IAsyncResult result) {
            base.Channel.EndRefreshUserShortCutList(result);
        }
        
        private System.IAsyncResult OnBeginRefreshUserShortCutList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _userID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginRefreshUserShortCutList(_userID, callback, asyncState);
        }
        
        private object[] OnEndRefreshUserShortCutList(System.IAsyncResult result) {
            ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndRefreshUserShortCutList(result);
            return null;
        }
        
        private void OnRefreshUserShortCutListCompleted(object state) {
            if ((this.RefreshUserShortCutListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RefreshUserShortCutListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RefreshUserShortCutListAsync(string _userID) {
            this.RefreshUserShortCutListAsync(_userID, null);
        }
        
        public void RefreshUserShortCutListAsync(string _userID, object userState) {
            if ((this.onBeginRefreshUserShortCutListDelegate == null)) {
                this.onBeginRefreshUserShortCutListDelegate = new BeginOperationDelegate(this.OnBeginRefreshUserShortCutList);
            }
            if ((this.onEndRefreshUserShortCutListDelegate == null)) {
                this.onEndRefreshUserShortCutListDelegate = new EndOperationDelegate(this.OnEndRefreshUserShortCutList);
            }
            if ((this.onRefreshUserShortCutListCompletedDelegate == null)) {
                this.onRefreshUserShortCutListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRefreshUserShortCutListCompleted);
            }
            base.InvokeAsync(this.onBeginRefreshUserShortCutListDelegate, new object[] {
                        _userID}, this.onEndRefreshUserShortCutListDelegate, this.onRefreshUserShortCutListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetPopupNewsList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPopupNewsList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetPopupNewsList(System.IAsyncResult result) {
            return base.Channel.EndGetPopupNewsList(result);
        }
        
        private System.IAsyncResult OnBeginGetPopupNewsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetPopupNewsList(callback, asyncState);
        }
        
        private object[] OnEndGetPopupNewsList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetPopupNewsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPopupNewsListCompleted(object state) {
            if ((this.GetPopupNewsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPopupNewsListCompleted(this, new GetPopupNewsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPopupNewsListAsync() {
            this.GetPopupNewsListAsync(null);
        }
        
        public void GetPopupNewsListAsync(object userState) {
            if ((this.onBeginGetPopupNewsListDelegate == null)) {
                this.onBeginGetPopupNewsListDelegate = new BeginOperationDelegate(this.OnBeginGetPopupNewsList);
            }
            if ((this.onEndGetPopupNewsListDelegate == null)) {
                this.onEndGetPopupNewsListDelegate = new EndOperationDelegate(this.OnEndGetPopupNewsList);
            }
            if ((this.onGetPopupNewsListCompletedDelegate == null)) {
                this.onGetPopupNewsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPopupNewsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPopupNewsListDelegate, null, this.onEndGetPopupNewsListDelegate, this.onGetPopupNewsListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetNewsListByMobile(int pageIndex, int pageSize, string sort, string filterString, ref int pageCount, ref int rowCount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsListByMobile(pageIndex, pageSize, sort, filterString, ref pageCount, ref rowCount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetNewsListByMobile(ref int pageCount, ref int rowCount, System.IAsyncResult result) {
            return base.Channel.EndGetNewsListByMobile(ref pageCount, ref rowCount, result);
        }
        
        private System.IAsyncResult OnBeginGetNewsListByMobile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            int pageCount = ((int)(inValues[4]));
            int rowCount = ((int)(inValues[5]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetNewsListByMobile(pageIndex, pageSize, sort, filterString, ref pageCount, ref rowCount, callback, asyncState);
        }
        
        private object[] OnEndGetNewsListByMobile(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            int rowCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetNewsListByMobile(ref pageCount, ref rowCount, result);
            return new object[] {
                    pageCount,
                    rowCount,
                    retVal};
        }
        
        private void OnGetNewsListByMobileCompleted(object state) {
            if ((this.GetNewsListByMobileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListByMobileCompleted(this, new GetNewsListByMobileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListByMobileAsync(int pageIndex, int pageSize, string sort, string filterString, int pageCount, int rowCount) {
            this.GetNewsListByMobileAsync(pageIndex, pageSize, sort, filterString, pageCount, rowCount, null);
        }
        
        public void GetNewsListByMobileAsync(int pageIndex, int pageSize, string sort, string filterString, int pageCount, int rowCount, object userState) {
            if ((this.onBeginGetNewsListByMobileDelegate == null)) {
                this.onBeginGetNewsListByMobileDelegate = new BeginOperationDelegate(this.OnBeginGetNewsListByMobile);
            }
            if ((this.onEndGetNewsListByMobileDelegate == null)) {
                this.onEndGetNewsListByMobileDelegate = new EndOperationDelegate(this.OnEndGetNewsListByMobile);
            }
            if ((this.onGetNewsListByMobileCompletedDelegate == null)) {
                this.onGetNewsListByMobileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListByMobileCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListByMobileDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        pageCount,
                        rowCount}, this.onEndGetNewsListByMobileDelegate, this.onGetNewsListByMobileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetRssSource(string rssAddress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRssSource(rssAddress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.RSSModel> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetRssSource(System.IAsyncResult result) {
            return base.Channel.EndGetRssSource(result);
        }
        
        private System.IAsyncResult OnBeginGetRssSource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string rssAddress = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetRssSource(rssAddress, callback, asyncState);
        }
        
        private object[] OnEndGetRssSource(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.RSSModel> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetRssSource(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRssSourceCompleted(object state) {
            if ((this.GetRssSourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRssSourceCompleted(this, new GetRssSourceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRssSourceAsync(string rssAddress) {
            this.GetRssSourceAsync(rssAddress, null);
        }
        
        public void GetRssSourceAsync(string rssAddress, object userState) {
            if ((this.onBeginGetRssSourceDelegate == null)) {
                this.onBeginGetRssSourceDelegate = new BeginOperationDelegate(this.OnBeginGetRssSource);
            }
            if ((this.onEndGetRssSourceDelegate == null)) {
                this.onEndGetRssSourceDelegate = new EndOperationDelegate(this.OnEndGetRssSource);
            }
            if ((this.onGetRssSourceCompletedDelegate == null)) {
                this.onGetRssSourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRssSourceCompleted);
            }
            base.InvokeAsync(this.onBeginGetRssSourceDelegate, new object[] {
                        rssAddress}, this.onEndGetRssSourceDelegate, this.onGetRssSourceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginAddPlatformConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPlatformConfig(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndAddPlatformConfig(System.IAsyncResult result) {
            return base.Channel.EndAddPlatformConfig(result);
        }
        
        private System.IAsyncResult OnBeginAddPlatformConfig(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG model = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginAddPlatformConfig(model, callback, asyncState);
        }
        
        private object[] OnEndAddPlatformConfig(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndAddPlatformConfig(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddPlatformConfigCompleted(object state) {
            if ((this.AddPlatformConfigCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPlatformConfigCompleted(this, new AddPlatformConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPlatformConfigAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG model) {
            this.AddPlatformConfigAsync(model, null);
        }
        
        public void AddPlatformConfigAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG model, object userState) {
            if ((this.onBeginAddPlatformConfigDelegate == null)) {
                this.onBeginAddPlatformConfigDelegate = new BeginOperationDelegate(this.OnBeginAddPlatformConfig);
            }
            if ((this.onEndAddPlatformConfigDelegate == null)) {
                this.onEndAddPlatformConfigDelegate = new EndOperationDelegate(this.OnEndAddPlatformConfig);
            }
            if ((this.onAddPlatformConfigCompletedDelegate == null)) {
                this.onAddPlatformConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPlatformConfigCompleted);
            }
            base.InvokeAsync(this.onBeginAddPlatformConfigDelegate, new object[] {
                        model}, this.onEndAddPlatformConfigDelegate, this.onAddPlatformConfigCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginUpdatePlatformConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePlatformConfig(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndUpdatePlatformConfig(System.IAsyncResult result) {
            return base.Channel.EndUpdatePlatformConfig(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePlatformConfig(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG model = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginUpdatePlatformConfig(model, callback, asyncState);
        }
        
        private object[] OnEndUpdatePlatformConfig(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndUpdatePlatformConfig(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdatePlatformConfigCompleted(object state) {
            if ((this.UpdatePlatformConfigCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePlatformConfigCompleted(this, new UpdatePlatformConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePlatformConfigAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG model) {
            this.UpdatePlatformConfigAsync(model, null);
        }
        
        public void UpdatePlatformConfigAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG model, object userState) {
            if ((this.onBeginUpdatePlatformConfigDelegate == null)) {
                this.onBeginUpdatePlatformConfigDelegate = new BeginOperationDelegate(this.OnBeginUpdatePlatformConfig);
            }
            if ((this.onEndUpdatePlatformConfigDelegate == null)) {
                this.onEndUpdatePlatformConfigDelegate = new EndOperationDelegate(this.OnEndUpdatePlatformConfig);
            }
            if ((this.onUpdatePlatformConfigCompletedDelegate == null)) {
                this.onUpdatePlatformConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePlatformConfigCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePlatformConfigDelegate, new object[] {
                        model}, this.onEndUpdatePlatformConfigDelegate, this.onUpdatePlatformConfigCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginDeletePlatformConfig(string _configID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePlatformConfig(_configID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndDeletePlatformConfig(System.IAsyncResult result) {
            return base.Channel.EndDeletePlatformConfig(result);
        }
        
        private System.IAsyncResult OnBeginDeletePlatformConfig(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _configID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginDeletePlatformConfig(_configID, callback, asyncState);
        }
        
        private object[] OnEndDeletePlatformConfig(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndDeletePlatformConfig(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePlatformConfigCompleted(object state) {
            if ((this.DeletePlatformConfigCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePlatformConfigCompleted(this, new DeletePlatformConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePlatformConfigAsync(string _configID) {
            this.DeletePlatformConfigAsync(_configID, null);
        }
        
        public void DeletePlatformConfigAsync(string _configID, object userState) {
            if ((this.onBeginDeletePlatformConfigDelegate == null)) {
                this.onBeginDeletePlatformConfigDelegate = new BeginOperationDelegate(this.OnBeginDeletePlatformConfig);
            }
            if ((this.onEndDeletePlatformConfigDelegate == null)) {
                this.onEndDeletePlatformConfigDelegate = new EndOperationDelegate(this.OnEndDeletePlatformConfig);
            }
            if ((this.onDeletePlatformConfigCompletedDelegate == null)) {
                this.onDeletePlatformConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePlatformConfigCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePlatformConfigDelegate, new object[] {
                        _configID}, this.onEndDeletePlatformConfigDelegate, this.onDeletePlatformConfigCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetPlatformConfigModelByID(string _configID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlatformConfigModelByID(_configID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetPlatformConfigModelByID(System.IAsyncResult result) {
            return base.Channel.EndGetPlatformConfigModelByID(result);
        }
        
        private System.IAsyncResult OnBeginGetPlatformConfigModelByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _configID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetPlatformConfigModelByID(_configID, callback, asyncState);
        }
        
        private object[] OnEndGetPlatformConfigModelByID(System.IAsyncResult result) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetPlatformConfigModelByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlatformConfigModelByIDCompleted(object state) {
            if ((this.GetPlatformConfigModelByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlatformConfigModelByIDCompleted(this, new GetPlatformConfigModelByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlatformConfigModelByIDAsync(string _configID) {
            this.GetPlatformConfigModelByIDAsync(_configID, null);
        }
        
        public void GetPlatformConfigModelByIDAsync(string _configID, object userState) {
            if ((this.onBeginGetPlatformConfigModelByIDDelegate == null)) {
                this.onBeginGetPlatformConfigModelByIDDelegate = new BeginOperationDelegate(this.OnBeginGetPlatformConfigModelByID);
            }
            if ((this.onEndGetPlatformConfigModelByIDDelegate == null)) {
                this.onEndGetPlatformConfigModelByIDDelegate = new EndOperationDelegate(this.OnEndGetPlatformConfigModelByID);
            }
            if ((this.onGetPlatformConfigModelByIDCompletedDelegate == null)) {
                this.onGetPlatformConfigModelByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlatformConfigModelByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlatformConfigModelByIDDelegate, new object[] {
                        _configID}, this.onEndGetPlatformConfigModelByIDDelegate, this.onGetPlatformConfigModelByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginAddProjectConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddProjectConfig(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndAddProjectConfig(System.IAsyncResult result) {
            return base.Channel.EndAddProjectConfig(result);
        }
        
        private System.IAsyncResult OnBeginAddProjectConfig(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG model = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginAddProjectConfig(model, callback, asyncState);
        }
        
        private object[] OnEndAddProjectConfig(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndAddProjectConfig(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddProjectConfigCompleted(object state) {
            if ((this.AddProjectConfigCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddProjectConfigCompleted(this, new AddProjectConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddProjectConfigAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG model) {
            this.AddProjectConfigAsync(model, null);
        }
        
        public void AddProjectConfigAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG model, object userState) {
            if ((this.onBeginAddProjectConfigDelegate == null)) {
                this.onBeginAddProjectConfigDelegate = new BeginOperationDelegate(this.OnBeginAddProjectConfig);
            }
            if ((this.onEndAddProjectConfigDelegate == null)) {
                this.onEndAddProjectConfigDelegate = new EndOperationDelegate(this.OnEndAddProjectConfig);
            }
            if ((this.onAddProjectConfigCompletedDelegate == null)) {
                this.onAddProjectConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddProjectConfigCompleted);
            }
            base.InvokeAsync(this.onBeginAddProjectConfigDelegate, new object[] {
                        model}, this.onEndAddProjectConfigDelegate, this.onAddProjectConfigCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginUpdateProjectConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateProjectConfig(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndUpdateProjectConfig(System.IAsyncResult result) {
            return base.Channel.EndUpdateProjectConfig(result);
        }
        
        private System.IAsyncResult OnBeginUpdateProjectConfig(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG model = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginUpdateProjectConfig(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateProjectConfig(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndUpdateProjectConfig(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateProjectConfigCompleted(object state) {
            if ((this.UpdateProjectConfigCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateProjectConfigCompleted(this, new UpdateProjectConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateProjectConfigAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG model) {
            this.UpdateProjectConfigAsync(model, null);
        }
        
        public void UpdateProjectConfigAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG model, object userState) {
            if ((this.onBeginUpdateProjectConfigDelegate == null)) {
                this.onBeginUpdateProjectConfigDelegate = new BeginOperationDelegate(this.OnBeginUpdateProjectConfig);
            }
            if ((this.onEndUpdateProjectConfigDelegate == null)) {
                this.onEndUpdateProjectConfigDelegate = new EndOperationDelegate(this.OnEndUpdateProjectConfig);
            }
            if ((this.onUpdateProjectConfigCompletedDelegate == null)) {
                this.onUpdateProjectConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateProjectConfigCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateProjectConfigDelegate, new object[] {
                        model}, this.onEndUpdateProjectConfigDelegate, this.onUpdateProjectConfigCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginDeleteProjectConfig(string _configID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteProjectConfig(_configID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndDeleteProjectConfig(System.IAsyncResult result) {
            return base.Channel.EndDeleteProjectConfig(result);
        }
        
        private System.IAsyncResult OnBeginDeleteProjectConfig(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _configID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginDeleteProjectConfig(_configID, callback, asyncState);
        }
        
        private object[] OnEndDeleteProjectConfig(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndDeleteProjectConfig(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteProjectConfigCompleted(object state) {
            if ((this.DeleteProjectConfigCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteProjectConfigCompleted(this, new DeleteProjectConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteProjectConfigAsync(string _configID) {
            this.DeleteProjectConfigAsync(_configID, null);
        }
        
        public void DeleteProjectConfigAsync(string _configID, object userState) {
            if ((this.onBeginDeleteProjectConfigDelegate == null)) {
                this.onBeginDeleteProjectConfigDelegate = new BeginOperationDelegate(this.OnBeginDeleteProjectConfig);
            }
            if ((this.onEndDeleteProjectConfigDelegate == null)) {
                this.onEndDeleteProjectConfigDelegate = new EndOperationDelegate(this.OnEndDeleteProjectConfig);
            }
            if ((this.onDeleteProjectConfigCompletedDelegate == null)) {
                this.onDeleteProjectConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteProjectConfigCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteProjectConfigDelegate, new object[] {
                        _configID}, this.onEndDeleteProjectConfigDelegate, this.onDeleteProjectConfigCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetProjectConfigModelByID(string _configID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjectConfigModelByID(_configID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetProjectConfigModelByID(System.IAsyncResult result) {
            return base.Channel.EndGetProjectConfigModelByID(result);
        }
        
        private System.IAsyncResult OnBeginGetProjectConfigModelByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _configID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetProjectConfigModelByID(_configID, callback, asyncState);
        }
        
        private object[] OnEndGetProjectConfigModelByID(System.IAsyncResult result) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetProjectConfigModelByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjectConfigModelByIDCompleted(object state) {
            if ((this.GetProjectConfigModelByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjectConfigModelByIDCompleted(this, new GetProjectConfigModelByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjectConfigModelByIDAsync(string _configID) {
            this.GetProjectConfigModelByIDAsync(_configID, null);
        }
        
        public void GetProjectConfigModelByIDAsync(string _configID, object userState) {
            if ((this.onBeginGetProjectConfigModelByIDDelegate == null)) {
                this.onBeginGetProjectConfigModelByIDDelegate = new BeginOperationDelegate(this.OnBeginGetProjectConfigModelByID);
            }
            if ((this.onEndGetProjectConfigModelByIDDelegate == null)) {
                this.onEndGetProjectConfigModelByIDDelegate = new EndOperationDelegate(this.OnEndGetProjectConfigModelByID);
            }
            if ((this.onGetProjectConfigModelByIDCompletedDelegate == null)) {
                this.onGetProjectConfigModelByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjectConfigModelByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjectConfigModelByIDDelegate, new object[] {
                        _configID}, this.onEndGetProjectConfigModelByIDDelegate, this.onGetProjectConfigModelByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginAddUserConfigRelevance(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUserConfigRelevance(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndAddUserConfigRelevance(System.IAsyncResult result) {
            return base.Channel.EndAddUserConfigRelevance(result);
        }
        
        private System.IAsyncResult OnBeginAddUserConfigRelevance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE model = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginAddUserConfigRelevance(model, callback, asyncState);
        }
        
        private object[] OnEndAddUserConfigRelevance(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndAddUserConfigRelevance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUserConfigRelevanceCompleted(object state) {
            if ((this.AddUserConfigRelevanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUserConfigRelevanceCompleted(this, new AddUserConfigRelevanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUserConfigRelevanceAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE model) {
            this.AddUserConfigRelevanceAsync(model, null);
        }
        
        public void AddUserConfigRelevanceAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE model, object userState) {
            if ((this.onBeginAddUserConfigRelevanceDelegate == null)) {
                this.onBeginAddUserConfigRelevanceDelegate = new BeginOperationDelegate(this.OnBeginAddUserConfigRelevance);
            }
            if ((this.onEndAddUserConfigRelevanceDelegate == null)) {
                this.onEndAddUserConfigRelevanceDelegate = new EndOperationDelegate(this.OnEndAddUserConfigRelevance);
            }
            if ((this.onAddUserConfigRelevanceCompletedDelegate == null)) {
                this.onAddUserConfigRelevanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUserConfigRelevanceCompleted);
            }
            base.InvokeAsync(this.onBeginAddUserConfigRelevanceDelegate, new object[] {
                        model}, this.onEndAddUserConfigRelevanceDelegate, this.onAddUserConfigRelevanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginUpdateUserConfigRelevance(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateUserConfigRelevance(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndUpdateUserConfigRelevance(System.IAsyncResult result) {
            return base.Channel.EndUpdateUserConfigRelevance(result);
        }
        
        private System.IAsyncResult OnBeginUpdateUserConfigRelevance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE model = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginUpdateUserConfigRelevance(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateUserConfigRelevance(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndUpdateUserConfigRelevance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateUserConfigRelevanceCompleted(object state) {
            if ((this.UpdateUserConfigRelevanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateUserConfigRelevanceCompleted(this, new UpdateUserConfigRelevanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateUserConfigRelevanceAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE model) {
            this.UpdateUserConfigRelevanceAsync(model, null);
        }
        
        public void UpdateUserConfigRelevanceAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE model, object userState) {
            if ((this.onBeginUpdateUserConfigRelevanceDelegate == null)) {
                this.onBeginUpdateUserConfigRelevanceDelegate = new BeginOperationDelegate(this.OnBeginUpdateUserConfigRelevance);
            }
            if ((this.onEndUpdateUserConfigRelevanceDelegate == null)) {
                this.onEndUpdateUserConfigRelevanceDelegate = new EndOperationDelegate(this.OnEndUpdateUserConfigRelevance);
            }
            if ((this.onUpdateUserConfigRelevanceCompletedDelegate == null)) {
                this.onUpdateUserConfigRelevanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateUserConfigRelevanceCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateUserConfigRelevanceDelegate, new object[] {
                        model}, this.onEndUpdateUserConfigRelevanceDelegate, this.onUpdateUserConfigRelevanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginDeleteUserConfigRelevance(string _configID, string _userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUserConfigRelevance(_configID, _userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndDeleteUserConfigRelevance(System.IAsyncResult result) {
            return base.Channel.EndDeleteUserConfigRelevance(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUserConfigRelevance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _configID = ((string)(inValues[0]));
            string _userID = ((string)(inValues[1]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginDeleteUserConfigRelevance(_configID, _userID, callback, asyncState);
        }
        
        private object[] OnEndDeleteUserConfigRelevance(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndDeleteUserConfigRelevance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteUserConfigRelevanceCompleted(object state) {
            if ((this.DeleteUserConfigRelevanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserConfigRelevanceCompleted(this, new DeleteUserConfigRelevanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserConfigRelevanceAsync(string _configID, string _userID) {
            this.DeleteUserConfigRelevanceAsync(_configID, _userID, null);
        }
        
        public void DeleteUserConfigRelevanceAsync(string _configID, string _userID, object userState) {
            if ((this.onBeginDeleteUserConfigRelevanceDelegate == null)) {
                this.onBeginDeleteUserConfigRelevanceDelegate = new BeginOperationDelegate(this.OnBeginDeleteUserConfigRelevance);
            }
            if ((this.onEndDeleteUserConfigRelevanceDelegate == null)) {
                this.onEndDeleteUserConfigRelevanceDelegate = new EndOperationDelegate(this.OnEndDeleteUserConfigRelevance);
            }
            if ((this.onDeleteUserConfigRelevanceCompletedDelegate == null)) {
                this.onDeleteUserConfigRelevanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserConfigRelevanceCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserConfigRelevanceDelegate, new object[] {
                        _configID,
                        _userID}, this.onEndDeleteUserConfigRelevanceDelegate, this.onDeleteUserConfigRelevanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginAddUserRelevanceConfig(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> _configList, bool iswebpart, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUserRelevanceConfig(_configList, iswebpart, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndAddUserRelevanceConfig(System.IAsyncResult result) {
            return base.Channel.EndAddUserRelevanceConfig(result);
        }
        
        private System.IAsyncResult OnBeginAddUserRelevanceConfig(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> _configList = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE>)(inValues[0]));
            bool iswebpart = ((bool)(inValues[1]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginAddUserRelevanceConfig(_configList, iswebpart, callback, asyncState);
        }
        
        private object[] OnEndAddUserRelevanceConfig(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndAddUserRelevanceConfig(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUserRelevanceConfigCompleted(object state) {
            if ((this.AddUserRelevanceConfigCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUserRelevanceConfigCompleted(this, new AddUserRelevanceConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUserRelevanceConfigAsync(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> _configList, bool iswebpart) {
            this.AddUserRelevanceConfigAsync(_configList, iswebpart, null);
        }
        
        public void AddUserRelevanceConfigAsync(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> _configList, bool iswebpart, object userState) {
            if ((this.onBeginAddUserRelevanceConfigDelegate == null)) {
                this.onBeginAddUserRelevanceConfigDelegate = new BeginOperationDelegate(this.OnBeginAddUserRelevanceConfig);
            }
            if ((this.onEndAddUserRelevanceConfigDelegate == null)) {
                this.onEndAddUserRelevanceConfigDelegate = new EndOperationDelegate(this.OnEndAddUserRelevanceConfig);
            }
            if ((this.onAddUserRelevanceConfigCompletedDelegate == null)) {
                this.onAddUserRelevanceConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUserRelevanceConfigCompleted);
            }
            base.InvokeAsync(this.onBeginAddUserRelevanceConfigDelegate, new object[] {
                        _configList,
                        iswebpart}, this.onEndAddUserRelevanceConfigDelegate, this.onAddUserRelevanceConfigCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginAddUserConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUserConfig(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndAddUserConfig(System.IAsyncResult result) {
            return base.Channel.EndAddUserConfig(result);
        }
        
        private System.IAsyncResult OnBeginAddUserConfig(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG model = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginAddUserConfig(model, callback, asyncState);
        }
        
        private object[] OnEndAddUserConfig(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndAddUserConfig(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUserConfigCompleted(object state) {
            if ((this.AddUserConfigCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUserConfigCompleted(this, new AddUserConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUserConfigAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG model) {
            this.AddUserConfigAsync(model, null);
        }
        
        public void AddUserConfigAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG model, object userState) {
            if ((this.onBeginAddUserConfigDelegate == null)) {
                this.onBeginAddUserConfigDelegate = new BeginOperationDelegate(this.OnBeginAddUserConfig);
            }
            if ((this.onEndAddUserConfigDelegate == null)) {
                this.onEndAddUserConfigDelegate = new EndOperationDelegate(this.OnEndAddUserConfig);
            }
            if ((this.onAddUserConfigCompletedDelegate == null)) {
                this.onAddUserConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUserConfigCompleted);
            }
            base.InvokeAsync(this.onBeginAddUserConfigDelegate, new object[] {
                        model}, this.onEndAddUserConfigDelegate, this.onAddUserConfigCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginUpdateUserConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateUserConfig(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndUpdateUserConfig(System.IAsyncResult result) {
            return base.Channel.EndUpdateUserConfig(result);
        }
        
        private System.IAsyncResult OnBeginUpdateUserConfig(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG model = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginUpdateUserConfig(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateUserConfig(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndUpdateUserConfig(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateUserConfigCompleted(object state) {
            if ((this.UpdateUserConfigCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateUserConfigCompleted(this, new UpdateUserConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateUserConfigAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG model) {
            this.UpdateUserConfigAsync(model, null);
        }
        
        public void UpdateUserConfigAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG model, object userState) {
            if ((this.onBeginUpdateUserConfigDelegate == null)) {
                this.onBeginUpdateUserConfigDelegate = new BeginOperationDelegate(this.OnBeginUpdateUserConfig);
            }
            if ((this.onEndUpdateUserConfigDelegate == null)) {
                this.onEndUpdateUserConfigDelegate = new EndOperationDelegate(this.OnEndUpdateUserConfig);
            }
            if ((this.onUpdateUserConfigCompletedDelegate == null)) {
                this.onUpdateUserConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateUserConfigCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateUserConfigDelegate, new object[] {
                        model}, this.onEndUpdateUserConfigDelegate, this.onUpdateUserConfigCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginDeleteUserConfig(string _userConfigID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUserConfig(_userConfigID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndDeleteUserConfig(System.IAsyncResult result) {
            return base.Channel.EndDeleteUserConfig(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUserConfig(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _userConfigID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginDeleteUserConfig(_userConfigID, callback, asyncState);
        }
        
        private object[] OnEndDeleteUserConfig(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndDeleteUserConfig(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteUserConfigCompleted(object state) {
            if ((this.DeleteUserConfigCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserConfigCompleted(this, new DeleteUserConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserConfigAsync(string _userConfigID) {
            this.DeleteUserConfigAsync(_userConfigID, null);
        }
        
        public void DeleteUserConfigAsync(string _userConfigID, object userState) {
            if ((this.onBeginDeleteUserConfigDelegate == null)) {
                this.onBeginDeleteUserConfigDelegate = new BeginOperationDelegate(this.OnBeginDeleteUserConfig);
            }
            if ((this.onEndDeleteUserConfigDelegate == null)) {
                this.onEndDeleteUserConfigDelegate = new EndOperationDelegate(this.OnEndDeleteUserConfig);
            }
            if ((this.onDeleteUserConfigCompletedDelegate == null)) {
                this.onDeleteUserConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserConfigCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserConfigDelegate, new object[] {
                        _userConfigID}, this.onEndDeleteUserConfigDelegate, this.onDeleteUserConfigCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetUserConfigModelByID(string _userConfigID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserConfigModelByID(_userConfigID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetUserConfigModelByID(System.IAsyncResult result) {
            return base.Channel.EndGetUserConfigModelByID(result);
        }
        
        private System.IAsyncResult OnBeginGetUserConfigModelByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _userConfigID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetUserConfigModelByID(_userConfigID, callback, asyncState);
        }
        
        private object[] OnEndGetUserConfigModelByID(System.IAsyncResult result) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetUserConfigModelByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserConfigModelByIDCompleted(object state) {
            if ((this.GetUserConfigModelByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserConfigModelByIDCompleted(this, new GetUserConfigModelByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserConfigModelByIDAsync(string _userConfigID) {
            this.GetUserConfigModelByIDAsync(_userConfigID, null);
        }
        
        public void GetUserConfigModelByIDAsync(string _userConfigID, object userState) {
            if ((this.onBeginGetUserConfigModelByIDDelegate == null)) {
                this.onBeginGetUserConfigModelByIDDelegate = new BeginOperationDelegate(this.OnBeginGetUserConfigModelByID);
            }
            if ((this.onEndGetUserConfigModelByIDDelegate == null)) {
                this.onEndGetUserConfigModelByIDDelegate = new EndOperationDelegate(this.OnEndGetUserConfigModelByID);
            }
            if ((this.onGetUserConfigModelByIDCompletedDelegate == null)) {
                this.onGetUserConfigModelByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserConfigModelByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserConfigModelByIDDelegate, new object[] {
                        _userConfigID}, this.onEndGetUserConfigModelByIDDelegate, this.onGetUserConfigModelByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginAddNews(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNews(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndAddNews(System.IAsyncResult result) {
            return base.Channel.EndAddNews(result);
        }
        
        private System.IAsyncResult OnBeginAddNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginAddNews(model, callback, asyncState);
        }
        
        private object[] OnEndAddNews(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndAddNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewsCompleted(object state) {
            if ((this.AddNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewsCompleted(this, new AddNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewsAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model) {
            this.AddNewsAsync(model, null);
        }
        
        public void AddNewsAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, object userState) {
            if ((this.onBeginAddNewsDelegate == null)) {
                this.onBeginAddNewsDelegate = new BeginOperationDelegate(this.OnBeginAddNews);
            }
            if ((this.onEndAddNewsDelegate == null)) {
                this.onEndAddNewsDelegate = new EndOperationDelegate(this.OnEndAddNews);
            }
            if ((this.onAddNewsCompletedDelegate == null)) {
                this.onAddNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewsCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewsDelegate, new object[] {
                        model}, this.onEndAddNewsDelegate, this.onAddNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginAddNewsByViewer(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> _viewer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewsByViewer(model, _viewer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndAddNewsByViewer(System.IAsyncResult result) {
            return base.Channel.EndAddNewsByViewer(result);
        }
        
        private System.IAsyncResult OnBeginAddNewsByViewer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> _viewer = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER>)(inValues[1]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginAddNewsByViewer(model, _viewer, callback, asyncState);
        }
        
        private object[] OnEndAddNewsByViewer(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndAddNewsByViewer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewsByViewerCompleted(object state) {
            if ((this.AddNewsByViewerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewsByViewerCompleted(this, new AddNewsByViewerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewsByViewerAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> _viewer) {
            this.AddNewsByViewerAsync(model, _viewer, null);
        }
        
        public void AddNewsByViewerAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> _viewer, object userState) {
            if ((this.onBeginAddNewsByViewerDelegate == null)) {
                this.onBeginAddNewsByViewerDelegate = new BeginOperationDelegate(this.OnBeginAddNewsByViewer);
            }
            if ((this.onEndAddNewsByViewerDelegate == null)) {
                this.onEndAddNewsByViewerDelegate = new EndOperationDelegate(this.OnEndAddNewsByViewer);
            }
            if ((this.onAddNewsByViewerCompletedDelegate == null)) {
                this.onAddNewsByViewerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewsByViewerCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewsByViewerDelegate, new object[] {
                        model,
                        _viewer}, this.onEndAddNewsByViewerDelegate, this.onAddNewsByViewerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginUpdateNews(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> _viewer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateNews(model, _viewer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndUpdateNews(System.IAsyncResult result) {
            return base.Channel.EndUpdateNews(result);
        }
        
        private System.IAsyncResult OnBeginUpdateNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> _viewer = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER>)(inValues[1]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginUpdateNews(model, _viewer, callback, asyncState);
        }
        
        private object[] OnEndUpdateNews(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndUpdateNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateNewsCompleted(object state) {
            if ((this.UpdateNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateNewsCompleted(this, new UpdateNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateNewsAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> _viewer) {
            this.UpdateNewsAsync(model, _viewer, null);
        }
        
        public void UpdateNewsAsync(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> _viewer, object userState) {
            if ((this.onBeginUpdateNewsDelegate == null)) {
                this.onBeginUpdateNewsDelegate = new BeginOperationDelegate(this.OnBeginUpdateNews);
            }
            if ((this.onEndUpdateNewsDelegate == null)) {
                this.onEndUpdateNewsDelegate = new EndOperationDelegate(this.OnEndUpdateNews);
            }
            if ((this.onUpdateNewsCompletedDelegate == null)) {
                this.onUpdateNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateNewsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateNewsDelegate, new object[] {
                        model,
                        _viewer}, this.onEndUpdateNewsDelegate, this.onUpdateNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginDeleteNews(string _newsID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteNews(_newsID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndDeleteNews(System.IAsyncResult result) {
            return base.Channel.EndDeleteNews(result);
        }
        
        private System.IAsyncResult OnBeginDeleteNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _newsID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginDeleteNews(_newsID, callback, asyncState);
        }
        
        private object[] OnEndDeleteNews(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndDeleteNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteNewsCompleted(object state) {
            if ((this.DeleteNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteNewsCompleted(this, new DeleteNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteNewsAsync(string _newsID) {
            this.DeleteNewsAsync(_newsID, null);
        }
        
        public void DeleteNewsAsync(string _newsID, object userState) {
            if ((this.onBeginDeleteNewsDelegate == null)) {
                this.onBeginDeleteNewsDelegate = new BeginOperationDelegate(this.OnBeginDeleteNews);
            }
            if ((this.onEndDeleteNewsDelegate == null)) {
                this.onEndDeleteNewsDelegate = new EndOperationDelegate(this.OnEndDeleteNews);
            }
            if ((this.onDeleteNewsCompletedDelegate == null)) {
                this.onDeleteNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteNewsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteNewsDelegate, new object[] {
                        _newsID}, this.onEndDeleteNewsDelegate, this.onDeleteNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetNewsModelByID(string _newsID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsModelByID(_newsID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetNewsModelByID(System.IAsyncResult result) {
            return base.Channel.EndGetNewsModelByID(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsModelByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _newsID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetNewsModelByID(_newsID, callback, asyncState);
        }
        
        private object[] OnEndGetNewsModelByID(System.IAsyncResult result) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetNewsModelByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsModelByIDCompleted(object state) {
            if ((this.GetNewsModelByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsModelByIDCompleted(this, new GetNewsModelByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsModelByIDAsync(string _newsID) {
            this.GetNewsModelByIDAsync(_newsID, null);
        }
        
        public void GetNewsModelByIDAsync(string _newsID, object userState) {
            if ((this.onBeginGetNewsModelByIDDelegate == null)) {
                this.onBeginGetNewsModelByIDDelegate = new BeginOperationDelegate(this.OnBeginGetNewsModelByID);
            }
            if ((this.onEndGetNewsModelByIDDelegate == null)) {
                this.onEndGetNewsModelByIDDelegate = new EndOperationDelegate(this.OnEndGetNewsModelByID);
            }
            if ((this.onGetNewsModelByIDCompletedDelegate == null)) {
                this.onGetNewsModelByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsModelByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsModelByIDDelegate, new object[] {
                        _newsID}, this.onEndGetNewsModelByIDDelegate, this.onGetNewsModelByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetNewsDetailsByID(string _newsID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsDetailsByID(_newsID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSView SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetNewsDetailsByID(System.IAsyncResult result) {
            return base.Channel.EndGetNewsDetailsByID(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsDetailsByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _newsID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetNewsDetailsByID(_newsID, callback, asyncState);
        }
        
        private object[] OnEndGetNewsDetailsByID(System.IAsyncResult result) {
            SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSView retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetNewsDetailsByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsDetailsByIDCompleted(object state) {
            if ((this.GetNewsDetailsByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsDetailsByIDCompleted(this, new GetNewsDetailsByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsDetailsByIDAsync(string _newsID) {
            this.GetNewsDetailsByIDAsync(_newsID, null);
        }
        
        public void GetNewsDetailsByIDAsync(string _newsID, object userState) {
            if ((this.onBeginGetNewsDetailsByIDDelegate == null)) {
                this.onBeginGetNewsDetailsByIDDelegate = new BeginOperationDelegate(this.OnBeginGetNewsDetailsByID);
            }
            if ((this.onEndGetNewsDetailsByIDDelegate == null)) {
                this.onEndGetNewsDetailsByIDDelegate = new EndOperationDelegate(this.OnEndGetNewsDetailsByID);
            }
            if ((this.onGetNewsDetailsByIDCompletedDelegate == null)) {
                this.onGetNewsDetailsByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsDetailsByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsDetailsByIDDelegate, new object[] {
                        _newsID}, this.onEndGetNewsDetailsByIDDelegate, this.onGetNewsDetailsByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetNewsList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetNewsList(System.IAsyncResult result) {
            return base.Channel.EndGetNewsList(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetNewsList(callback, asyncState);
        }
        
        private object[] OnEndGetNewsList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetNewsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsListCompleted(object state) {
            if ((this.GetNewsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListCompleted(this, new GetNewsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListAsync() {
            this.GetNewsListAsync(null);
        }
        
        public void GetNewsListAsync(object userState) {
            if ((this.onBeginGetNewsListDelegate == null)) {
                this.onBeginGetNewsListDelegate = new BeginOperationDelegate(this.OnBeginGetNewsList);
            }
            if ((this.onEndGetNewsListDelegate == null)) {
                this.onEndGetNewsListDelegate = new EndOperationDelegate(this.OnEndGetNewsList);
            }
            if ((this.onGetNewsListCompletedDelegate == null)) {
                this.onGetNewsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListDelegate, null, this.onEndGetNewsListDelegate, this.onGetNewsListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetNewsLists(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsLists(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER>> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetNewsLists(System.IAsyncResult result) {
            return base.Channel.EndGetNewsLists(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsLists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetNewsLists(callback, asyncState);
        }
        
        private object[] OnEndGetNewsLists(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER>> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetNewsLists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsListsCompleted(object state) {
            if ((this.GetNewsListsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListsCompleted(this, new GetNewsListsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListsAsync() {
            this.GetNewsListsAsync(null);
        }
        
        public void GetNewsListsAsync(object userState) {
            if ((this.onBeginGetNewsListsDelegate == null)) {
                this.onBeginGetNewsListsDelegate = new BeginOperationDelegate(this.OnBeginGetNewsLists);
            }
            if ((this.onEndGetNewsListsDelegate == null)) {
                this.onEndGetNewsListsDelegate = new EndOperationDelegate(this.OnEndGetNewsLists);
            }
            if ((this.onGetNewsListsCompletedDelegate == null)) {
                this.onGetNewsListsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListsDelegate, null, this.onEndGetNewsListsDelegate, this.onGetNewsListsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetNewsListByParams(string type, int topCount, string state, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsListByParams(type, topCount, state, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetNewsListByParams(System.IAsyncResult result) {
            return base.Channel.EndGetNewsListByParams(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsListByParams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string type = ((string)(inValues[0]));
            int topCount = ((int)(inValues[1]));
            string state = ((string)(inValues[2]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetNewsListByParams(type, topCount, state, callback, asyncState);
        }
        
        private object[] OnEndGetNewsListByParams(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetNewsListByParams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsListByParamsCompleted(object state) {
            if ((this.GetNewsListByParamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListByParamsCompleted(this, new GetNewsListByParamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListByParamsAsync(string type, int topCount, string state) {
            this.GetNewsListByParamsAsync(type, topCount, state, null);
        }
        
        public void GetNewsListByParamsAsync(string type, int topCount, string state, object userState) {
            if ((this.onBeginGetNewsListByParamsDelegate == null)) {
                this.onBeginGetNewsListByParamsDelegate = new BeginOperationDelegate(this.OnBeginGetNewsListByParams);
            }
            if ((this.onEndGetNewsListByParamsDelegate == null)) {
                this.onEndGetNewsListByParamsDelegate = new EndOperationDelegate(this.OnEndGetNewsListByParams);
            }
            if ((this.onGetNewsListByParamsCompletedDelegate == null)) {
                this.onGetNewsListByParamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListByParamsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListByParamsDelegate, new object[] {
                        type,
                        topCount,
                        state}, this.onEndGetNewsListByParamsDelegate, this.onGetNewsListByParamsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetNewsListByEmployeeID(string type, int topCount, string state, string employeeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsListByEmployeeID(type, topCount, state, employeeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetNewsListByEmployeeID(System.IAsyncResult result) {
            return base.Channel.EndGetNewsListByEmployeeID(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsListByEmployeeID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string type = ((string)(inValues[0]));
            int topCount = ((int)(inValues[1]));
            string state = ((string)(inValues[2]));
            string employeeID = ((string)(inValues[3]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetNewsListByEmployeeID(type, topCount, state, employeeID, callback, asyncState);
        }
        
        private object[] OnEndGetNewsListByEmployeeID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetNewsListByEmployeeID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsListByEmployeeIDCompleted(object state) {
            if ((this.GetNewsListByEmployeeIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListByEmployeeIDCompleted(this, new GetNewsListByEmployeeIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListByEmployeeIDAsync(string type, int topCount, string state, string employeeID) {
            this.GetNewsListByEmployeeIDAsync(type, topCount, state, employeeID, null);
        }
        
        public void GetNewsListByEmployeeIDAsync(string type, int topCount, string state, string employeeID, object userState) {
            if ((this.onBeginGetNewsListByEmployeeIDDelegate == null)) {
                this.onBeginGetNewsListByEmployeeIDDelegate = new BeginOperationDelegate(this.OnBeginGetNewsListByEmployeeID);
            }
            if ((this.onEndGetNewsListByEmployeeIDDelegate == null)) {
                this.onEndGetNewsListByEmployeeIDDelegate = new EndOperationDelegate(this.OnEndGetNewsListByEmployeeID);
            }
            if ((this.onGetNewsListByEmployeeIDCompletedDelegate == null)) {
                this.onGetNewsListByEmployeeIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListByEmployeeIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListByEmployeeIDDelegate, new object[] {
                        type,
                        topCount,
                        state,
                        employeeID}, this.onEndGetNewsListByEmployeeIDDelegate, this.onGetNewsListByEmployeeIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.BeginGetNewsListByState(string state, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsListByState(state, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices.EndGetNewsListByState(System.IAsyncResult result) {
            return base.Channel.EndGetNewsListByState(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsListByState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string state = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).BeginGetNewsListByState(state, callback, asyncState);
        }
        
        private object[] OnEndGetNewsListByState(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> retVal = ((SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices)(this)).EndGetNewsListByState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsListByStateCompleted(object state) {
            if ((this.GetNewsListByStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListByStateCompleted(this, new GetNewsListByStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListByStateAsync(string state) {
            this.GetNewsListByStateAsync(state, null);
        }
        
        public void GetNewsListByStateAsync(string state, object userState) {
            if ((this.onBeginGetNewsListByStateDelegate == null)) {
                this.onBeginGetNewsListByStateDelegate = new BeginOperationDelegate(this.OnBeginGetNewsListByState);
            }
            if ((this.onEndGetNewsListByStateDelegate == null)) {
                this.onEndGetNewsListByStateDelegate = new EndOperationDelegate(this.OnEndGetNewsListByState);
            }
            if ((this.onGetNewsListByStateCompletedDelegate == null)) {
                this.onGetNewsListByStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListByStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListByStateDelegate, new object[] {
                        state}, this.onEndGetNewsListByStateDelegate, this.onGetNewsListByStateCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices CreateChannel() {
            return new PlatformServicesClientChannel(this);
        }
        
        private class PlatformServicesClientChannel : ChannelBase<SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices>, SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices {
            
            public PlatformServicesClientChannel(System.ServiceModel.ClientBase<SMT.SAAS.Platform.WebParts.NewsWS.IPlatformServices> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetImageNewsList(int topCount, string state, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = topCount;
                _args[1] = state;
                System.IAsyncResult _result = base.BeginInvoke("GetImageNewsList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> EndGetImageNewsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS>)(base.EndInvoke("GetImageNewsList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsListByPage(int pageIndex, int pageSize, string sort, string filterString, ref int pageCount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = pageCount;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsListByPage", _args, callback, asyncState);
                pageCount = ((int)(_args[4]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> EndGetNewsListByPage(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView>)(base.EndInvoke("GetNewsListByPage", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWebPartList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetWebPartList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG> EndGetWebPartList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG>)(base.EndInvoke("GetWebPartList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWebPartListByState(string _state, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _state;
                System.IAsyncResult _result = base.BeginInvoke("GetWebPartListByState", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG> EndGetWebPartListByState(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG>)(base.EndInvoke("GetWebPartListByState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserWebPartsByUserID(string _userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _userID;
                System.IAsyncResult _result = base.BeginInvoke("GetUserWebPartsByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> EndGetUserWebPartsByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE>)(base.EndInvoke("GetUserWebPartsByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserShortCutByUserID(string _userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _userID;
                System.IAsyncResult _result = base.BeginInvoke("GetUserShortCutByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> EndGetUserShortCutByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE>)(base.EndInvoke("GetUserShortCutByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRefreshUserWebPartList(string _userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _userID;
                System.IAsyncResult _result = base.BeginInvoke("RefreshUserWebPartList", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRefreshUserWebPartList(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RefreshUserWebPartList", _args, result);
            }
            
            public System.IAsyncResult BeginRefreshUserShortCutList(string _userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _userID;
                System.IAsyncResult _result = base.BeginInvoke("RefreshUserShortCutList", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRefreshUserShortCutList(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RefreshUserShortCutList", _args, result);
            }
            
            public System.IAsyncResult BeginGetPopupNewsList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPopupNewsList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> EndGetPopupNewsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView>)(base.EndInvoke("GetPopupNewsList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsListByMobile(int pageIndex, int pageSize, string sort, string filterString, ref int pageCount, ref int rowCount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = pageCount;
                _args[5] = rowCount;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsListByMobile", _args, callback, asyncState);
                pageCount = ((int)(_args[4]));
                rowCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> EndGetNewsListByMobile(ref int pageCount, ref int rowCount, System.IAsyncResult result) {
                object[] _args = new object[2];
                _args[0] = pageCount;
                _args[1] = rowCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSListView>)(base.EndInvoke("GetNewsListByMobile", _args, result)));
                pageCount = ((int)(_args[0]));
                rowCount = ((int)(_args[1]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRssSource(string rssAddress, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = rssAddress;
                System.IAsyncResult _result = base.BeginInvoke("GetRssSource", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.RSSModel> EndGetRssSource(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.RSSModel> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.RSSModel>)(base.EndInvoke("GetRssSource", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddPlatformConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("AddPlatformConfig", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddPlatformConfig(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddPlatformConfig", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePlatformConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePlatformConfig", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdatePlatformConfig(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdatePlatformConfig", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeletePlatformConfig(string _configID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _configID;
                System.IAsyncResult _result = base.BeginInvoke("DeletePlatformConfig", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeletePlatformConfig(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeletePlatformConfig", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlatformConfigModelByID(string _configID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _configID;
                System.IAsyncResult _result = base.BeginInvoke("GetPlatformConfigModelByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG EndGetPlatformConfigModelByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG _result = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PLATFORMCONFIG)(base.EndInvoke("GetPlatformConfigModelByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddProjectConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("AddProjectConfig", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddProjectConfig(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddProjectConfig", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateProjectConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateProjectConfig", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateProjectConfig(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateProjectConfig", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteProjectConfig(string _configID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _configID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteProjectConfig", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteProjectConfig(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteProjectConfig", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjectConfigModelByID(string _configID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _configID;
                System.IAsyncResult _result = base.BeginInvoke("GetProjectConfigModelByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG EndGetProjectConfigModelByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG _result = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_PROJECTCONFIG)(base.EndInvoke("GetProjectConfigModelByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddUserConfigRelevance(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("AddUserConfigRelevance", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddUserConfigRelevance(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddUserConfigRelevance", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateUserConfigRelevance(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateUserConfigRelevance", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateUserConfigRelevance(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateUserConfigRelevance", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteUserConfigRelevance(string _configID, string _userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = _configID;
                _args[1] = _userID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteUserConfigRelevance", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteUserConfigRelevance(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteUserConfigRelevance", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddUserRelevanceConfig(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIGRELEVANCE> _configList, bool iswebpart, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = _configList;
                _args[1] = iswebpart;
                System.IAsyncResult _result = base.BeginInvoke("AddUserRelevanceConfig", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddUserRelevanceConfig(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddUserRelevanceConfig", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddUserConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("AddUserConfig", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddUserConfig(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddUserConfig", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateUserConfig(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateUserConfig", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateUserConfig(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateUserConfig", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteUserConfig(string _userConfigID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _userConfigID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteUserConfig", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteUserConfig(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteUserConfig", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserConfigModelByID(string _userConfigID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _userConfigID;
                System.IAsyncResult _result = base.BeginInvoke("GetUserConfigModelByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG EndGetUserConfigModelByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG _result = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_USERCONFIG)(base.EndInvoke("GetUserConfigModelByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddNews(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("AddNews", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddNews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddNewsByViewer(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> _viewer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = model;
                _args[1] = _viewer;
                System.IAsyncResult _result = base.BeginInvoke("AddNewsByViewer", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddNewsByViewer(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddNewsByViewer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateNews(SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER> _viewer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = model;
                _args[1] = _viewer;
                System.IAsyncResult _result = base.BeginInvoke("UpdateNews", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateNews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteNews(string _newsID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _newsID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteNews", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteNews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsModelByID(string _newsID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _newsID;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsModelByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS EndGetNewsModelByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS _result = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS)(base.EndInvoke("GetNewsModelByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsDetailsByID(string _newsID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _newsID;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsDetailsByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSView EndGetNewsDetailsByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSView _result = ((SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWSView)(base.EndInvoke("GetNewsDetailsByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetNewsList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> EndGetNewsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS>)(base.EndInvoke("GetNewsList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsLists(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetNewsLists", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER>> EndGetNewsLists(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER>> _result = ((System.Collections.Generic.Dictionary<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_DISTRIBUTEUSER>>)(base.EndInvoke("GetNewsLists", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsListByParams(string type, int topCount, string state, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = type;
                _args[1] = topCount;
                _args[2] = state;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsListByParams", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> EndGetNewsListByParams(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS>)(base.EndInvoke("GetNewsListByParams", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsListByEmployeeID(string type, int topCount, string state, string employeeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = type;
                _args[1] = topCount;
                _args[2] = state;
                _args[3] = employeeID;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsListByEmployeeID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> EndGetNewsListByEmployeeID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS>)(base.EndInvoke("GetNewsListByEmployeeID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsListByState(string state, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = state;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsListByState", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> EndGetNewsListByState(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsWS.T_PF_NEWS>)(base.EndInvoke("GetNewsListByState", _args, result)));
                return _result;
            }
        }
    }
}
