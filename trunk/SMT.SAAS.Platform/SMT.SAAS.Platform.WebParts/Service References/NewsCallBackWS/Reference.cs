//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SMT.SAAS.Platform.WebParts.NewsCallBackWS {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsCallBackWS.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS))]
    public partial class EntityObject : SMT.SAAS.Platform.WebParts.NewsCallBackWS.StructuralObject {
        
        private SMT.SAAS.Platform.WebParts.NewsCallBackWS.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.SAAS.Platform.WebParts.NewsCallBackWS.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_NEWS", Namespace="http://schemas.datacontract.org/2004/07/SMT_PF_EFModel", IsReference=true)]
    public partial class T_PF_NEWS : SMT.SAAS.Platform.WebParts.NewsCallBackWS.EntityObject {
        
        private string COMMENTCOUNTField;
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string ISIMAGEField;
        
        private byte[] NEWSCONTENTField;
        
        private string NEWSIDField;
        
        private string NEWSSTATEField;
        
        private string NEWSTITELField;
        
        private string NEWSTYPEIDField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERNAMEField;
        
        private string OWNERPOSTIDField;
        
        private string READCOUNTField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        private string UPDATEUSERNAMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMMENTCOUNT {
            get {
                return this.COMMENTCOUNTField;
            }
            set {
                if ((object.ReferenceEquals(this.COMMENTCOUNTField, value) != true)) {
                    this.COMMENTCOUNTField = value;
                    this.RaisePropertyChanged("COMMENTCOUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISIMAGE {
            get {
                return this.ISIMAGEField;
            }
            set {
                if ((object.ReferenceEquals(this.ISIMAGEField, value) != true)) {
                    this.ISIMAGEField = value;
                    this.RaisePropertyChanged("ISIMAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] NEWSCONTENT {
            get {
                return this.NEWSCONTENTField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSCONTENTField, value) != true)) {
                    this.NEWSCONTENTField = value;
                    this.RaisePropertyChanged("NEWSCONTENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSID {
            get {
                return this.NEWSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSIDField, value) != true)) {
                    this.NEWSIDField = value;
                    this.RaisePropertyChanged("NEWSID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSSTATE {
            get {
                return this.NEWSSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSSTATEField, value) != true)) {
                    this.NEWSSTATEField = value;
                    this.RaisePropertyChanged("NEWSSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSTITEL {
            get {
                return this.NEWSTITELField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSTITELField, value) != true)) {
                    this.NEWSTITELField = value;
                    this.RaisePropertyChanged("NEWSTITEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSTYPEID {
            get {
                return this.NEWSTYPEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSTYPEIDField, value) != true)) {
                    this.NEWSTYPEIDField = value;
                    this.RaisePropertyChanged("NEWSTYPEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERNAME {
            get {
                return this.OWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERNAMEField, value) != true)) {
                    this.OWNERNAMEField = value;
                    this.RaisePropertyChanged("OWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string READCOUNT {
            get {
                return this.READCOUNTField;
            }
            set {
                if ((object.ReferenceEquals(this.READCOUNTField, value) != true)) {
                    this.READCOUNTField = value;
                    this.RaisePropertyChanged("READCOUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERNAME {
            get {
                return this.UPDATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERNAMEField, value) != true)) {
                    this.UPDATEUSERNAMEField = value;
                    this.RaisePropertyChanged("UPDATEUSERNAME");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsCallBackWS.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsCallBackWS.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsCallBackWS.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.WebParts.NewsCallBackWS.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsCallBackWS.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.SAAS.Platform.WebParts.NewsCallBackWS.StructuralObject))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Silverlight", ConfigurationName="NewsCallBackWS.INewsCallBack", CallbackContract=typeof(SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBackCallback))]
    public interface INewsCallBack {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="Silverlight/INewsCallBack/Login")]
        System.IAsyncResult BeginLogin(System.AsyncCallback callback, object asyncState);
        
        void EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="Silverlight/INewsCallBack/Logout")]
        System.IAsyncResult BeginLogout(System.AsyncCallback callback, object asyncState);
        
        void EndLogout(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="Silverlight/INewsCallBack/TalkNews")]
        System.IAsyncResult BeginTalkNews(SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS model, System.AsyncCallback callback, object asyncState);
        
        void EndTalkNews(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsCallBackCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="Silverlight/INewsCallBack/Receive")]
        void Receive(SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS news);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsCallBackChannel : SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsCallBackClient : System.ServiceModel.DuplexClientBase<SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack>, SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogoutDelegate;
        
        private EndOperationDelegate onEndLogoutDelegate;
        
        private System.Threading.SendOrPostCallback onLogoutCompletedDelegate;
        
        private BeginOperationDelegate onBeginTalkNewsDelegate;
        
        private EndOperationDelegate onEndTalkNewsDelegate;
        
        private System.Threading.SendOrPostCallback onTalkNewsCompletedDelegate;
        
        private bool useGeneratedCallback;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public NewsCallBackClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public NewsCallBackClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public NewsCallBackClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NewsCallBackClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NewsCallBackClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public NewsCallBackClient(string endpointConfigurationName) : 
                this(new NewsCallBackClientCallback(), endpointConfigurationName) {
        }
        
        private NewsCallBackClient(NewsCallBackClientCallback callbackImpl, string endpointConfigurationName) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl), endpointConfigurationName) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public NewsCallBackClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new NewsCallBackClientCallback(), binding, remoteAddress) {
        }
        
        private NewsCallBackClient(NewsCallBackClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public NewsCallBackClient() : 
                this(new NewsCallBackClientCallback()) {
        }
        
        private NewsCallBackClient(NewsCallBackClientCallback callbackImpl) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl)) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogoutCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TalkNewsCompleted;
        
        public event System.EventHandler<ReceiveReceivedEventArgs> ReceiveReceived;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack.BeginLogin(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack.EndLogin(System.IAsyncResult result) {
            base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack)(this)).BeginLogin(callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            ((SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack)(this)).EndLogin(result);
            return null;
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync() {
            this.LoginAsync(null);
        }
        
        public void LoginAsync(object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, null, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack.BeginLogout(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogout(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack.EndLogout(System.IAsyncResult result) {
            base.Channel.EndLogout(result);
        }
        
        private System.IAsyncResult OnBeginLogout(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack)(this)).BeginLogout(callback, asyncState);
        }
        
        private object[] OnEndLogout(System.IAsyncResult result) {
            ((SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack)(this)).EndLogout(result);
            return null;
        }
        
        private void OnLogoutCompleted(object state) {
            if ((this.LogoutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogoutAsync() {
            this.LogoutAsync(null);
        }
        
        public void LogoutAsync(object userState) {
            if ((this.onBeginLogoutDelegate == null)) {
                this.onBeginLogoutDelegate = new BeginOperationDelegate(this.OnBeginLogout);
            }
            if ((this.onEndLogoutDelegate == null)) {
                this.onEndLogoutDelegate = new EndOperationDelegate(this.OnEndLogout);
            }
            if ((this.onLogoutCompletedDelegate == null)) {
                this.onLogoutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogoutCompleted);
            }
            base.InvokeAsync(this.onBeginLogoutDelegate, null, this.onEndLogoutDelegate, this.onLogoutCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack.BeginTalkNews(SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTalkNews(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack.EndTalkNews(System.IAsyncResult result) {
            base.Channel.EndTalkNews(result);
        }
        
        private System.IAsyncResult OnBeginTalkNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS model = ((SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS)(inValues[0]));
            return ((SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack)(this)).BeginTalkNews(model, callback, asyncState);
        }
        
        private object[] OnEndTalkNews(System.IAsyncResult result) {
            ((SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack)(this)).EndTalkNews(result);
            return null;
        }
        
        private void OnTalkNewsCompleted(object state) {
            if ((this.TalkNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TalkNewsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TalkNewsAsync(SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS model) {
            this.TalkNewsAsync(model, null);
        }
        
        public void TalkNewsAsync(SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS model, object userState) {
            if ((this.onBeginTalkNewsDelegate == null)) {
                this.onBeginTalkNewsDelegate = new BeginOperationDelegate(this.OnBeginTalkNews);
            }
            if ((this.onEndTalkNewsDelegate == null)) {
                this.onEndTalkNewsDelegate = new EndOperationDelegate(this.OnEndTalkNews);
            }
            if ((this.onTalkNewsCompletedDelegate == null)) {
                this.onTalkNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTalkNewsCompleted);
            }
            base.InvokeAsync(this.onBeginTalkNewsDelegate, new object[] {
                        model}, this.onEndTalkNewsDelegate, this.onTalkNewsCompletedDelegate, userState);
        }
        
        private void OnReceiveReceived(object state) {
            if ((this.ReceiveReceived != null)) {
                object[] results = ((object[])(state));
                this.ReceiveReceived(this, new ReceiveReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void VerifyCallbackEvents() {
            if (((this.useGeneratedCallback != true) 
                        && (this.ReceiveReceived != null))) {
                throw new System.InvalidOperationException("Callback events cannot be used when the callback InstanceContext is specified. Pl" +
                        "ease choose between specifying the callback InstanceContext or subscribing to th" +
                        "e callback events.");
            }
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack CreateChannel() {
            return new NewsCallBackClientChannel(this);
        }
        
        private class NewsCallBackClientCallback : object, INewsCallBackCallback {
            
            private NewsCallBackClient proxy;
            
            public void Initialize(NewsCallBackClient proxy) {
                this.proxy = proxy;
            }
            
            public void Receive(SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS news) {
                this.proxy.OnReceiveReceived(new object[] {
                            news});
            }
        }
        
        private class NewsCallBackClientChannel : ChannelBase<SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack>, SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack {
            
            public NewsCallBackClientChannel(System.ServiceModel.DuplexClientBase<SMT.SAAS.Platform.WebParts.NewsCallBackWS.INewsCallBack> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLogin(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public void EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Login", _args, result);
            }
            
            public System.IAsyncResult BeginLogout(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Logout", _args, callback, asyncState);
                return _result;
            }
            
            public void EndLogout(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Logout", _args, result);
            }
            
            public System.IAsyncResult BeginTalkNews(SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("TalkNews", _args, callback, asyncState);
                return _result;
            }
            
            public void EndTalkNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("TalkNews", _args, result);
            }
        }
    }
    
    public class ReceiveReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReceiveReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS news {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.SAAS.Platform.WebParts.NewsCallBackWS.T_PF_NEWS)(this.results[0]));
            }
        }
    }
}
