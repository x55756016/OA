//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SMT.SAAS.Platform.Client.PlatformWS {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleInfo", Namespace="http://schemas.datacontract.org/2004/07/SMT.SAAS.Platform.Model")]
    public partial class ModuleInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> DependsOnField;
        
        private string DescriptionField;
        
        private string EnterAssemblyField;
        
        private string FileNameField;
        
        private string FilePathField;
        
        private string HostAddressField;
        
        private System.Collections.Generic.Dictionary<string, string> InitParamsField;
        
        private string IsSaveField;
        
        private string ModuleCodeField;
        
        private string ModuleIDField;
        
        private string ModuleIconField;
        
        private string ModuleNameField;
        
        private string ModuleTypeField;
        
        private string ParentModuleIDField;
        
        private string ServerIDField;
        
        private string SystemTypeField;
        
        private string UseStateField;
        
        private string VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> DependsOn {
            get {
                return this.DependsOnField;
            }
            set {
                if ((object.ReferenceEquals(this.DependsOnField, value) != true)) {
                    this.DependsOnField = value;
                    this.RaisePropertyChanged("DependsOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterAssembly {
            get {
                return this.EnterAssemblyField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterAssemblyField, value) != true)) {
                    this.EnterAssemblyField = value;
                    this.RaisePropertyChanged("EnterAssembly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostAddress {
            get {
                return this.HostAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.HostAddressField, value) != true)) {
                    this.HostAddressField = value;
                    this.RaisePropertyChanged("HostAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> InitParams {
            get {
                return this.InitParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitParamsField, value) != true)) {
                    this.InitParamsField = value;
                    this.RaisePropertyChanged("InitParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSave {
            get {
                return this.IsSaveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSaveField, value) != true)) {
                    this.IsSaveField = value;
                    this.RaisePropertyChanged("IsSave");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleCode {
            get {
                return this.ModuleCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleCodeField, value) != true)) {
                    this.ModuleCodeField = value;
                    this.RaisePropertyChanged("ModuleCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleID {
            get {
                return this.ModuleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIDField, value) != true)) {
                    this.ModuleIDField = value;
                    this.RaisePropertyChanged("ModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleIcon {
            get {
                return this.ModuleIconField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIconField, value) != true)) {
                    this.ModuleIconField = value;
                    this.RaisePropertyChanged("ModuleIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleType {
            get {
                return this.ModuleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleTypeField, value) != true)) {
                    this.ModuleTypeField = value;
                    this.RaisePropertyChanged("ModuleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentModuleID {
            get {
                return this.ParentModuleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentModuleIDField, value) != true)) {
                    this.ParentModuleIDField = value;
                    this.RaisePropertyChanged("ParentModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerID {
            get {
                return this.ServerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerIDField, value) != true)) {
                    this.ServerIDField = value;
                    this.RaisePropertyChanged("ServerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemType {
            get {
                return this.SystemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemTypeField, value) != true)) {
                    this.SystemTypeField = value;
                    this.RaisePropertyChanged("SystemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UseState {
            get {
                return this.UseStateField;
            }
            set {
                if ((object.ReferenceEquals(this.UseStateField, value) != true)) {
                    this.UseStateField = value;
                    this.RaisePropertyChanged("UseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortCut", Namespace="http://schemas.datacontract.org/2004/07/SMT.SAAS.Platform.Model")]
    public partial class ShortCut : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AssemplyNameField;
        
        private string FullNameField;
        
        private string IconPathField;
        
        private string IsSysNeedField;
        
        private string ModuleIDField;
        
        private string ParamsField;
        
        private string ShortCutIDField;
        
        private string TitelField;
        
        private string UserStateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemplyName {
            get {
                return this.AssemplyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemplyNameField, value) != true)) {
                    this.AssemplyNameField = value;
                    this.RaisePropertyChanged("AssemplyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconPath {
            get {
                return this.IconPathField;
            }
            set {
                if ((object.ReferenceEquals(this.IconPathField, value) != true)) {
                    this.IconPathField = value;
                    this.RaisePropertyChanged("IconPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSysNeed {
            get {
                return this.IsSysNeedField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSysNeedField, value) != true)) {
                    this.IsSysNeedField = value;
                    this.RaisePropertyChanged("IsSysNeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleID {
            get {
                return this.ModuleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIDField, value) != true)) {
                    this.ModuleIDField = value;
                    this.RaisePropertyChanged("ModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortCutID {
            get {
                return this.ShortCutIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortCutIDField, value) != true)) {
                    this.ShortCutIDField = value;
                    this.RaisePropertyChanged("ShortCutID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titel {
            get {
                return this.TitelField;
            }
            set {
                if ((object.ReferenceEquals(this.TitelField, value) != true)) {
                    this.TitelField = value;
                    this.RaisePropertyChanged("Titel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserState {
            get {
                return this.UserStateField;
            }
            set {
                if ((object.ReferenceEquals(this.UserStateField, value) != true)) {
                    this.UserStateField = value;
                    this.RaisePropertyChanged("UserState");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlatformWS.IPlatformServices")]
    public interface IPlatformServices {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/AddModule", ReplyAction="http://tempuri.org/IPlatformServices/AddModuleResponse")]
        System.IAsyncResult BeginAddModule(SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo model, System.AsyncCallback callback, object asyncState);
        
        bool EndAddModule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetModuleByCodes", ReplyAction="http://tempuri.org/IPlatformServices/GetModuleByCodesResponse")]
        System.IAsyncResult BeginGetModuleByCodes(System.Collections.ObjectModel.ObservableCollection<string> moduleCodes, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> EndGetModuleByCodes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetModuleFileStream", ReplyAction="http://tempuri.org/IPlatformServices/GetModuleFileStreamResponse")]
        System.IAsyncResult BeginGetModuleFileStream(string fileName, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetModuleFileStream(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/AddModuleByFile", ReplyAction="http://tempuri.org/IPlatformServices/AddModuleByFileResponse")]
        System.IAsyncResult BeginAddModuleByFile(SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo model, byte[] xapFileStream, System.AsyncCallback callback, object asyncState);
        
        bool EndAddModuleByFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetModuleCatalogByUser", ReplyAction="http://tempuri.org/IPlatformServices/GetModuleCatalogByUserResponse")]
        System.IAsyncResult BeginGetModuleCatalogByUser(string userSysID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> EndGetModuleCatalogByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetShortCutByUser", ReplyAction="http://tempuri.org/IPlatformServices/GetShortCutByUserResponse")]
        System.IAsyncResult BeginGetShortCutByUser(string userSysID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut> EndGetShortCutByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/AddShortCutByUser", ReplyAction="http://tempuri.org/IPlatformServices/AddShortCutByUserResponse")]
        System.IAsyncResult BeginAddShortCutByUser(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut> models, string userID, System.AsyncCallback callback, object asyncState);
        
        bool EndAddShortCutByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/RemoveShortCutByUser", ReplyAction="http://tempuri.org/IPlatformServices/RemoveShortCutByUserResponse")]
        System.IAsyncResult BeginRemoveShortCutByUser(string shortCutID, string userID, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveShortCutByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformServices/GetTaskConfigInfoByUser", ReplyAction="http://tempuri.org/IPlatformServices/GetTaskConfigInfoByUserResponse")]
        System.IAsyncResult BeginGetTaskConfigInfoByUser(string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> EndGetTaskConfigInfoByUser(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlatformServicesChannel : SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetModuleByCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetModuleByCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetModuleFileStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetModuleFileStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddModuleByFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddModuleByFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetModuleCatalogByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetModuleCatalogByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShortCutByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShortCutByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddShortCutByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddShortCutByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveShortCutByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveShortCutByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTaskConfigInfoByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTaskConfigInfoByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlatformServicesClient : System.ServiceModel.ClientBase<SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices>, SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices {
        
        private BeginOperationDelegate onBeginAddModuleDelegate;
        
        private EndOperationDelegate onEndAddModuleDelegate;
        
        private System.Threading.SendOrPostCallback onAddModuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetModuleByCodesDelegate;
        
        private EndOperationDelegate onEndGetModuleByCodesDelegate;
        
        private System.Threading.SendOrPostCallback onGetModuleByCodesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetModuleFileStreamDelegate;
        
        private EndOperationDelegate onEndGetModuleFileStreamDelegate;
        
        private System.Threading.SendOrPostCallback onGetModuleFileStreamCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddModuleByFileDelegate;
        
        private EndOperationDelegate onEndAddModuleByFileDelegate;
        
        private System.Threading.SendOrPostCallback onAddModuleByFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetModuleCatalogByUserDelegate;
        
        private EndOperationDelegate onEndGetModuleCatalogByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetModuleCatalogByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetShortCutByUserDelegate;
        
        private EndOperationDelegate onEndGetShortCutByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetShortCutByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddShortCutByUserDelegate;
        
        private EndOperationDelegate onEndAddShortCutByUserDelegate;
        
        private System.Threading.SendOrPostCallback onAddShortCutByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveShortCutByUserDelegate;
        
        private EndOperationDelegate onEndRemoveShortCutByUserDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveShortCutByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTaskConfigInfoByUserDelegate;
        
        private EndOperationDelegate onEndGetTaskConfigInfoByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetTaskConfigInfoByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PlatformServicesClient() {
        }
        
        public PlatformServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlatformServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlatformServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlatformServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<AddModuleCompletedEventArgs> AddModuleCompleted;
        
        public event System.EventHandler<GetModuleByCodesCompletedEventArgs> GetModuleByCodesCompleted;
        
        public event System.EventHandler<GetModuleFileStreamCompletedEventArgs> GetModuleFileStreamCompleted;
        
        public event System.EventHandler<AddModuleByFileCompletedEventArgs> AddModuleByFileCompleted;
        
        public event System.EventHandler<GetModuleCatalogByUserCompletedEventArgs> GetModuleCatalogByUserCompleted;
        
        public event System.EventHandler<GetShortCutByUserCompletedEventArgs> GetShortCutByUserCompleted;
        
        public event System.EventHandler<AddShortCutByUserCompletedEventArgs> AddShortCutByUserCompleted;
        
        public event System.EventHandler<RemoveShortCutByUserCompletedEventArgs> RemoveShortCutByUserCompleted;
        
        public event System.EventHandler<GetTaskConfigInfoByUserCompletedEventArgs> GetTaskConfigInfoByUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.BeginAddModule(SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddModule(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.EndAddModule(System.IAsyncResult result) {
            return base.Channel.EndAddModule(result);
        }
        
        private System.IAsyncResult OnBeginAddModule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo model = ((SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo)(inValues[0]));
            return ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).BeginAddModule(model, callback, asyncState);
        }
        
        private object[] OnEndAddModule(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).EndAddModule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddModuleCompleted(object state) {
            if ((this.AddModuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddModuleCompleted(this, new AddModuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddModuleAsync(SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo model) {
            this.AddModuleAsync(model, null);
        }
        
        public void AddModuleAsync(SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo model, object userState) {
            if ((this.onBeginAddModuleDelegate == null)) {
                this.onBeginAddModuleDelegate = new BeginOperationDelegate(this.OnBeginAddModule);
            }
            if ((this.onEndAddModuleDelegate == null)) {
                this.onEndAddModuleDelegate = new EndOperationDelegate(this.OnEndAddModule);
            }
            if ((this.onAddModuleCompletedDelegate == null)) {
                this.onAddModuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddModuleCompleted);
            }
            base.InvokeAsync(this.onBeginAddModuleDelegate, new object[] {
                        model}, this.onEndAddModuleDelegate, this.onAddModuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.BeginGetModuleByCodes(System.Collections.ObjectModel.ObservableCollection<string> moduleCodes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetModuleByCodes(moduleCodes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.EndGetModuleByCodes(System.IAsyncResult result) {
            return base.Channel.EndGetModuleByCodes(result);
        }
        
        private System.IAsyncResult OnBeginGetModuleByCodes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> moduleCodes = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).BeginGetModuleByCodes(moduleCodes, callback, asyncState);
        }
        
        private object[] OnEndGetModuleByCodes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> retVal = ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).EndGetModuleByCodes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetModuleByCodesCompleted(object state) {
            if ((this.GetModuleByCodesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetModuleByCodesCompleted(this, new GetModuleByCodesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetModuleByCodesAsync(System.Collections.ObjectModel.ObservableCollection<string> moduleCodes) {
            this.GetModuleByCodesAsync(moduleCodes, null);
        }
        
        public void GetModuleByCodesAsync(System.Collections.ObjectModel.ObservableCollection<string> moduleCodes, object userState) {
            if ((this.onBeginGetModuleByCodesDelegate == null)) {
                this.onBeginGetModuleByCodesDelegate = new BeginOperationDelegate(this.OnBeginGetModuleByCodes);
            }
            if ((this.onEndGetModuleByCodesDelegate == null)) {
                this.onEndGetModuleByCodesDelegate = new EndOperationDelegate(this.OnEndGetModuleByCodes);
            }
            if ((this.onGetModuleByCodesCompletedDelegate == null)) {
                this.onGetModuleByCodesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetModuleByCodesCompleted);
            }
            base.InvokeAsync(this.onBeginGetModuleByCodesDelegate, new object[] {
                        moduleCodes}, this.onEndGetModuleByCodesDelegate, this.onGetModuleByCodesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.BeginGetModuleFileStream(string fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetModuleFileStream(fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.EndGetModuleFileStream(System.IAsyncResult result) {
            return base.Channel.EndGetModuleFileStream(result);
        }
        
        private System.IAsyncResult OnBeginGetModuleFileStream(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).BeginGetModuleFileStream(fileName, callback, asyncState);
        }
        
        private object[] OnEndGetModuleFileStream(System.IAsyncResult result) {
            byte[] retVal = ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).EndGetModuleFileStream(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetModuleFileStreamCompleted(object state) {
            if ((this.GetModuleFileStreamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetModuleFileStreamCompleted(this, new GetModuleFileStreamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetModuleFileStreamAsync(string fileName) {
            this.GetModuleFileStreamAsync(fileName, null);
        }
        
        public void GetModuleFileStreamAsync(string fileName, object userState) {
            if ((this.onBeginGetModuleFileStreamDelegate == null)) {
                this.onBeginGetModuleFileStreamDelegate = new BeginOperationDelegate(this.OnBeginGetModuleFileStream);
            }
            if ((this.onEndGetModuleFileStreamDelegate == null)) {
                this.onEndGetModuleFileStreamDelegate = new EndOperationDelegate(this.OnEndGetModuleFileStream);
            }
            if ((this.onGetModuleFileStreamCompletedDelegate == null)) {
                this.onGetModuleFileStreamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetModuleFileStreamCompleted);
            }
            base.InvokeAsync(this.onBeginGetModuleFileStreamDelegate, new object[] {
                        fileName}, this.onEndGetModuleFileStreamDelegate, this.onGetModuleFileStreamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.BeginAddModuleByFile(SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo model, byte[] xapFileStream, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddModuleByFile(model, xapFileStream, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.EndAddModuleByFile(System.IAsyncResult result) {
            return base.Channel.EndAddModuleByFile(result);
        }
        
        private System.IAsyncResult OnBeginAddModuleByFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo model = ((SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo)(inValues[0]));
            byte[] xapFileStream = ((byte[])(inValues[1]));
            return ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).BeginAddModuleByFile(model, xapFileStream, callback, asyncState);
        }
        
        private object[] OnEndAddModuleByFile(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).EndAddModuleByFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddModuleByFileCompleted(object state) {
            if ((this.AddModuleByFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddModuleByFileCompleted(this, new AddModuleByFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddModuleByFileAsync(SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo model, byte[] xapFileStream) {
            this.AddModuleByFileAsync(model, xapFileStream, null);
        }
        
        public void AddModuleByFileAsync(SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo model, byte[] xapFileStream, object userState) {
            if ((this.onBeginAddModuleByFileDelegate == null)) {
                this.onBeginAddModuleByFileDelegate = new BeginOperationDelegate(this.OnBeginAddModuleByFile);
            }
            if ((this.onEndAddModuleByFileDelegate == null)) {
                this.onEndAddModuleByFileDelegate = new EndOperationDelegate(this.OnEndAddModuleByFile);
            }
            if ((this.onAddModuleByFileCompletedDelegate == null)) {
                this.onAddModuleByFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddModuleByFileCompleted);
            }
            base.InvokeAsync(this.onBeginAddModuleByFileDelegate, new object[] {
                        model,
                        xapFileStream}, this.onEndAddModuleByFileDelegate, this.onAddModuleByFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.BeginGetModuleCatalogByUser(string userSysID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetModuleCatalogByUser(userSysID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.EndGetModuleCatalogByUser(System.IAsyncResult result) {
            return base.Channel.EndGetModuleCatalogByUser(result);
        }
        
        private System.IAsyncResult OnBeginGetModuleCatalogByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userSysID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).BeginGetModuleCatalogByUser(userSysID, callback, asyncState);
        }
        
        private object[] OnEndGetModuleCatalogByUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> retVal = ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).EndGetModuleCatalogByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetModuleCatalogByUserCompleted(object state) {
            if ((this.GetModuleCatalogByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetModuleCatalogByUserCompleted(this, new GetModuleCatalogByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetModuleCatalogByUserAsync(string userSysID) {
            this.GetModuleCatalogByUserAsync(userSysID, null);
        }
        
        public void GetModuleCatalogByUserAsync(string userSysID, object userState) {
            if ((this.onBeginGetModuleCatalogByUserDelegate == null)) {
                this.onBeginGetModuleCatalogByUserDelegate = new BeginOperationDelegate(this.OnBeginGetModuleCatalogByUser);
            }
            if ((this.onEndGetModuleCatalogByUserDelegate == null)) {
                this.onEndGetModuleCatalogByUserDelegate = new EndOperationDelegate(this.OnEndGetModuleCatalogByUser);
            }
            if ((this.onGetModuleCatalogByUserCompletedDelegate == null)) {
                this.onGetModuleCatalogByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetModuleCatalogByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetModuleCatalogByUserDelegate, new object[] {
                        userSysID}, this.onEndGetModuleCatalogByUserDelegate, this.onGetModuleCatalogByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.BeginGetShortCutByUser(string userSysID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShortCutByUser(userSysID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut> SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.EndGetShortCutByUser(System.IAsyncResult result) {
            return base.Channel.EndGetShortCutByUser(result);
        }
        
        private System.IAsyncResult OnBeginGetShortCutByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userSysID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).BeginGetShortCutByUser(userSysID, callback, asyncState);
        }
        
        private object[] OnEndGetShortCutByUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut> retVal = ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).EndGetShortCutByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShortCutByUserCompleted(object state) {
            if ((this.GetShortCutByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShortCutByUserCompleted(this, new GetShortCutByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShortCutByUserAsync(string userSysID) {
            this.GetShortCutByUserAsync(userSysID, null);
        }
        
        public void GetShortCutByUserAsync(string userSysID, object userState) {
            if ((this.onBeginGetShortCutByUserDelegate == null)) {
                this.onBeginGetShortCutByUserDelegate = new BeginOperationDelegate(this.OnBeginGetShortCutByUser);
            }
            if ((this.onEndGetShortCutByUserDelegate == null)) {
                this.onEndGetShortCutByUserDelegate = new EndOperationDelegate(this.OnEndGetShortCutByUser);
            }
            if ((this.onGetShortCutByUserCompletedDelegate == null)) {
                this.onGetShortCutByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShortCutByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetShortCutByUserDelegate, new object[] {
                        userSysID}, this.onEndGetShortCutByUserDelegate, this.onGetShortCutByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.BeginAddShortCutByUser(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut> models, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddShortCutByUser(models, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.EndAddShortCutByUser(System.IAsyncResult result) {
            return base.Channel.EndAddShortCutByUser(result);
        }
        
        private System.IAsyncResult OnBeginAddShortCutByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut> models = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut>)(inValues[0]));
            string userID = ((string)(inValues[1]));
            return ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).BeginAddShortCutByUser(models, userID, callback, asyncState);
        }
        
        private object[] OnEndAddShortCutByUser(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).EndAddShortCutByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddShortCutByUserCompleted(object state) {
            if ((this.AddShortCutByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddShortCutByUserCompleted(this, new AddShortCutByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddShortCutByUserAsync(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut> models, string userID) {
            this.AddShortCutByUserAsync(models, userID, null);
        }
        
        public void AddShortCutByUserAsync(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut> models, string userID, object userState) {
            if ((this.onBeginAddShortCutByUserDelegate == null)) {
                this.onBeginAddShortCutByUserDelegate = new BeginOperationDelegate(this.OnBeginAddShortCutByUser);
            }
            if ((this.onEndAddShortCutByUserDelegate == null)) {
                this.onEndAddShortCutByUserDelegate = new EndOperationDelegate(this.OnEndAddShortCutByUser);
            }
            if ((this.onAddShortCutByUserCompletedDelegate == null)) {
                this.onAddShortCutByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddShortCutByUserCompleted);
            }
            base.InvokeAsync(this.onBeginAddShortCutByUserDelegate, new object[] {
                        models,
                        userID}, this.onEndAddShortCutByUserDelegate, this.onAddShortCutByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.BeginRemoveShortCutByUser(string shortCutID, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveShortCutByUser(shortCutID, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.EndRemoveShortCutByUser(System.IAsyncResult result) {
            return base.Channel.EndRemoveShortCutByUser(result);
        }
        
        private System.IAsyncResult OnBeginRemoveShortCutByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string shortCutID = ((string)(inValues[0]));
            string userID = ((string)(inValues[1]));
            return ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).BeginRemoveShortCutByUser(shortCutID, userID, callback, asyncState);
        }
        
        private object[] OnEndRemoveShortCutByUser(System.IAsyncResult result) {
            bool retVal = ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).EndRemoveShortCutByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveShortCutByUserCompleted(object state) {
            if ((this.RemoveShortCutByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveShortCutByUserCompleted(this, new RemoveShortCutByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveShortCutByUserAsync(string shortCutID, string userID) {
            this.RemoveShortCutByUserAsync(shortCutID, userID, null);
        }
        
        public void RemoveShortCutByUserAsync(string shortCutID, string userID, object userState) {
            if ((this.onBeginRemoveShortCutByUserDelegate == null)) {
                this.onBeginRemoveShortCutByUserDelegate = new BeginOperationDelegate(this.OnBeginRemoveShortCutByUser);
            }
            if ((this.onEndRemoveShortCutByUserDelegate == null)) {
                this.onEndRemoveShortCutByUserDelegate = new EndOperationDelegate(this.OnEndRemoveShortCutByUser);
            }
            if ((this.onRemoveShortCutByUserCompletedDelegate == null)) {
                this.onRemoveShortCutByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveShortCutByUserCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveShortCutByUserDelegate, new object[] {
                        shortCutID,
                        userID}, this.onEndRemoveShortCutByUserDelegate, this.onRemoveShortCutByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.BeginGetTaskConfigInfoByUser(string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTaskConfigInfoByUser(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices.EndGetTaskConfigInfoByUser(System.IAsyncResult result) {
            return base.Channel.EndGetTaskConfigInfoByUser(result);
        }
        
        private System.IAsyncResult OnBeginGetTaskConfigInfoByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            return ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).BeginGetTaskConfigInfoByUser(userID, callback, asyncState);
        }
        
        private object[] OnEndGetTaskConfigInfoByUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> retVal = ((SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices)(this)).EndGetTaskConfigInfoByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTaskConfigInfoByUserCompleted(object state) {
            if ((this.GetTaskConfigInfoByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTaskConfigInfoByUserCompleted(this, new GetTaskConfigInfoByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTaskConfigInfoByUserAsync(string userID) {
            this.GetTaskConfigInfoByUserAsync(userID, null);
        }
        
        public void GetTaskConfigInfoByUserAsync(string userID, object userState) {
            if ((this.onBeginGetTaskConfigInfoByUserDelegate == null)) {
                this.onBeginGetTaskConfigInfoByUserDelegate = new BeginOperationDelegate(this.OnBeginGetTaskConfigInfoByUser);
            }
            if ((this.onEndGetTaskConfigInfoByUserDelegate == null)) {
                this.onEndGetTaskConfigInfoByUserDelegate = new EndOperationDelegate(this.OnEndGetTaskConfigInfoByUser);
            }
            if ((this.onGetTaskConfigInfoByUserCompletedDelegate == null)) {
                this.onGetTaskConfigInfoByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTaskConfigInfoByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetTaskConfigInfoByUserDelegate, new object[] {
                        userID}, this.onEndGetTaskConfigInfoByUserDelegate, this.onGetTaskConfigInfoByUserCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices CreateChannel() {
            return new PlatformServicesClientChannel(this);
        }
        
        private class PlatformServicesClientChannel : ChannelBase<SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices>, SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices {
            
            public PlatformServicesClientChannel(System.ServiceModel.ClientBase<SMT.SAAS.Platform.Client.PlatformWS.IPlatformServices> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddModule(SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("AddModule", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddModule(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddModule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetModuleByCodes(System.Collections.ObjectModel.ObservableCollection<string> moduleCodes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = moduleCodes;
                System.IAsyncResult _result = base.BeginInvoke("GetModuleByCodes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> EndGetModuleByCodes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo>)(base.EndInvoke("GetModuleByCodes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetModuleFileStream(string fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("GetModuleFileStream", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetModuleFileStream(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetModuleFileStream", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddModuleByFile(SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo model, byte[] xapFileStream, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = model;
                _args[1] = xapFileStream;
                System.IAsyncResult _result = base.BeginInvoke("AddModuleByFile", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddModuleByFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddModuleByFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetModuleCatalogByUser(string userSysID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userSysID;
                System.IAsyncResult _result = base.BeginInvoke("GetModuleCatalogByUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> EndGetModuleCatalogByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo>)(base.EndInvoke("GetModuleCatalogByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetShortCutByUser(string userSysID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userSysID;
                System.IAsyncResult _result = base.BeginInvoke("GetShortCutByUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut> EndGetShortCutByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut>)(base.EndInvoke("GetShortCutByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddShortCutByUser(System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ShortCut> models, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = models;
                _args[1] = userID;
                System.IAsyncResult _result = base.BeginInvoke("AddShortCutByUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddShortCutByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddShortCutByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveShortCutByUser(string shortCutID, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = shortCutID;
                _args[1] = userID;
                System.IAsyncResult _result = base.BeginInvoke("RemoveShortCutByUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveShortCutByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveShortCutByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTaskConfigInfoByUser(string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetTaskConfigInfoByUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> EndGetTaskConfigInfoByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.SAAS.Platform.Client.PlatformWS.ModuleInfo>)(base.EndInvoke("GetTaskConfigInfoByUser", _args, result)));
                return _result;
            }
        }
    }
}
