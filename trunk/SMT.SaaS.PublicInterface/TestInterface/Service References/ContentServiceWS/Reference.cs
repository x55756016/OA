//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestInterface.ContentServiceWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/SMT.SaaS.PublicInterface.BLL")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COMPANYIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEPARTMENTIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POSTIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USERIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USERNAMEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYID {
            get {
                return this.COMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYIDField, value) != true)) {
                    this.COMPANYIDField = value;
                    this.RaisePropertyChanged("COMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPARTMENTID {
            get {
                return this.DEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPARTMENTIDField, value) != true)) {
                    this.DEPARTMENTIDField = value;
                    this.RaisePropertyChanged("DEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POSTID {
            get {
                return this.POSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTIDField, value) != true)) {
                    this.POSTIDField = value;
                    this.RaisePropertyChanged("POSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERID {
            get {
                return this.USERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.USERIDField, value) != true)) {
                    this.USERIDField = value;
                    this.RaisePropertyChanged("USERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERNAME {
            get {
                return this.USERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.USERNAMEField, value) != true)) {
                    this.USERNAMEField = value;
                    this.RaisePropertyChanged("USERNAME");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContentServiceWS.IContentService")]
    public interface IContentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentService/GetContent", ReplyAction="http://tempuri.org/IContentService/GetContentResponse")]
        byte[] GetContent(string FORMID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentService/DeleteContent", ReplyAction="http://tempuri.org/IContentService/DeleteContentResponse")]
        bool DeleteContent(string FORMID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentService/UpdateContent", ReplyAction="http://tempuri.org/IContentService/UpdateContentResponse")]
        bool UpdateContent(string FormID, byte[] content, TestInterface.ContentServiceWS.UserInfo userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentService/AddContent", ReplyAction="http://tempuri.org/IContentService/AddContentResponse")]
        bool AddContent(string FormID, byte[] content, string CompanyID, string SystemCode, string ModelName, TestInterface.ContentServiceWS.UserInfo userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentService/IsExits", ReplyAction="http://tempuri.org/IContentService/IsExitsResponse")]
        bool IsExits(string FORMID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContentServiceChannel : TestInterface.ContentServiceWS.IContentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContentServiceClient : System.ServiceModel.ClientBase<TestInterface.ContentServiceWS.IContentService>, TestInterface.ContentServiceWS.IContentService {
        
        public ContentServiceClient() {
        }
        
        public ContentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] GetContent(string FORMID) {
            return base.Channel.GetContent(FORMID);
        }
        
        public bool DeleteContent(string FORMID) {
            return base.Channel.DeleteContent(FORMID);
        }
        
        public bool UpdateContent(string FormID, byte[] content, TestInterface.ContentServiceWS.UserInfo userinfo) {
            return base.Channel.UpdateContent(FormID, content, userinfo);
        }
        
        public bool AddContent(string FormID, byte[] content, string CompanyID, string SystemCode, string ModelName, TestInterface.ContentServiceWS.UserInfo userinfo) {
            return base.Channel.AddContent(FormID, content, CompanyID, SystemCode, ModelName, userinfo);
        }
        
        public bool IsExits(string FORMID) {
            return base.Channel.IsExits(FORMID);
        }
    }
}
