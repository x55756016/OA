<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls">

    <Style TargetType="controls:TreeViewItem" x:Key="TreeViewItemStyle">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="5,2,15,2"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="FontFamily" Value="Arial,SimSun"></Setter>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:TreeViewItem">
                    <Grid>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Header" Storyboard.TargetProperty="(UIElement.Foreground).(SolidColorBrush.Color)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#FF999999"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="SelectionStates">
                                <vsm:VisualState x:Name="Unselected"/>
                                <vsm:VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000" 
                                                                       Storyboard.TargetName="select_gradient"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="SelectedInactive">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="inactive"
                                                         Storyboard.TargetProperty="Opacity" To=".2"/>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="HasItemsStates">
                                <vsm:VisualState x:Name="HasItems"/>
                                <vsm:VisualState x:Name="NoItems">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" 
                                                                       Storyboard.TargetName="ExpanderButton"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ExpansionStates">
                                <vsm:VisualState x:Name="Collapsed"/>
                                <vsm:VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" 
                                                                       Storyboard.TargetName="ItemsHost"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="ExpanderButton" IsTabStop="False">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid x:Name="Root">
                                        <vsm:VisualStateManager.VisualStateGroups>
                                            <vsm:VisualStateGroup x:Name="CommonStates">
                                                <vsm:VisualState x:Name="Normal"/>
                                                <vsm:VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0" Storyboard.TargetName="UncheckedVisual1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FF188CAD"/>
                                                        <ColorAnimation Duration="0" Storyboard.TargetName="UncheckedVisual1" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FF188CAD"/>
                                                        <ColorAnimation Duration="0" Storyboard.TargetName="CheckedVisual1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FF188CAD"/>
                                                        <ColorAnimation Duration="0" Storyboard.TargetName="CheckedVisual1" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FF188CAD"/>
                                                    </Storyboard>
                                                </vsm:VisualState>
                                                <vsm:VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root"
                                                                         Storyboard.TargetProperty="Opacity" To=".7"/>
                                                    </Storyboard>
                                                </vsm:VisualState>
                                            </vsm:VisualStateGroup>
                                            <vsm:VisualStateGroup x:Name="CheckStates">
                                                <vsm:VisualState x:Name="Unchecked"/>
                                                <vsm:VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                                    </Storyboard>
                                                </vsm:VisualState>
                                            </vsm:VisualStateGroup>
                                        </vsm:VisualStateManager.VisualStateGroups>
                                        <Grid HorizontalAlignment="Right" Margin="2,2,2,2">
                                            <Grid Width="12" Height="12" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Center" x:Name="UncheckedVisual">
                                                <Path  Height="8" Width="8" x:Name="UncheckedVisual1" 
                                                  Fill="#FF252525" StrokeThickness="0" Stroke="#FF252525" StrokeLineJoin="Miter"   
                                                  Data="M4.07411,0 L5.5555825,0 L5.5555825,4.2857141 L10,4.2857141 L10,5.7142859 L5.5555825,5.7142859 L5.5555825,10 L4.07411,10 L4.07411,5.7142859 L0.030924482,5.7142859 L0,4.2857141 L4.0740743,4.2857141 z" Stretch="Fill"/>
                                            </Grid>
                                            <Grid x:Name="CheckedVisual" Background="Transparent" Height="12" Width="12" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="0" >
                                                <Path Height="1" Width="8" x:Name="CheckedVisual1" 
                                                  Fill="#FF252525" Stroke="#FF252525" StrokeThickness="0" StrokeLineJoin="Miter"
                                                  Data="M0.47169811,0.2647059 L9.5283022,0.2647059 L9.5283022,0.7352941 L0.47169811,0.7352941 z" Stretch="Fill" />
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Rectangle x:Name="select_gradient" Grid.Column="1" StrokeThickness="1" RadiusX="1" 
                                   RadiusY="1" Opacity="0" IsHitTestVisible="False"
                                   Fill="{StaticResource Treeviewselect_gradient}" 
                                   Stroke="{StaticResource Treeviewborderselect_gradient}">
                        </Rectangle>
                        <Rectangle x:Name="inactive" Grid.Column="1" Fill="#FF999999" 
                                   Stroke="#FF333333" StrokeThickness="1" RadiusX="2" 
                                   RadiusY="2" Opacity="0" IsHitTestVisible="False"/>
                        <Button x:Name="Header" Grid.Column="1" Foreground="{TemplateBinding Foreground}"
                                FontFamily="{TemplateBinding FontFamily}" 
                                FontSize="{TemplateBinding FontSize}" Padding="{TemplateBinding Padding}" 
                                Content="{TemplateBinding Header}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                Cursor="{TemplateBinding Cursor}" ClickMode="Hover" IsTabStop="False">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <vsm:VisualStateManager.VisualStateGroups>
                                            <vsm:VisualStateGroup x:Name="CommonStates">
                                                <vsm:VisualState x:Name="Normal"/>
                                                <vsm:VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" Storyboard.TargetName="hover_gradient" Storyboard.TargetProperty="Opacity" To="0.85"/>
                                                        <DoubleAnimation Duration="0" Storyboard.TargetName="highlight" Storyboard.TargetProperty="Opacity" To="0.65"/>
                                                    </Storyboard>
                                                </vsm:VisualState>
                                                <vsm:VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" Storyboard.TargetName="content" Storyboard.TargetProperty="Opacity" To=".55"/>
                                                    </Storyboard>
                                                </vsm:VisualState>
                                            </vsm:VisualStateGroup>
                                        </vsm:VisualStateManager.VisualStateGroups>
                                        <Rectangle x:Name="hover_gradient" Stroke="#FFC2DAE3" 
                                                   StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" 
                                                   IsHitTestVisible="False" Fill="{StaticResource Treeviewhover_gradient}">
                                           
                                        </Rectangle>
                                        <Rectangle x:Name="highlight" Margin="1" StrokeThickness="1" 
                                                   RadiusX="0.5" RadiusY="0.5" Opacity="0" IsHitTestVisible="False">
                                            <Rectangle.Stroke>
                                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                                    <GradientStop Color="#FFC2DAE3"/>
                                                    <GradientStop Color="Transparent" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Stroke>
                                        </Rectangle>
                                        <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Left" VerticalAlignment="Center" Cursor="{TemplateBinding Cursor}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" 
                                        Grid.ColumnSpan="2" Grid.Row="1" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="controls:TreeView" x:Key="TreeViewStyle">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="FontFamily" Value="Arial,SimSun"></Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource TreeViewItemStyle}"/>
        <Setter Property="BorderThickness" Value="0,0,0.8,0" />
        <Setter Property="BorderBrush" Value="{StaticResource ColorBlueBorder}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:TreeView">
                    <Grid x:Name="Root">
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                            <ScrollViewer x:Name="ScrollViewer" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                          BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Style="{StaticResource ScrollViewerStyle}" 
                                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter x:Name="TreeItems"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <!--树TreeView-->
    <Style TargetType="controls:TreeViewItem" x:Name="TreeViewitem1">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Name="itemPanel">
                        <Image Source="{Binding}"></Image>
                        <TextBlock Text="{Binding}" Margin="2"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:TreeViewItem" x:Name="TreeMenuItemStyle">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Name="itemPanel">
                        <Image Source="{Binding MENUICONPATH}" Width="16" Height="16"></Image>
                        <TextBlock Text="{Binding MENUNAME}" Margin="4,0,0,0" ></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
