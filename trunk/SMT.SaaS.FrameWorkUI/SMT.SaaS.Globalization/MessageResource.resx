<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ALREADYSUMMARIZE" xml:space="preserve">
    <value>该记录已经汇总，不能再申诉</value>
  </data>
  <data name="M00001" xml:space="preserve">
    <value>此状态已添加</value>
  </data>
  <data name="M00002" xml:space="preserve">
    <value>保存成功</value>
  </data>
  <data name="M00003" xml:space="preserve">
    <value>保存失败</value>
  </data>
  <data name="M00004" xml:space="preserve">
    <value>请输入流程名称</value>
  </data>
  <data name="M00005" xml:space="preserve">
    <value>没有定义状态节点</value>
  </data>
  <data name="M00006" xml:space="preserve">
    <value>所有状态都定义规则才能保存</value>
  </data>
  <data name="M00007" xml:space="preserve">
    <value>起始状态和下一状态不能相同</value>
  </data>
  <data name="M00008" xml:space="preserve">
    <value>此规则已添加，不能添加相同的规则</value>
  </data>
  <data name="M00009" xml:space="preserve">
    <value>请输入模块代码</value>
  </data>
  <data name="M00010" xml:space="preserve">
    <value>请输入模块描述</value>
  </data>
  <data name="M00011" xml:space="preserve">
    <value>请选择需要修改的数据</value>
  </data>
  <data name="M00012" xml:space="preserve">
    <value>请您选择需要删除的数据</value>
  </data>
  <data name="M00013" xml:space="preserve">
    <value>本模块已存在</value>
  </data>
  <data name="M00014" xml:space="preserve">
    <value>本模块已做关联</value>
  </data>
  <data name="M00015" xml:space="preserve">
    <value>必须选择至少一种评分方式</value>
  </data>
  <data name="M00016" xml:space="preserve">
    <value>已存在抽查人员，不能删除抽查组</value>
  </data>
  <data name="M00017" xml:space="preserve">
    <value>请选择汇总人员。</value>
  </data>
  <data name="M00018" xml:space="preserve">
    <value>正在审批，无法删除。</value>
  </data>
  <data name="M00019" xml:space="preserve">
    <value>已审批通过，无法删除。</value>
  </data>
  <data name="M00020" xml:space="preserve">
    <value>请选择汇总类型</value>
  </data>
  <data name="M00021" xml:space="preserve">
    <value>请先删除子节点</value>
  </data>
  <data name="M00022" xml:space="preserve">
    <value>节点有多个流程线，请设置条件</value>
  </data>
  <data name="M00023" xml:space="preserve">
    <value>节点连接线不能全部使用条件</value>
  </data>
  <data name="M00024" xml:space="preserve">
    <value>不能直接从开始节点到结束节点</value>
  </data>
  <data name="M00025" xml:space="preserve">
    <value>流程已经存在，请重新输入流程代码！</value>
  </data>
  <data name="NOTFOUNDCOMPLAIN" xml:space="preserve">
    <value>没有申诉记录。</value>
  </data>
</root>