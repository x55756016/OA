//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.60310.0
// 
namespace SMT.Saas.Tools.FlowWFService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ROLE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENUCUSTOMPERM))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_PERMISSION))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ROLEMENUPERMISSION))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ROLEENTITYMENU))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_USERROLE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_USER))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_FLOWDEFINE_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_MODELDEFINE_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ROLE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENUCUSTOMPERM))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_PERMISSION))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ROLEMENUPERMISSION))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ROLEENTITYMENU))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_USERROLE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_USER))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_FLOWDEFINE_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_MODELDEFINE_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T))]
    public partial class EntityObject : SMT.Saas.Tools.FlowWFService.StructuralObject {
        
        private SMT.Saas.Tools.FlowWFService.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_SYS_ROLE", Namespace="http://schemas.datacontract.org/2004/07/SMT_System_EFModel", IsReference=true)]
    public partial class T_SYS_ROLE : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private string CHECKSTATEField;
        
        private string CREATECOMPANYIDField;
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERField;
        
        private string CREATEUSERNAMEField;
        
        private string ISAUTHORYField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private string REMARKField;
        
        private string ROLEIDField;
        
        private string ROLENAMEField;
        
        private string SYSTEMTYPEField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENUCUSTOMPERM> T_SYS_ENTITYMENUCUSTOMPERMField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLEENTITYMENU> T_SYS_ROLEENTITYMENUField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_USERROLE> T_SYS_USERROLEField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERField;
        
        private string UPDATEUSERNAMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CHECKSTATE {
            get {
                return this.CHECKSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.CHECKSTATEField, value) != true)) {
                    this.CHECKSTATEField = value;
                    this.RaisePropertyChanged("CHECKSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSER {
            get {
                return this.CREATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERField, value) != true)) {
                    this.CREATEUSERField = value;
                    this.RaisePropertyChanged("CREATEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISAUTHORY {
            get {
                return this.ISAUTHORYField;
            }
            set {
                if ((object.ReferenceEquals(this.ISAUTHORYField, value) != true)) {
                    this.ISAUTHORYField = value;
                    this.RaisePropertyChanged("ISAUTHORY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ROLEID {
            get {
                return this.ROLEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ROLEIDField, value) != true)) {
                    this.ROLEIDField = value;
                    this.RaisePropertyChanged("ROLEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ROLENAME {
            get {
                return this.ROLENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ROLENAMEField, value) != true)) {
                    this.ROLENAMEField = value;
                    this.RaisePropertyChanged("ROLENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMTYPE {
            get {
                return this.SYSTEMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMTYPEField, value) != true)) {
                    this.SYSTEMTYPEField = value;
                    this.RaisePropertyChanged("SYSTEMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENUCUSTOMPERM> T_SYS_ENTITYMENUCUSTOMPERM {
            get {
                return this.T_SYS_ENTITYMENUCUSTOMPERMField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ENTITYMENUCUSTOMPERMField, value) != true)) {
                    this.T_SYS_ENTITYMENUCUSTOMPERMField = value;
                    this.RaisePropertyChanged("T_SYS_ENTITYMENUCUSTOMPERM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLEENTITYMENU> T_SYS_ROLEENTITYMENU {
            get {
                return this.T_SYS_ROLEENTITYMENUField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ROLEENTITYMENUField, value) != true)) {
                    this.T_SYS_ROLEENTITYMENUField = value;
                    this.RaisePropertyChanged("T_SYS_ROLEENTITYMENU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_USERROLE> T_SYS_USERROLE {
            get {
                return this.T_SYS_USERROLEField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_USERROLEField, value) != true)) {
                    this.T_SYS_USERROLEField = value;
                    this.RaisePropertyChanged("T_SYS_USERROLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSER {
            get {
                return this.UPDATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERField, value) != true)) {
                    this.UPDATEUSERField = value;
                    this.RaisePropertyChanged("UPDATEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERNAME {
            get {
                return this.UPDATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERNAMEField, value) != true)) {
                    this.UPDATEUSERNAMEField = value;
                    this.RaisePropertyChanged("UPDATEUSERNAME");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_SYS_ENTITYMENUCUSTOMPERM", Namespace="http://schemas.datacontract.org/2004/07/SMT_System_EFModel", IsReference=true)]
    public partial class T_SYS_ENTITYMENUCUSTOMPERM : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private string COMPANYIDField;
        
        private string COMPANYNAMEField;
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEUSERField;
        
        private string DEPARTMENTIDField;
        
        private string DEPARTMENTNAMEField;
        
        private System.Nullable<System.DateTime> ENDDATEField;
        
        private string ENTITYMENUCUSTOMPERMIDField;
        
        private string POSTIDField;
        
        private string POSTNAMEField;
        
        private string REMARKField;
        
        private System.Nullable<System.DateTime> STARTDATEField;
        
        private SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU T_SYS_ENTITYMENUField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv T_SYS_ENTITYMENUReferenceField;
        
        private SMT.Saas.Tools.FlowWFService.T_SYS_PERMISSION T_SYS_PERMISSIONField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_PERMISSIONCIR1sILv T_SYS_PERMISSIONReferenceField;
        
        private SMT.Saas.Tools.FlowWFService.T_SYS_ROLE T_SYS_ROLEField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLECIR1sILv T_SYS_ROLEReferenceField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYID {
            get {
                return this.COMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYIDField, value) != true)) {
                    this.COMPANYIDField = value;
                    this.RaisePropertyChanged("COMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYNAME {
            get {
                return this.COMPANYNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYNAMEField, value) != true)) {
                    this.COMPANYNAMEField = value;
                    this.RaisePropertyChanged("COMPANYNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSER {
            get {
                return this.CREATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERField, value) != true)) {
                    this.CREATEUSERField = value;
                    this.RaisePropertyChanged("CREATEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPARTMENTID {
            get {
                return this.DEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPARTMENTIDField, value) != true)) {
                    this.DEPARTMENTIDField = value;
                    this.RaisePropertyChanged("DEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPARTMENTNAME {
            get {
                return this.DEPARTMENTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPARTMENTNAMEField, value) != true)) {
                    this.DEPARTMENTNAMEField = value;
                    this.RaisePropertyChanged("DEPARTMENTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ENDDATE {
            get {
                return this.ENDDATEField;
            }
            set {
                if ((this.ENDDATEField.Equals(value) != true)) {
                    this.ENDDATEField = value;
                    this.RaisePropertyChanged("ENDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENTITYMENUCUSTOMPERMID {
            get {
                return this.ENTITYMENUCUSTOMPERMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ENTITYMENUCUSTOMPERMIDField, value) != true)) {
                    this.ENTITYMENUCUSTOMPERMIDField = value;
                    this.RaisePropertyChanged("ENTITYMENUCUSTOMPERMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POSTID {
            get {
                return this.POSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTIDField, value) != true)) {
                    this.POSTIDField = value;
                    this.RaisePropertyChanged("POSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POSTNAME {
            get {
                return this.POSTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTNAMEField, value) != true)) {
                    this.POSTNAMEField = value;
                    this.RaisePropertyChanged("POSTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> STARTDATE {
            get {
                return this.STARTDATEField;
            }
            set {
                if ((this.STARTDATEField.Equals(value) != true)) {
                    this.STARTDATEField = value;
                    this.RaisePropertyChanged("STARTDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU T_SYS_ENTITYMENU {
            get {
                return this.T_SYS_ENTITYMENUField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ENTITYMENUField, value) != true)) {
                    this.T_SYS_ENTITYMENUField = value;
                    this.RaisePropertyChanged("T_SYS_ENTITYMENU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv T_SYS_ENTITYMENUReference {
            get {
                return this.T_SYS_ENTITYMENUReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ENTITYMENUReferenceField, value) != true)) {
                    this.T_SYS_ENTITYMENUReferenceField = value;
                    this.RaisePropertyChanged("T_SYS_ENTITYMENUReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.T_SYS_PERMISSION T_SYS_PERMISSION {
            get {
                return this.T_SYS_PERMISSIONField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_PERMISSIONField, value) != true)) {
                    this.T_SYS_PERMISSIONField = value;
                    this.RaisePropertyChanged("T_SYS_PERMISSION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_PERMISSIONCIR1sILv T_SYS_PERMISSIONReference {
            get {
                return this.T_SYS_PERMISSIONReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_PERMISSIONReferenceField, value) != true)) {
                    this.T_SYS_PERMISSIONReferenceField = value;
                    this.RaisePropertyChanged("T_SYS_PERMISSIONReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.T_SYS_ROLE T_SYS_ROLE {
            get {
                return this.T_SYS_ROLEField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ROLEField, value) != true)) {
                    this.T_SYS_ROLEField = value;
                    this.RaisePropertyChanged("T_SYS_ROLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLECIR1sILv T_SYS_ROLEReference {
            get {
                return this.T_SYS_ROLEReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ROLEReferenceField, value) != true)) {
                    this.T_SYS_ROLEReferenceField = value;
                    this.RaisePropertyChanged("T_SYS_ROLEReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSER {
            get {
                return this.UPDATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERField, value) != true)) {
                    this.UPDATEUSERField = value;
                    this.RaisePropertyChanged("UPDATEUSER");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_SYS_ENTITYMENU", Namespace="http://schemas.datacontract.org/2004/07/SMT_System_EFModel", IsReference=true)]
    public partial class T_SYS_ENTITYMENU : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private string CHILDSYSTEMNAMEField;
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEUSERField;
        
        private string ENTITYCODEField;
        
        private string ENTITYMENUIDField;
        
        private string ENTITYNAMEField;
        
        private string HASSYSTEMMENUField;
        
        private string ISAUTHORITYField;
        
        private string MENUCODEField;
        
        private string MENUICONPATHField;
        
        private string MENUNAMEField;
        
        private decimal ORDERNUMBERField;
        
        private string REMARKField;
        
        private string SYSTEMTYPEField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU> T_SYS_ENTITYMENU1Field;
        
        private SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU T_SYS_ENTITYMENU2Field;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv T_SYS_ENTITYMENU2ReferenceField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENUCUSTOMPERM> T_SYS_ENTITYMENUCUSTOMPERMField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_PERMISSION> T_SYS_PERMISSIONField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLEENTITYMENU> T_SYS_ROLEENTITYMENUField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERField;
        
        private string URLADDRESSField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CHILDSYSTEMNAME {
            get {
                return this.CHILDSYSTEMNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CHILDSYSTEMNAMEField, value) != true)) {
                    this.CHILDSYSTEMNAMEField = value;
                    this.RaisePropertyChanged("CHILDSYSTEMNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSER {
            get {
                return this.CREATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERField, value) != true)) {
                    this.CREATEUSERField = value;
                    this.RaisePropertyChanged("CREATEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENTITYCODE {
            get {
                return this.ENTITYCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.ENTITYCODEField, value) != true)) {
                    this.ENTITYCODEField = value;
                    this.RaisePropertyChanged("ENTITYCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENTITYMENUID {
            get {
                return this.ENTITYMENUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ENTITYMENUIDField, value) != true)) {
                    this.ENTITYMENUIDField = value;
                    this.RaisePropertyChanged("ENTITYMENUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENTITYNAME {
            get {
                return this.ENTITYNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ENTITYNAMEField, value) != true)) {
                    this.ENTITYNAMEField = value;
                    this.RaisePropertyChanged("ENTITYNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HASSYSTEMMENU {
            get {
                return this.HASSYSTEMMENUField;
            }
            set {
                if ((object.ReferenceEquals(this.HASSYSTEMMENUField, value) != true)) {
                    this.HASSYSTEMMENUField = value;
                    this.RaisePropertyChanged("HASSYSTEMMENU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISAUTHORITY {
            get {
                return this.ISAUTHORITYField;
            }
            set {
                if ((object.ReferenceEquals(this.ISAUTHORITYField, value) != true)) {
                    this.ISAUTHORITYField = value;
                    this.RaisePropertyChanged("ISAUTHORITY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MENUCODE {
            get {
                return this.MENUCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MENUCODEField, value) != true)) {
                    this.MENUCODEField = value;
                    this.RaisePropertyChanged("MENUCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MENUICONPATH {
            get {
                return this.MENUICONPATHField;
            }
            set {
                if ((object.ReferenceEquals(this.MENUICONPATHField, value) != true)) {
                    this.MENUICONPATHField = value;
                    this.RaisePropertyChanged("MENUICONPATH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MENUNAME {
            get {
                return this.MENUNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MENUNAMEField, value) != true)) {
                    this.MENUNAMEField = value;
                    this.RaisePropertyChanged("MENUNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ORDERNUMBER {
            get {
                return this.ORDERNUMBERField;
            }
            set {
                if ((this.ORDERNUMBERField.Equals(value) != true)) {
                    this.ORDERNUMBERField = value;
                    this.RaisePropertyChanged("ORDERNUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMTYPE {
            get {
                return this.SYSTEMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMTYPEField, value) != true)) {
                    this.SYSTEMTYPEField = value;
                    this.RaisePropertyChanged("SYSTEMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU> T_SYS_ENTITYMENU1 {
            get {
                return this.T_SYS_ENTITYMENU1Field;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ENTITYMENU1Field, value) != true)) {
                    this.T_SYS_ENTITYMENU1Field = value;
                    this.RaisePropertyChanged("T_SYS_ENTITYMENU1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU T_SYS_ENTITYMENU2 {
            get {
                return this.T_SYS_ENTITYMENU2Field;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ENTITYMENU2Field, value) != true)) {
                    this.T_SYS_ENTITYMENU2Field = value;
                    this.RaisePropertyChanged("T_SYS_ENTITYMENU2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv T_SYS_ENTITYMENU2Reference {
            get {
                return this.T_SYS_ENTITYMENU2ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ENTITYMENU2ReferenceField, value) != true)) {
                    this.T_SYS_ENTITYMENU2ReferenceField = value;
                    this.RaisePropertyChanged("T_SYS_ENTITYMENU2Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENUCUSTOMPERM> T_SYS_ENTITYMENUCUSTOMPERM {
            get {
                return this.T_SYS_ENTITYMENUCUSTOMPERMField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ENTITYMENUCUSTOMPERMField, value) != true)) {
                    this.T_SYS_ENTITYMENUCUSTOMPERMField = value;
                    this.RaisePropertyChanged("T_SYS_ENTITYMENUCUSTOMPERM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_PERMISSION> T_SYS_PERMISSION {
            get {
                return this.T_SYS_PERMISSIONField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_PERMISSIONField, value) != true)) {
                    this.T_SYS_PERMISSIONField = value;
                    this.RaisePropertyChanged("T_SYS_PERMISSION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLEENTITYMENU> T_SYS_ROLEENTITYMENU {
            get {
                return this.T_SYS_ROLEENTITYMENUField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ROLEENTITYMENUField, value) != true)) {
                    this.T_SYS_ROLEENTITYMENUField = value;
                    this.RaisePropertyChanged("T_SYS_ROLEENTITYMENU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSER {
            get {
                return this.UPDATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERField, value) != true)) {
                    this.UPDATEUSERField = value;
                    this.RaisePropertyChanged("UPDATEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URLADDRESS {
            get {
                return this.URLADDRESSField;
            }
            set {
                if ((object.ReferenceEquals(this.URLADDRESSField, value) != true)) {
                    this.URLADDRESSField = value;
                    this.RaisePropertyChanged("URLADDRESS");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_SYS_PERMISSION", Namespace="http://schemas.datacontract.org/2004/07/SMT_System_EFModel", IsReference=true)]
    public partial class T_SYS_PERMISSION : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEUSERField;
        
        private string ISCOMMOMField;
        
        private string PERMISSIONCODEField;
        
        private string PERMISSIONIDField;
        
        private string PERMISSIONNAMEField;
        
        private string PERMISSIONVALUEField;
        
        private string REMARKField;
        
        private SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU T_SYS_ENTITYMENUField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENUCUSTOMPERM> T_SYS_ENTITYMENUCUSTOMPERMField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv T_SYS_ENTITYMENUReferenceField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLEMENUPERMISSION> T_SYS_ROLEMENUPERMISSIONField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSER {
            get {
                return this.CREATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERField, value) != true)) {
                    this.CREATEUSERField = value;
                    this.RaisePropertyChanged("CREATEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISCOMMOM {
            get {
                return this.ISCOMMOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ISCOMMOMField, value) != true)) {
                    this.ISCOMMOMField = value;
                    this.RaisePropertyChanged("ISCOMMOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERMISSIONCODE {
            get {
                return this.PERMISSIONCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.PERMISSIONCODEField, value) != true)) {
                    this.PERMISSIONCODEField = value;
                    this.RaisePropertyChanged("PERMISSIONCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERMISSIONID {
            get {
                return this.PERMISSIONIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PERMISSIONIDField, value) != true)) {
                    this.PERMISSIONIDField = value;
                    this.RaisePropertyChanged("PERMISSIONID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERMISSIONNAME {
            get {
                return this.PERMISSIONNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PERMISSIONNAMEField, value) != true)) {
                    this.PERMISSIONNAMEField = value;
                    this.RaisePropertyChanged("PERMISSIONNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERMISSIONVALUE {
            get {
                return this.PERMISSIONVALUEField;
            }
            set {
                if ((object.ReferenceEquals(this.PERMISSIONVALUEField, value) != true)) {
                    this.PERMISSIONVALUEField = value;
                    this.RaisePropertyChanged("PERMISSIONVALUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU T_SYS_ENTITYMENU {
            get {
                return this.T_SYS_ENTITYMENUField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ENTITYMENUField, value) != true)) {
                    this.T_SYS_ENTITYMENUField = value;
                    this.RaisePropertyChanged("T_SYS_ENTITYMENU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENUCUSTOMPERM> T_SYS_ENTITYMENUCUSTOMPERM {
            get {
                return this.T_SYS_ENTITYMENUCUSTOMPERMField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ENTITYMENUCUSTOMPERMField, value) != true)) {
                    this.T_SYS_ENTITYMENUCUSTOMPERMField = value;
                    this.RaisePropertyChanged("T_SYS_ENTITYMENUCUSTOMPERM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv T_SYS_ENTITYMENUReference {
            get {
                return this.T_SYS_ENTITYMENUReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ENTITYMENUReferenceField, value) != true)) {
                    this.T_SYS_ENTITYMENUReferenceField = value;
                    this.RaisePropertyChanged("T_SYS_ENTITYMENUReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLEMENUPERMISSION> T_SYS_ROLEMENUPERMISSION {
            get {
                return this.T_SYS_ROLEMENUPERMISSIONField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ROLEMENUPERMISSIONField, value) != true)) {
                    this.T_SYS_ROLEMENUPERMISSIONField = value;
                    this.RaisePropertyChanged("T_SYS_ROLEMENUPERMISSION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSER {
            get {
                return this.UPDATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERField, value) != true)) {
                    this.UPDATEUSERField = value;
                    this.RaisePropertyChanged("UPDATEUSER");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_SYS_ROLEMENUPERMISSION", Namespace="http://schemas.datacontract.org/2004/07/SMT_System_EFModel", IsReference=true)]
    public partial class T_SYS_ROLEMENUPERMISSION : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEUSERField;
        
        private string DATARANGEField;
        
        private string EXTENDVALUEField;
        
        private string ROLEMENUPERMIDField;
        
        private SMT.Saas.Tools.FlowWFService.T_SYS_PERMISSION T_SYS_PERMISSIONField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_PERMISSIONCIR1sILv T_SYS_PERMISSIONReferenceField;
        
        private SMT.Saas.Tools.FlowWFService.T_SYS_ROLEENTITYMENU T_SYS_ROLEENTITYMENUField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLEENTITYMENUCIR1sILv T_SYS_ROLEENTITYMENUReferenceField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSER {
            get {
                return this.CREATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERField, value) != true)) {
                    this.CREATEUSERField = value;
                    this.RaisePropertyChanged("CREATEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DATARANGE {
            get {
                return this.DATARANGEField;
            }
            set {
                if ((object.ReferenceEquals(this.DATARANGEField, value) != true)) {
                    this.DATARANGEField = value;
                    this.RaisePropertyChanged("DATARANGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EXTENDVALUE {
            get {
                return this.EXTENDVALUEField;
            }
            set {
                if ((object.ReferenceEquals(this.EXTENDVALUEField, value) != true)) {
                    this.EXTENDVALUEField = value;
                    this.RaisePropertyChanged("EXTENDVALUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ROLEMENUPERMID {
            get {
                return this.ROLEMENUPERMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ROLEMENUPERMIDField, value) != true)) {
                    this.ROLEMENUPERMIDField = value;
                    this.RaisePropertyChanged("ROLEMENUPERMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.T_SYS_PERMISSION T_SYS_PERMISSION {
            get {
                return this.T_SYS_PERMISSIONField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_PERMISSIONField, value) != true)) {
                    this.T_SYS_PERMISSIONField = value;
                    this.RaisePropertyChanged("T_SYS_PERMISSION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_PERMISSIONCIR1sILv T_SYS_PERMISSIONReference {
            get {
                return this.T_SYS_PERMISSIONReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_PERMISSIONReferenceField, value) != true)) {
                    this.T_SYS_PERMISSIONReferenceField = value;
                    this.RaisePropertyChanged("T_SYS_PERMISSIONReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.T_SYS_ROLEENTITYMENU T_SYS_ROLEENTITYMENU {
            get {
                return this.T_SYS_ROLEENTITYMENUField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ROLEENTITYMENUField, value) != true)) {
                    this.T_SYS_ROLEENTITYMENUField = value;
                    this.RaisePropertyChanged("T_SYS_ROLEENTITYMENU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLEENTITYMENUCIR1sILv T_SYS_ROLEENTITYMENUReference {
            get {
                return this.T_SYS_ROLEENTITYMENUReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ROLEENTITYMENUReferenceField, value) != true)) {
                    this.T_SYS_ROLEENTITYMENUReferenceField = value;
                    this.RaisePropertyChanged("T_SYS_ROLEENTITYMENUReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSER {
            get {
                return this.UPDATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERField, value) != true)) {
                    this.UPDATEUSERField = value;
                    this.RaisePropertyChanged("UPDATEUSER");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_SYS_ROLEENTITYMENU", Namespace="http://schemas.datacontract.org/2004/07/SMT_System_EFModel", IsReference=true)]
    public partial class T_SYS_ROLEENTITYMENU : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEUSERField;
        
        private string REMARKField;
        
        private string ROLEENTITYMENUIDField;
        
        private SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU T_SYS_ENTITYMENUField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv T_SYS_ENTITYMENUReferenceField;
        
        private SMT.Saas.Tools.FlowWFService.T_SYS_ROLE T_SYS_ROLEField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLEMENUPERMISSION> T_SYS_ROLEMENUPERMISSIONField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLECIR1sILv T_SYS_ROLEReferenceField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSER {
            get {
                return this.CREATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERField, value) != true)) {
                    this.CREATEUSERField = value;
                    this.RaisePropertyChanged("CREATEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ROLEENTITYMENUID {
            get {
                return this.ROLEENTITYMENUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ROLEENTITYMENUIDField, value) != true)) {
                    this.ROLEENTITYMENUIDField = value;
                    this.RaisePropertyChanged("ROLEENTITYMENUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU T_SYS_ENTITYMENU {
            get {
                return this.T_SYS_ENTITYMENUField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ENTITYMENUField, value) != true)) {
                    this.T_SYS_ENTITYMENUField = value;
                    this.RaisePropertyChanged("T_SYS_ENTITYMENU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv T_SYS_ENTITYMENUReference {
            get {
                return this.T_SYS_ENTITYMENUReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ENTITYMENUReferenceField, value) != true)) {
                    this.T_SYS_ENTITYMENUReferenceField = value;
                    this.RaisePropertyChanged("T_SYS_ENTITYMENUReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.T_SYS_ROLE T_SYS_ROLE {
            get {
                return this.T_SYS_ROLEField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ROLEField, value) != true)) {
                    this.T_SYS_ROLEField = value;
                    this.RaisePropertyChanged("T_SYS_ROLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLEMENUPERMISSION> T_SYS_ROLEMENUPERMISSION {
            get {
                return this.T_SYS_ROLEMENUPERMISSIONField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ROLEMENUPERMISSIONField, value) != true)) {
                    this.T_SYS_ROLEMENUPERMISSIONField = value;
                    this.RaisePropertyChanged("T_SYS_ROLEMENUPERMISSION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLECIR1sILv T_SYS_ROLEReference {
            get {
                return this.T_SYS_ROLEReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ROLEReferenceField, value) != true)) {
                    this.T_SYS_ROLEReferenceField = value;
                    this.RaisePropertyChanged("T_SYS_ROLEReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSER {
            get {
                return this.UPDATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERField, value) != true)) {
                    this.UPDATEUSERField = value;
                    this.RaisePropertyChanged("UPDATEUSER");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_SYS_USERROLE", Namespace="http://schemas.datacontract.org/2004/07/SMT_System_EFModel", IsReference=true)]
    public partial class T_SYS_USERROLE : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEUSERField;
        
        private string EMPLOYEEPOSTIDField;
        
        private string OWNERCOMPANYIDField;
        
        private string POSTIDField;
        
        private SMT.Saas.Tools.FlowWFService.T_SYS_ROLE T_SYS_ROLEField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLECIR1sILv T_SYS_ROLEReferenceField;
        
        private SMT.Saas.Tools.FlowWFService.T_SYS_USER T_SYS_USERField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_USERCIR1sILv T_SYS_USERReferenceField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERField;
        
        private string USERROLEIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSER {
            get {
                return this.CREATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERField, value) != true)) {
                    this.CREATEUSERField = value;
                    this.RaisePropertyChanged("CREATEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEEPOSTID {
            get {
                return this.EMPLOYEEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEEPOSTIDField, value) != true)) {
                    this.EMPLOYEEPOSTIDField = value;
                    this.RaisePropertyChanged("EMPLOYEEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POSTID {
            get {
                return this.POSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTIDField, value) != true)) {
                    this.POSTIDField = value;
                    this.RaisePropertyChanged("POSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.T_SYS_ROLE T_SYS_ROLE {
            get {
                return this.T_SYS_ROLEField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ROLEField, value) != true)) {
                    this.T_SYS_ROLEField = value;
                    this.RaisePropertyChanged("T_SYS_ROLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLECIR1sILv T_SYS_ROLEReference {
            get {
                return this.T_SYS_ROLEReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_ROLEReferenceField, value) != true)) {
                    this.T_SYS_ROLEReferenceField = value;
                    this.RaisePropertyChanged("T_SYS_ROLEReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.T_SYS_USER T_SYS_USER {
            get {
                return this.T_SYS_USERField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_USERField, value) != true)) {
                    this.T_SYS_USERField = value;
                    this.RaisePropertyChanged("T_SYS_USER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_USERCIR1sILv T_SYS_USERReference {
            get {
                return this.T_SYS_USERReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_USERReferenceField, value) != true)) {
                    this.T_SYS_USERReferenceField = value;
                    this.RaisePropertyChanged("T_SYS_USERReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSER {
            get {
                return this.UPDATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERField, value) != true)) {
                    this.UPDATEUSERField = value;
                    this.RaisePropertyChanged("UPDATEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERROLEID {
            get {
                return this.USERROLEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.USERROLEIDField, value) != true)) {
                    this.USERROLEIDField = value;
                    this.RaisePropertyChanged("USERROLEID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_SYS_USER", Namespace="http://schemas.datacontract.org/2004/07/SMT_System_EFModel", IsReference=true)]
    public partial class T_SYS_USER : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEUSERField;
        
        private string EMPLOYEECODEField;
        
        private string EMPLOYEEIDField;
        
        private string EMPLOYEENAMEField;
        
        private string ISENGINEMANAGERField;
        
        private string ISFLOWMANAGERField;
        
        private System.Nullable<decimal> ISMANGERField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private string PASSWORDField;
        
        private string REMARKField;
        
        private string STATEField;
        
        private string SYSUSERIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_USERROLE> T_SYS_USERROLEField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERField;
        
        private string USERNAMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSER {
            get {
                return this.CREATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERField, value) != true)) {
                    this.CREATEUSERField = value;
                    this.RaisePropertyChanged("CREATEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEECODE {
            get {
                return this.EMPLOYEECODEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEECODEField, value) != true)) {
                    this.EMPLOYEECODEField = value;
                    this.RaisePropertyChanged("EMPLOYEECODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEEID {
            get {
                return this.EMPLOYEEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEEIDField, value) != true)) {
                    this.EMPLOYEEIDField = value;
                    this.RaisePropertyChanged("EMPLOYEEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEENAME {
            get {
                return this.EMPLOYEENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEENAMEField, value) != true)) {
                    this.EMPLOYEENAMEField = value;
                    this.RaisePropertyChanged("EMPLOYEENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISENGINEMANAGER {
            get {
                return this.ISENGINEMANAGERField;
            }
            set {
                if ((object.ReferenceEquals(this.ISENGINEMANAGERField, value) != true)) {
                    this.ISENGINEMANAGERField = value;
                    this.RaisePropertyChanged("ISENGINEMANAGER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISFLOWMANAGER {
            get {
                return this.ISFLOWMANAGERField;
            }
            set {
                if ((object.ReferenceEquals(this.ISFLOWMANAGERField, value) != true)) {
                    this.ISFLOWMANAGERField = value;
                    this.RaisePropertyChanged("ISFLOWMANAGER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ISMANGER {
            get {
                return this.ISMANGERField;
            }
            set {
                if ((this.ISMANGERField.Equals(value) != true)) {
                    this.ISMANGERField = value;
                    this.RaisePropertyChanged("ISMANGER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PASSWORD {
            get {
                return this.PASSWORDField;
            }
            set {
                if ((object.ReferenceEquals(this.PASSWORDField, value) != true)) {
                    this.PASSWORDField = value;
                    this.RaisePropertyChanged("PASSWORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STATE {
            get {
                return this.STATEField;
            }
            set {
                if ((object.ReferenceEquals(this.STATEField, value) != true)) {
                    this.STATEField = value;
                    this.RaisePropertyChanged("STATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSUSERID {
            get {
                return this.SYSUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSUSERIDField, value) != true)) {
                    this.SYSUSERIDField = value;
                    this.RaisePropertyChanged("SYSUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_USERROLE> T_SYS_USERROLE {
            get {
                return this.T_SYS_USERROLEField;
            }
            set {
                if ((object.ReferenceEquals(this.T_SYS_USERROLEField, value) != true)) {
                    this.T_SYS_USERROLEField = value;
                    this.RaisePropertyChanged("T_SYS_USERROLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSER {
            get {
                return this.UPDATEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERField, value) != true)) {
                    this.UPDATEUSERField = value;
                    this.RaisePropertyChanged("UPDATEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERNAME {
            get {
                return this.USERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.USERNAMEField, value) != true)) {
                    this.USERNAMEField = value;
                    this.RaisePropertyChanged("USERNAME");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FLOW_FLOWRECORDDETAIL_T", Namespace="http://schemas.datacontract.org/2004/07/SMT.EntityFlowSys", IsReference=true)]
    public partial class FLOW_FLOWRECORDDETAIL_T : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private System.Nullable<System.DateTime> AGENTEDITDATEField;
        
        private string AGENTERNAMEField;
        
        private string AGENTUSERIDField;
        
        private string CHECKSTATEField;
        
        private string CONTENTField;
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string EDITCOMPANYIDField;
        
        private System.Nullable<System.DateTime> EDITDATEField;
        
        private string EDITDEPARTMENTIDField;
        
        private string EDITPOSTIDField;
        
        private string EDITUSERIDField;
        
        private string EDITUSERNAMEField;
        
        private string FLAGField;
        
        private string FLOWRECORDDETAILIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T> FLOW_CONSULTATION_TField;
        
        private SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T FLOW_FLOWRECORDMASTER_TField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWRECORDMASTER_TgZ_PhGfiK FLOW_FLOWRECORDMASTER_TReferenceField;
        
        private string PARENTSTATEIDField;
        
        private string STATECODEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AGENTEDITDATE {
            get {
                return this.AGENTEDITDATEField;
            }
            set {
                if ((this.AGENTEDITDATEField.Equals(value) != true)) {
                    this.AGENTEDITDATEField = value;
                    this.RaisePropertyChanged("AGENTEDITDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGENTERNAME {
            get {
                return this.AGENTERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.AGENTERNAMEField, value) != true)) {
                    this.AGENTERNAMEField = value;
                    this.RaisePropertyChanged("AGENTERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGENTUSERID {
            get {
                return this.AGENTUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AGENTUSERIDField, value) != true)) {
                    this.AGENTUSERIDField = value;
                    this.RaisePropertyChanged("AGENTUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CHECKSTATE {
            get {
                return this.CHECKSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.CHECKSTATEField, value) != true)) {
                    this.CHECKSTATEField = value;
                    this.RaisePropertyChanged("CHECKSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONTENT {
            get {
                return this.CONTENTField;
            }
            set {
                if ((object.ReferenceEquals(this.CONTENTField, value) != true)) {
                    this.CONTENTField = value;
                    this.RaisePropertyChanged("CONTENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITCOMPANYID {
            get {
                return this.EDITCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITCOMPANYIDField, value) != true)) {
                    this.EDITCOMPANYIDField = value;
                    this.RaisePropertyChanged("EDITCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EDITDATE {
            get {
                return this.EDITDATEField;
            }
            set {
                if ((this.EDITDATEField.Equals(value) != true)) {
                    this.EDITDATEField = value;
                    this.RaisePropertyChanged("EDITDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITDEPARTMENTID {
            get {
                return this.EDITDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITDEPARTMENTIDField, value) != true)) {
                    this.EDITDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("EDITDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITPOSTID {
            get {
                return this.EDITPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITPOSTIDField, value) != true)) {
                    this.EDITPOSTIDField = value;
                    this.RaisePropertyChanged("EDITPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITUSERID {
            get {
                return this.EDITUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITUSERIDField, value) != true)) {
                    this.EDITUSERIDField = value;
                    this.RaisePropertyChanged("EDITUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITUSERNAME {
            get {
                return this.EDITUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITUSERNAMEField, value) != true)) {
                    this.EDITUSERNAMEField = value;
                    this.RaisePropertyChanged("EDITUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLAG {
            get {
                return this.FLAGField;
            }
            set {
                if ((object.ReferenceEquals(this.FLAGField, value) != true)) {
                    this.FLAGField = value;
                    this.RaisePropertyChanged("FLAG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWRECORDDETAILID {
            get {
                return this.FLOWRECORDDETAILIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWRECORDDETAILIDField, value) != true)) {
                    this.FLOWRECORDDETAILIDField = value;
                    this.RaisePropertyChanged("FLOWRECORDDETAILID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T> FLOW_CONSULTATION_T {
            get {
                return this.FLOW_CONSULTATION_TField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOW_CONSULTATION_TField, value) != true)) {
                    this.FLOW_CONSULTATION_TField = value;
                    this.RaisePropertyChanged("FLOW_CONSULTATION_T");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T FLOW_FLOWRECORDMASTER_T {
            get {
                return this.FLOW_FLOWRECORDMASTER_TField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOW_FLOWRECORDMASTER_TField, value) != true)) {
                    this.FLOW_FLOWRECORDMASTER_TField = value;
                    this.RaisePropertyChanged("FLOW_FLOWRECORDMASTER_T");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWRECORDMASTER_TgZ_PhGfiK FLOW_FLOWRECORDMASTER_TReference {
            get {
                return this.FLOW_FLOWRECORDMASTER_TReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOW_FLOWRECORDMASTER_TReferenceField, value) != true)) {
                    this.FLOW_FLOWRECORDMASTER_TReferenceField = value;
                    this.RaisePropertyChanged("FLOW_FLOWRECORDMASTER_TReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARENTSTATEID {
            get {
                return this.PARENTSTATEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PARENTSTATEIDField, value) != true)) {
                    this.PARENTSTATEIDField = value;
                    this.RaisePropertyChanged("PARENTSTATEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STATECODE {
            get {
                return this.STATECODEField;
            }
            set {
                if ((object.ReferenceEquals(this.STATECODEField, value) != true)) {
                    this.STATECODEField = value;
                    this.RaisePropertyChanged("STATECODE");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FLOW_FLOWRECORDMASTER_T", Namespace="http://schemas.datacontract.org/2004/07/SMT.EntityFlowSys", IsReference=true)]
    public partial class FLOW_FLOWRECORDMASTER_T : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private string ACTIVEROLEField;
        
        private string BUSINESSOBJECTField;
        
        private string CHECKSTATEField;
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private System.Nullable<System.DateTime> EDITDATEField;
        
        private string EDITUSERIDField;
        
        private string EDITUSERNAMEField;
        
        private string FLOWCODEField;
        
        private string FLOWRECORDMASTERIDField;
        
        private string FLOWSELECTTYPEField;
        
        private string FLOWTYPEField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T> FLOW_FLOWRECORDDETAIL_TField;
        
        private string FORMIDField;
        
        private string INSTANCEIDField;
        
        private string KPITIMEXMLField;
        
        private string MODELCODEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ACTIVEROLE {
            get {
                return this.ACTIVEROLEField;
            }
            set {
                if ((object.ReferenceEquals(this.ACTIVEROLEField, value) != true)) {
                    this.ACTIVEROLEField = value;
                    this.RaisePropertyChanged("ACTIVEROLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BUSINESSOBJECT {
            get {
                return this.BUSINESSOBJECTField;
            }
            set {
                if ((object.ReferenceEquals(this.BUSINESSOBJECTField, value) != true)) {
                    this.BUSINESSOBJECTField = value;
                    this.RaisePropertyChanged("BUSINESSOBJECT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CHECKSTATE {
            get {
                return this.CHECKSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.CHECKSTATEField, value) != true)) {
                    this.CHECKSTATEField = value;
                    this.RaisePropertyChanged("CHECKSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EDITDATE {
            get {
                return this.EDITDATEField;
            }
            set {
                if ((this.EDITDATEField.Equals(value) != true)) {
                    this.EDITDATEField = value;
                    this.RaisePropertyChanged("EDITDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITUSERID {
            get {
                return this.EDITUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITUSERIDField, value) != true)) {
                    this.EDITUSERIDField = value;
                    this.RaisePropertyChanged("EDITUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITUSERNAME {
            get {
                return this.EDITUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITUSERNAMEField, value) != true)) {
                    this.EDITUSERNAMEField = value;
                    this.RaisePropertyChanged("EDITUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWCODE {
            get {
                return this.FLOWCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWCODEField, value) != true)) {
                    this.FLOWCODEField = value;
                    this.RaisePropertyChanged("FLOWCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWRECORDMASTERID {
            get {
                return this.FLOWRECORDMASTERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWRECORDMASTERIDField, value) != true)) {
                    this.FLOWRECORDMASTERIDField = value;
                    this.RaisePropertyChanged("FLOWRECORDMASTERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWSELECTTYPE {
            get {
                return this.FLOWSELECTTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWSELECTTYPEField, value) != true)) {
                    this.FLOWSELECTTYPEField = value;
                    this.RaisePropertyChanged("FLOWSELECTTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWTYPE {
            get {
                return this.FLOWTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWTYPEField, value) != true)) {
                    this.FLOWTYPEField = value;
                    this.RaisePropertyChanged("FLOWTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T> FLOW_FLOWRECORDDETAIL_T {
            get {
                return this.FLOW_FLOWRECORDDETAIL_TField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOW_FLOWRECORDDETAIL_TField, value) != true)) {
                    this.FLOW_FLOWRECORDDETAIL_TField = value;
                    this.RaisePropertyChanged("FLOW_FLOWRECORDDETAIL_T");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FORMID {
            get {
                return this.FORMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FORMIDField, value) != true)) {
                    this.FORMIDField = value;
                    this.RaisePropertyChanged("FORMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INSTANCEID {
            get {
                return this.INSTANCEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.INSTANCEIDField, value) != true)) {
                    this.INSTANCEIDField = value;
                    this.RaisePropertyChanged("INSTANCEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPITIMEXML {
            get {
                return this.KPITIMEXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.KPITIMEXMLField, value) != true)) {
                    this.KPITIMEXMLField = value;
                    this.RaisePropertyChanged("KPITIMEXML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELCODE {
            get {
                return this.MODELCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELCODEField, value) != true)) {
                    this.MODELCODEField = value;
                    this.RaisePropertyChanged("MODELCODE");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FLOW_MODELFLOWRELATION_T", Namespace="http://schemas.datacontract.org/2004/07/SMT.EntityFlowSys", IsReference=true)]
    public partial class FLOW_MODELFLOWRELATION_T : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private string COMPANYIDField;
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string DEPARTMENTIDField;
        
        private System.Nullable<System.DateTime> EDITDATEField;
        
        private string EDITUSERIDField;
        
        private string EDITUSERNAMEField;
        
        private string FLAGField;
        
        private string FLOWTYPEField;
        
        private SMT.Saas.Tools.FlowWFService.FLOW_FLOWDEFINE_T FLOW_FLOWDEFINE_TField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWDEFINE_TgZ_PhGfiK FLOW_FLOWDEFINE_TReferenceField;
        
        private SMT.Saas.Tools.FlowWFService.FLOW_MODELDEFINE_T FLOW_MODELDEFINE_TField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_MODELDEFINE_TgZ_PhGfiK FLOW_MODELDEFINE_TReferenceField;
        
        private string MODELFLOWRELATIONIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYID {
            get {
                return this.COMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYIDField, value) != true)) {
                    this.COMPANYIDField = value;
                    this.RaisePropertyChanged("COMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPARTMENTID {
            get {
                return this.DEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPARTMENTIDField, value) != true)) {
                    this.DEPARTMENTIDField = value;
                    this.RaisePropertyChanged("DEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EDITDATE {
            get {
                return this.EDITDATEField;
            }
            set {
                if ((this.EDITDATEField.Equals(value) != true)) {
                    this.EDITDATEField = value;
                    this.RaisePropertyChanged("EDITDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITUSERID {
            get {
                return this.EDITUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITUSERIDField, value) != true)) {
                    this.EDITUSERIDField = value;
                    this.RaisePropertyChanged("EDITUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITUSERNAME {
            get {
                return this.EDITUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITUSERNAMEField, value) != true)) {
                    this.EDITUSERNAMEField = value;
                    this.RaisePropertyChanged("EDITUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLAG {
            get {
                return this.FLAGField;
            }
            set {
                if ((object.ReferenceEquals(this.FLAGField, value) != true)) {
                    this.FLAGField = value;
                    this.RaisePropertyChanged("FLAG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWTYPE {
            get {
                return this.FLOWTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWTYPEField, value) != true)) {
                    this.FLOWTYPEField = value;
                    this.RaisePropertyChanged("FLOWTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.FLOW_FLOWDEFINE_T FLOW_FLOWDEFINE_T {
            get {
                return this.FLOW_FLOWDEFINE_TField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOW_FLOWDEFINE_TField, value) != true)) {
                    this.FLOW_FLOWDEFINE_TField = value;
                    this.RaisePropertyChanged("FLOW_FLOWDEFINE_T");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWDEFINE_TgZ_PhGfiK FLOW_FLOWDEFINE_TReference {
            get {
                return this.FLOW_FLOWDEFINE_TReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOW_FLOWDEFINE_TReferenceField, value) != true)) {
                    this.FLOW_FLOWDEFINE_TReferenceField = value;
                    this.RaisePropertyChanged("FLOW_FLOWDEFINE_TReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.FLOW_MODELDEFINE_T FLOW_MODELDEFINE_T {
            get {
                return this.FLOW_MODELDEFINE_TField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOW_MODELDEFINE_TField, value) != true)) {
                    this.FLOW_MODELDEFINE_TField = value;
                    this.RaisePropertyChanged("FLOW_MODELDEFINE_T");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_MODELDEFINE_TgZ_PhGfiK FLOW_MODELDEFINE_TReference {
            get {
                return this.FLOW_MODELDEFINE_TReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOW_MODELDEFINE_TReferenceField, value) != true)) {
                    this.FLOW_MODELDEFINE_TReferenceField = value;
                    this.RaisePropertyChanged("FLOW_MODELDEFINE_TReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELFLOWRELATIONID {
            get {
                return this.MODELFLOWRELATIONIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELFLOWRELATIONIDField, value) != true)) {
                    this.MODELFLOWRELATIONIDField = value;
                    this.RaisePropertyChanged("MODELFLOWRELATIONID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FLOW_FLOWDEFINE_T", Namespace="http://schemas.datacontract.org/2004/07/SMT.EntityFlowSys", IsReference=true)]
    public partial class FLOW_FLOWDEFINE_T : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string DESCRIPTIONField;
        
        private System.Nullable<System.DateTime> EDITDATEField;
        
        private string EDITUSERIDField;
        
        private string EDITUSERNAMEField;
        
        private string FLOWCODEField;
        
        private string FLOWDEFINEIDField;
        
        private string FLOWTYPEField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T> FLOW_MODELFLOWRELATION_TField;
        
        private string LAYOUTField;
        
        private string RULESField;
        
        private string XOMLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DESCRIPTION {
            get {
                return this.DESCRIPTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.DESCRIPTIONField, value) != true)) {
                    this.DESCRIPTIONField = value;
                    this.RaisePropertyChanged("DESCRIPTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EDITDATE {
            get {
                return this.EDITDATEField;
            }
            set {
                if ((this.EDITDATEField.Equals(value) != true)) {
                    this.EDITDATEField = value;
                    this.RaisePropertyChanged("EDITDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITUSERID {
            get {
                return this.EDITUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITUSERIDField, value) != true)) {
                    this.EDITUSERIDField = value;
                    this.RaisePropertyChanged("EDITUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITUSERNAME {
            get {
                return this.EDITUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITUSERNAMEField, value) != true)) {
                    this.EDITUSERNAMEField = value;
                    this.RaisePropertyChanged("EDITUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWCODE {
            get {
                return this.FLOWCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWCODEField, value) != true)) {
                    this.FLOWCODEField = value;
                    this.RaisePropertyChanged("FLOWCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWDEFINEID {
            get {
                return this.FLOWDEFINEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWDEFINEIDField, value) != true)) {
                    this.FLOWDEFINEIDField = value;
                    this.RaisePropertyChanged("FLOWDEFINEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWTYPE {
            get {
                return this.FLOWTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWTYPEField, value) != true)) {
                    this.FLOWTYPEField = value;
                    this.RaisePropertyChanged("FLOWTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T> FLOW_MODELFLOWRELATION_T {
            get {
                return this.FLOW_MODELFLOWRELATION_TField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOW_MODELFLOWRELATION_TField, value) != true)) {
                    this.FLOW_MODELFLOWRELATION_TField = value;
                    this.RaisePropertyChanged("FLOW_MODELFLOWRELATION_T");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LAYOUT {
            get {
                return this.LAYOUTField;
            }
            set {
                if ((object.ReferenceEquals(this.LAYOUTField, value) != true)) {
                    this.LAYOUTField = value;
                    this.RaisePropertyChanged("LAYOUT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RULES {
            get {
                return this.RULESField;
            }
            set {
                if ((object.ReferenceEquals(this.RULESField, value) != true)) {
                    this.RULESField = value;
                    this.RaisePropertyChanged("RULES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XOML {
            get {
                return this.XOMLField;
            }
            set {
                if ((object.ReferenceEquals(this.XOMLField, value) != true)) {
                    this.XOMLField = value;
                    this.RaisePropertyChanged("XOML");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FLOW_MODELDEFINE_T", Namespace="http://schemas.datacontract.org/2004/07/SMT.EntityFlowSys", IsReference=true)]
    public partial class FLOW_MODELDEFINE_T : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string DESCRIPTIONField;
        
        private System.Nullable<System.DateTime> EDITDATEField;
        
        private string EDITUSERIDField;
        
        private string EDITUSERNAMEField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T> FLOW_MODELFLOWRELATION_TField;
        
        private string MODELCODEField;
        
        private string MODELDEFINEIDField;
        
        private string PARENTMODELCODEField;
        
        private string SYSTEMCODEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DESCRIPTION {
            get {
                return this.DESCRIPTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.DESCRIPTIONField, value) != true)) {
                    this.DESCRIPTIONField = value;
                    this.RaisePropertyChanged("DESCRIPTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EDITDATE {
            get {
                return this.EDITDATEField;
            }
            set {
                if ((this.EDITDATEField.Equals(value) != true)) {
                    this.EDITDATEField = value;
                    this.RaisePropertyChanged("EDITDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITUSERID {
            get {
                return this.EDITUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITUSERIDField, value) != true)) {
                    this.EDITUSERIDField = value;
                    this.RaisePropertyChanged("EDITUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITUSERNAME {
            get {
                return this.EDITUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITUSERNAMEField, value) != true)) {
                    this.EDITUSERNAMEField = value;
                    this.RaisePropertyChanged("EDITUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T> FLOW_MODELFLOWRELATION_T {
            get {
                return this.FLOW_MODELFLOWRELATION_TField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOW_MODELFLOWRELATION_TField, value) != true)) {
                    this.FLOW_MODELFLOWRELATION_TField = value;
                    this.RaisePropertyChanged("FLOW_MODELFLOWRELATION_T");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELCODE {
            get {
                return this.MODELCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELCODEField, value) != true)) {
                    this.MODELCODEField = value;
                    this.RaisePropertyChanged("MODELCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELDEFINEID {
            get {
                return this.MODELDEFINEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELDEFINEIDField, value) != true)) {
                    this.MODELDEFINEIDField = value;
                    this.RaisePropertyChanged("MODELDEFINEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARENTMODELCODE {
            get {
                return this.PARENTMODELCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.PARENTMODELCODEField, value) != true)) {
                    this.PARENTMODELCODEField = value;
                    this.RaisePropertyChanged("PARENTMODELCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMCODE {
            get {
                return this.SYSTEMCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMCODEField, value) != true)) {
                    this.SYSTEMCODEField = value;
                    this.RaisePropertyChanged("SYSTEMCODE");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FLOW_CONSULTATION_T", Namespace="http://schemas.datacontract.org/2004/07/SMT.EntityFlowSys", IsReference=true)]
    public partial class FLOW_CONSULTATION_T : SMT.Saas.Tools.FlowWFService.EntityObject {
        
        private string CONSULTATIONCONTENTField;
        
        private System.Nullable<System.DateTime> CONSULTATIONDATEField;
        
        private string CONSULTATIONIDField;
        
        private string CONSULTATIONUSERIDField;
        
        private string CONSULTATIONUSERNAMEField;
        
        private string FLAGField;
        
        private SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T FLOW_FLOWRECORDDETAIL_TField;
        
        private SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWRECORDDETAIL_TgZ_PhGfiK FLOW_FLOWRECORDDETAIL_TReferenceField;
        
        private string REPLYCONTENTField;
        
        private System.Nullable<System.DateTime> REPLYDATEField;
        
        private string REPLYUSERIDField;
        
        private string REPLYUSERNAMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONSULTATIONCONTENT {
            get {
                return this.CONSULTATIONCONTENTField;
            }
            set {
                if ((object.ReferenceEquals(this.CONSULTATIONCONTENTField, value) != true)) {
                    this.CONSULTATIONCONTENTField = value;
                    this.RaisePropertyChanged("CONSULTATIONCONTENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CONSULTATIONDATE {
            get {
                return this.CONSULTATIONDATEField;
            }
            set {
                if ((this.CONSULTATIONDATEField.Equals(value) != true)) {
                    this.CONSULTATIONDATEField = value;
                    this.RaisePropertyChanged("CONSULTATIONDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONSULTATIONID {
            get {
                return this.CONSULTATIONIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CONSULTATIONIDField, value) != true)) {
                    this.CONSULTATIONIDField = value;
                    this.RaisePropertyChanged("CONSULTATIONID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONSULTATIONUSERID {
            get {
                return this.CONSULTATIONUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CONSULTATIONUSERIDField, value) != true)) {
                    this.CONSULTATIONUSERIDField = value;
                    this.RaisePropertyChanged("CONSULTATIONUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONSULTATIONUSERNAME {
            get {
                return this.CONSULTATIONUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CONSULTATIONUSERNAMEField, value) != true)) {
                    this.CONSULTATIONUSERNAMEField = value;
                    this.RaisePropertyChanged("CONSULTATIONUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLAG {
            get {
                return this.FLAGField;
            }
            set {
                if ((object.ReferenceEquals(this.FLAGField, value) != true)) {
                    this.FLAGField = value;
                    this.RaisePropertyChanged("FLAG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T FLOW_FLOWRECORDDETAIL_T {
            get {
                return this.FLOW_FLOWRECORDDETAIL_TField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOW_FLOWRECORDDETAIL_TField, value) != true)) {
                    this.FLOW_FLOWRECORDDETAIL_TField = value;
                    this.RaisePropertyChanged("FLOW_FLOWRECORDDETAIL_T");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWRECORDDETAIL_TgZ_PhGfiK FLOW_FLOWRECORDDETAIL_TReference {
            get {
                return this.FLOW_FLOWRECORDDETAIL_TReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOW_FLOWRECORDDETAIL_TReferenceField, value) != true)) {
                    this.FLOW_FLOWRECORDDETAIL_TReferenceField = value;
                    this.RaisePropertyChanged("FLOW_FLOWRECORDDETAIL_TReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REPLYCONTENT {
            get {
                return this.REPLYCONTENTField;
            }
            set {
                if ((object.ReferenceEquals(this.REPLYCONTENTField, value) != true)) {
                    this.REPLYCONTENTField = value;
                    this.RaisePropertyChanged("REPLYCONTENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> REPLYDATE {
            get {
                return this.REPLYDATEField;
            }
            set {
                if ((this.REPLYDATEField.Equals(value) != true)) {
                    this.REPLYDATEField = value;
                    this.RaisePropertyChanged("REPLYDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REPLYUSERID {
            get {
                return this.REPLYUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.REPLYUSERIDField, value) != true)) {
                    this.REPLYUSERIDField = value;
                    this.RaisePropertyChanged("REPLYUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REPLYUSERNAME {
            get {
                return this.REPLYUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.REPLYUSERNAMEField, value) != true)) {
                    this.REPLYUSERNAMEField = value;
                    this.RaisePropertyChanged("REPLYUSERNAME");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfFLOW_FLOWRECORDDETAIL_TgZ_PhGfiK", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfFLOW_FLOWRECORDDETAIL_TgZ_PhGfiK : SMT.Saas.Tools.FlowWFService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_WF_FORWARDHISTORY>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_WF_FORWARDHISTORY))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_WF_PERSONALRECORD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_WF_DOTASK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.SubmitData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.ApprovalResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.UserInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.Role_UserType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.UserInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FlowSelectType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FlowType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.SubmitFlag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.DataResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FlowResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.TaskInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.TaskInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLE>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ROLE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENUCUSTOMPERM>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENUCUSTOMPERM))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_PERMISSION>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_PERMISSION))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLEMENUPERMISSION>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ROLEMENUPERMISSION))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ROLEENTITYMENU))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLEENTITYMENU>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_USERROLE>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_USERROLE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_USER))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<SMT.Saas.Tools.FlowWFService.Role_UserType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.UserInfo>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<SMT.Saas.Tools.FlowWFService.UserInfo, SMT.Saas.Tools.FlowWFService.UserInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FlowEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_FLOWDEFINE_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_MODELDEFINE_T))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWRECORDMASTER_TgZ_PhGfiK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.RelatedEnd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWRECORDDETAIL_TgZ_PhGfiK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_PERMISSIONCIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLECIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLEENTITYMENUCIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_USERCIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWDEFINE_TgZ_PhGfiK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_MODELDEFINE_TgZ_PhGfiK))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WF_FORWARDHISTORY", Namespace="http://schemas.datacontract.org/2004/07/EngineDataModel")]
    public partial class T_WF_FORWARDHISTORY : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string FORWARDHISTORYIDField;
        
        private string FROMOWNERIDField;
        
        private string FROMOWNERNAMEField;
        
        private string MODELCODEField;
        
        private string MODELIDField;
        
        private string PERSONALRECORDIDField;
        
        private string REMARKField;
        
        private string TOOWNERIDField;
        
        private string TOOWNERNAMEField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FORWARDHISTORYID {
            get {
                return this.FORWARDHISTORYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FORWARDHISTORYIDField, value) != true)) {
                    this.FORWARDHISTORYIDField = value;
                    this.RaisePropertyChanged("FORWARDHISTORYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FROMOWNERID {
            get {
                return this.FROMOWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FROMOWNERIDField, value) != true)) {
                    this.FROMOWNERIDField = value;
                    this.RaisePropertyChanged("FROMOWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FROMOWNERNAME {
            get {
                return this.FROMOWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FROMOWNERNAMEField, value) != true)) {
                    this.FROMOWNERNAMEField = value;
                    this.RaisePropertyChanged("FROMOWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELCODE {
            get {
                return this.MODELCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELCODEField, value) != true)) {
                    this.MODELCODEField = value;
                    this.RaisePropertyChanged("MODELCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELID {
            get {
                return this.MODELIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELIDField, value) != true)) {
                    this.MODELIDField = value;
                    this.RaisePropertyChanged("MODELID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERSONALRECORDID {
            get {
                return this.PERSONALRECORDIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PERSONALRECORDIDField, value) != true)) {
                    this.PERSONALRECORDIDField = value;
                    this.RaisePropertyChanged("PERSONALRECORDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TOOWNERID {
            get {
                return this.TOOWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TOOWNERIDField, value) != true)) {
                    this.TOOWNERIDField = value;
                    this.RaisePropertyChanged("TOOWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TOOWNERNAME {
            get {
                return this.TOOWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TOOWNERNAMEField, value) != true)) {
                    this.TOOWNERNAMEField = value;
                    this.RaisePropertyChanged("TOOWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WF_PERSONALRECORD", Namespace="http://schemas.datacontract.org/2004/07/SMT.Workflow.Common.Model.FlowEngine")]
    public partial class T_WF_PERSONALRECORD : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal CHECKSTATEField;
        
        private string CONFIGINFOField;
        
        private System.DateTime CREATEDATEField;
        
        private decimal ISFORWARDField;
        
        private decimal ISVIEWField;
        
        private string MODELCODEField;
        
        private string MODELDESCRIPTIONField;
        
        private string MODELIDField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private string PERSONALRECORDIDField;
        
        private string SYSTYPEField;
        
        private System.DateTime UPDATEDATEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CHECKSTATE {
            get {
                return this.CHECKSTATEField;
            }
            set {
                if ((this.CHECKSTATEField.Equals(value) != true)) {
                    this.CHECKSTATEField = value;
                    this.RaisePropertyChanged("CHECKSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONFIGINFO {
            get {
                return this.CONFIGINFOField;
            }
            set {
                if ((object.ReferenceEquals(this.CONFIGINFOField, value) != true)) {
                    this.CONFIGINFOField = value;
                    this.RaisePropertyChanged("CONFIGINFO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ISFORWARD {
            get {
                return this.ISFORWARDField;
            }
            set {
                if ((this.ISFORWARDField.Equals(value) != true)) {
                    this.ISFORWARDField = value;
                    this.RaisePropertyChanged("ISFORWARD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ISVIEW {
            get {
                return this.ISVIEWField;
            }
            set {
                if ((this.ISVIEWField.Equals(value) != true)) {
                    this.ISVIEWField = value;
                    this.RaisePropertyChanged("ISVIEW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELCODE {
            get {
                return this.MODELCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELCODEField, value) != true)) {
                    this.MODELCODEField = value;
                    this.RaisePropertyChanged("MODELCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELDESCRIPTION {
            get {
                return this.MODELDESCRIPTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELDESCRIPTIONField, value) != true)) {
                    this.MODELDESCRIPTIONField = value;
                    this.RaisePropertyChanged("MODELDESCRIPTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELID {
            get {
                return this.MODELIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELIDField, value) != true)) {
                    this.MODELIDField = value;
                    this.RaisePropertyChanged("MODELID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERSONALRECORDID {
            get {
                return this.PERSONALRECORDIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PERSONALRECORDIDField, value) != true)) {
                    this.PERSONALRECORDIDField = value;
                    this.RaisePropertyChanged("PERSONALRECORDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTYPE {
            get {
                return this.SYSTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTYPEField, value) != true)) {
                    this.SYSTYPEField = value;
                    this.RaisePropertyChanged("SYSTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WF_DOTASK", Namespace="http://schemas.datacontract.org/2004/07/SMT.Workflow.Common.Model.FlowEngine")]
    public partial class T_WF_DOTASK : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string APPFIELDVALUEField;
        
        private string APPLICATIONURLField;
        
        private string APPXMLField;
        
        private System.Nullable<System.DateTime> BEFOREPROCESSDATEField;
        
        private System.Nullable<System.DateTime> CLOSEDDATEField;
        
        private string COMPANYIDField;
        
        private System.DateTime CREATEDATETIMEField;
        
        private string DOTASKIDField;
        
        private decimal DOTASKSTATUSField;
        
        private decimal DOTASKTYPEField;
        
        private string ENGINECODEField;
        
        private string FLOWXMLField;
        
        private decimal ISALARMField;
        
        private decimal MAILSTATUSField;
        
        private string MESSAGEBODYField;
        
        private string MODELCODEField;
        
        private string MODELNAMEField;
        
        private string ORDERIDField;
        
        private decimal ORDERSTATUSField;
        
        private string ORDERUSERIDField;
        
        private string ORDERUSERNAMEField;
        
        private string RECEIVEUSERIDField;
        
        private string REMARKField;
        
        private decimal RTXSTATUSField;
        
        private string SYSTEMCODEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPFIELDVALUE {
            get {
                return this.APPFIELDVALUEField;
            }
            set {
                if ((object.ReferenceEquals(this.APPFIELDVALUEField, value) != true)) {
                    this.APPFIELDVALUEField = value;
                    this.RaisePropertyChanged("APPFIELDVALUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPLICATIONURL {
            get {
                return this.APPLICATIONURLField;
            }
            set {
                if ((object.ReferenceEquals(this.APPLICATIONURLField, value) != true)) {
                    this.APPLICATIONURLField = value;
                    this.RaisePropertyChanged("APPLICATIONURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPXML {
            get {
                return this.APPXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.APPXMLField, value) != true)) {
                    this.APPXMLField = value;
                    this.RaisePropertyChanged("APPXML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BEFOREPROCESSDATE {
            get {
                return this.BEFOREPROCESSDATEField;
            }
            set {
                if ((this.BEFOREPROCESSDATEField.Equals(value) != true)) {
                    this.BEFOREPROCESSDATEField = value;
                    this.RaisePropertyChanged("BEFOREPROCESSDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CLOSEDDATE {
            get {
                return this.CLOSEDDATEField;
            }
            set {
                if ((this.CLOSEDDATEField.Equals(value) != true)) {
                    this.CLOSEDDATEField = value;
                    this.RaisePropertyChanged("CLOSEDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYID {
            get {
                return this.COMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYIDField, value) != true)) {
                    this.COMPANYIDField = value;
                    this.RaisePropertyChanged("COMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATETIME {
            get {
                return this.CREATEDATETIMEField;
            }
            set {
                if ((this.CREATEDATETIMEField.Equals(value) != true)) {
                    this.CREATEDATETIMEField = value;
                    this.RaisePropertyChanged("CREATEDATETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOTASKID {
            get {
                return this.DOTASKIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DOTASKIDField, value) != true)) {
                    this.DOTASKIDField = value;
                    this.RaisePropertyChanged("DOTASKID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DOTASKSTATUS {
            get {
                return this.DOTASKSTATUSField;
            }
            set {
                if ((this.DOTASKSTATUSField.Equals(value) != true)) {
                    this.DOTASKSTATUSField = value;
                    this.RaisePropertyChanged("DOTASKSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DOTASKTYPE {
            get {
                return this.DOTASKTYPEField;
            }
            set {
                if ((this.DOTASKTYPEField.Equals(value) != true)) {
                    this.DOTASKTYPEField = value;
                    this.RaisePropertyChanged("DOTASKTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENGINECODE {
            get {
                return this.ENGINECODEField;
            }
            set {
                if ((object.ReferenceEquals(this.ENGINECODEField, value) != true)) {
                    this.ENGINECODEField = value;
                    this.RaisePropertyChanged("ENGINECODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWXML {
            get {
                return this.FLOWXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWXMLField, value) != true)) {
                    this.FLOWXMLField = value;
                    this.RaisePropertyChanged("FLOWXML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ISALARM {
            get {
                return this.ISALARMField;
            }
            set {
                if ((this.ISALARMField.Equals(value) != true)) {
                    this.ISALARMField = value;
                    this.RaisePropertyChanged("ISALARM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MAILSTATUS {
            get {
                return this.MAILSTATUSField;
            }
            set {
                if ((this.MAILSTATUSField.Equals(value) != true)) {
                    this.MAILSTATUSField = value;
                    this.RaisePropertyChanged("MAILSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGEBODY {
            get {
                return this.MESSAGEBODYField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGEBODYField, value) != true)) {
                    this.MESSAGEBODYField = value;
                    this.RaisePropertyChanged("MESSAGEBODY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELCODE {
            get {
                return this.MODELCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELCODEField, value) != true)) {
                    this.MODELCODEField = value;
                    this.RaisePropertyChanged("MODELCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELNAME {
            get {
                return this.MODELNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELNAMEField, value) != true)) {
                    this.MODELNAMEField = value;
                    this.RaisePropertyChanged("MODELNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORDERID {
            get {
                return this.ORDERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ORDERIDField, value) != true)) {
                    this.ORDERIDField = value;
                    this.RaisePropertyChanged("ORDERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ORDERSTATUS {
            get {
                return this.ORDERSTATUSField;
            }
            set {
                if ((this.ORDERSTATUSField.Equals(value) != true)) {
                    this.ORDERSTATUSField = value;
                    this.RaisePropertyChanged("ORDERSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORDERUSERID {
            get {
                return this.ORDERUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ORDERUSERIDField, value) != true)) {
                    this.ORDERUSERIDField = value;
                    this.RaisePropertyChanged("ORDERUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORDERUSERNAME {
            get {
                return this.ORDERUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ORDERUSERNAMEField, value) != true)) {
                    this.ORDERUSERNAMEField = value;
                    this.RaisePropertyChanged("ORDERUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEUSERID {
            get {
                return this.RECEIVEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEUSERIDField, value) != true)) {
                    this.RECEIVEUSERIDField = value;
                    this.RaisePropertyChanged("RECEIVEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RTXSTATUS {
            get {
                return this.RTXSTATUSField;
            }
            set {
                if ((this.RTXSTATUSField.Equals(value) != true)) {
                    this.RTXSTATUSField = value;
                    this.RaisePropertyChanged("RTXSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMCODE {
            get {
                return this.SYSTEMCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMCODEField, value) != true)) {
                    this.SYSTEMCODEField = value;
                    this.RaisePropertyChanged("SYSTEMCODE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitData", Namespace="http://schemas.datacontract.org/2004/07/SMT.FlowWFService")]
    public partial class SubmitData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ApprovalContentField;
        
        private SMT.Saas.Tools.FlowWFService.ApprovalResult ApprovalResultField;
        
        private SMT.Saas.Tools.FlowWFService.UserInfo ApprovalUserField;
        
        private System.Collections.Generic.Dictionary<SMT.Saas.Tools.FlowWFService.Role_UserType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.UserInfo>> DictCounterUserField;
        
        private SMT.Saas.Tools.FlowWFService.FlowSelectType FlowSelectTypeField;
        
        private SMT.Saas.Tools.FlowWFService.FlowType FlowTypeField;
        
        private string FormIDField;
        
        private string ModelCodeField;
        
        private string ModelCodeTypeField;
        
        private string ModelCodeTypeNameField;
        
        private SMT.Saas.Tools.FlowWFService.UserInfo NextApprovalUserField;
        
        private string NextStateCodeField;
        
        private string OwnerIDField;
        
        private string OwnerNameField;
        
        private SMT.Saas.Tools.FlowWFService.SubmitFlag SubmitFlagField;
        
        private string SumbitCompanyIDField;
        
        private string SumbitDeparmentIDField;
        
        private string SumbitPostIDField;
        
        private string SumbitUserIDField;
        
        private string SumbitUserNameField;
        
        private string XMLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovalContent {
            get {
                return this.ApprovalContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalContentField, value) != true)) {
                    this.ApprovalContentField = value;
                    this.RaisePropertyChanged("ApprovalContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.ApprovalResult ApprovalResult {
            get {
                return this.ApprovalResultField;
            }
            set {
                if ((this.ApprovalResultField.Equals(value) != true)) {
                    this.ApprovalResultField = value;
                    this.RaisePropertyChanged("ApprovalResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.UserInfo ApprovalUser {
            get {
                return this.ApprovalUserField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalUserField, value) != true)) {
                    this.ApprovalUserField = value;
                    this.RaisePropertyChanged("ApprovalUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<SMT.Saas.Tools.FlowWFService.Role_UserType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.UserInfo>> DictCounterUser {
            get {
                return this.DictCounterUserField;
            }
            set {
                if ((object.ReferenceEquals(this.DictCounterUserField, value) != true)) {
                    this.DictCounterUserField = value;
                    this.RaisePropertyChanged("DictCounterUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.FlowSelectType FlowSelectType {
            get {
                return this.FlowSelectTypeField;
            }
            set {
                if ((this.FlowSelectTypeField.Equals(value) != true)) {
                    this.FlowSelectTypeField = value;
                    this.RaisePropertyChanged("FlowSelectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.FlowType FlowType {
            get {
                return this.FlowTypeField;
            }
            set {
                if ((this.FlowTypeField.Equals(value) != true)) {
                    this.FlowTypeField = value;
                    this.RaisePropertyChanged("FlowType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormID {
            get {
                return this.FormIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FormIDField, value) != true)) {
                    this.FormIDField = value;
                    this.RaisePropertyChanged("FormID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelCode {
            get {
                return this.ModelCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelCodeField, value) != true)) {
                    this.ModelCodeField = value;
                    this.RaisePropertyChanged("ModelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelCodeType {
            get {
                return this.ModelCodeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelCodeTypeField, value) != true)) {
                    this.ModelCodeTypeField = value;
                    this.RaisePropertyChanged("ModelCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelCodeTypeName {
            get {
                return this.ModelCodeTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelCodeTypeNameField, value) != true)) {
                    this.ModelCodeTypeNameField = value;
                    this.RaisePropertyChanged("ModelCodeTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.UserInfo NextApprovalUser {
            get {
                return this.NextApprovalUserField;
            }
            set {
                if ((object.ReferenceEquals(this.NextApprovalUserField, value) != true)) {
                    this.NextApprovalUserField = value;
                    this.RaisePropertyChanged("NextApprovalUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextStateCode {
            get {
                return this.NextStateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NextStateCodeField, value) != true)) {
                    this.NextStateCodeField = value;
                    this.RaisePropertyChanged("NextStateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerIDField, value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.SubmitFlag SubmitFlag {
            get {
                return this.SubmitFlagField;
            }
            set {
                if ((this.SubmitFlagField.Equals(value) != true)) {
                    this.SubmitFlagField = value;
                    this.RaisePropertyChanged("SubmitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SumbitCompanyID {
            get {
                return this.SumbitCompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SumbitCompanyIDField, value) != true)) {
                    this.SumbitCompanyIDField = value;
                    this.RaisePropertyChanged("SumbitCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SumbitDeparmentID {
            get {
                return this.SumbitDeparmentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SumbitDeparmentIDField, value) != true)) {
                    this.SumbitDeparmentIDField = value;
                    this.RaisePropertyChanged("SumbitDeparmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SumbitPostID {
            get {
                return this.SumbitPostIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SumbitPostIDField, value) != true)) {
                    this.SumbitPostIDField = value;
                    this.RaisePropertyChanged("SumbitPostID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SumbitUserID {
            get {
                return this.SumbitUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SumbitUserIDField, value) != true)) {
                    this.SumbitUserIDField = value;
                    this.RaisePropertyChanged("SumbitUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SumbitUserName {
            get {
                return this.SumbitUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SumbitUserNameField, value) != true)) {
                    this.SumbitUserNameField = value;
                    this.RaisePropertyChanged("SumbitUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XML {
            get {
                return this.XMLField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLField, value) != true)) {
                    this.XMLField = value;
                    this.RaisePropertyChanged("XML");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApprovalResult", Namespace="http://schemas.datacontract.org/2004/07/SMT.FlowWFService")]
    public enum ApprovalResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoPass = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pass = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/SMT.FlowWFService")]
    public partial class UserInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CompanyIDField;
        
        private string CompanyNameField;
        
        private string DepartmentIDField;
        
        private string DepartmentNameField;
        
        private string IsHeadField;
        
        private string IsSuperiorField;
        
        private string PostIDField;
        
        private string PostNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLE> RolesField;
        
        private string UserIDField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIDField, value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentIDField, value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsHead {
            get {
                return this.IsHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.IsHeadField, value) != true)) {
                    this.IsHeadField = value;
                    this.RaisePropertyChanged("IsHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSuperior {
            get {
                return this.IsSuperiorField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSuperiorField, value) != true)) {
                    this.IsSuperiorField = value;
                    this.RaisePropertyChanged("IsSuperior");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostID {
            get {
                return this.PostIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PostIDField, value) != true)) {
                    this.PostIDField = value;
                    this.RaisePropertyChanged("PostID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostName {
            get {
                return this.PostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PostNameField, value) != true)) {
                    this.PostNameField = value;
                    this.RaisePropertyChanged("PostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLE> Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role_UserType", Namespace="http://schemas.datacontract.org/2004/07/SMT.FlowWFService")]
    public partial class Role_UserType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<bool> IsOtherCompanyField;
        
        private string NameField;
        
        private string OtherCompanyIDField;
        
        private string RemarkField;
        
        private string RoleNameField;
        
        private string UserTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsOtherCompany {
            get {
                return this.IsOtherCompanyField;
            }
            set {
                if ((this.IsOtherCompanyField.Equals(value) != true)) {
                    this.IsOtherCompanyField = value;
                    this.RaisePropertyChanged("IsOtherCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherCompanyID {
            get {
                return this.OtherCompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherCompanyIDField, value) != true)) {
                    this.OtherCompanyIDField = value;
                    this.RaisePropertyChanged("OtherCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlowSelectType", Namespace="http://schemas.datacontract.org/2004/07/SMT.FlowWFService")]
    public enum FlowSelectType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedFlow = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreeFlow = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlowType", Namespace="http://schemas.datacontract.org/2004/07/SMT.FlowWFService")]
    public enum FlowType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approval = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Task = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitFlag", Namespace="http://schemas.datacontract.org/2004/07/SMT.FlowWFService")]
    public enum SubmitFlag : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approval = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancel = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataResult", Namespace="http://schemas.datacontract.org/2004/07/SMT.FlowWFService")]
    public partial class DataResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SMT.Saas.Tools.FlowWFService.UserInfo AgentUserInfoField;
        
        private string AppStateField;
        
        private string CheckStateField;
        
        private string CountersignTypeField;
        
        private System.Collections.Generic.Dictionary<SMT.Saas.Tools.FlowWFService.UserInfo, SMT.Saas.Tools.FlowWFService.UserInfo> DictAgentUserInfoField;
        
        private System.Collections.Generic.Dictionary<SMT.Saas.Tools.FlowWFService.Role_UserType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.UserInfo>> DictCounterUserField;
        
        private string ErrField;
        
        private int ErrNumField;
        
        private SMT.Saas.Tools.FlowWFService.FlowResult FlowResultField;
        
        private bool IsCountersignField;
        
        private bool IsCountersignCompleteField;
        
        private string ModelFlowRelationIDField;
        
        private string RunTimeField;
        
        private string SubModelCodeField;
        
        private SMT.Saas.Tools.FlowWFService.SubmitFlag SubmitFlagField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.UserInfo> UserInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.UserInfo AgentUserInfo {
            get {
                return this.AgentUserInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentUserInfoField, value) != true)) {
                    this.AgentUserInfoField = value;
                    this.RaisePropertyChanged("AgentUserInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppState {
            get {
                return this.AppStateField;
            }
            set {
                if ((object.ReferenceEquals(this.AppStateField, value) != true)) {
                    this.AppStateField = value;
                    this.RaisePropertyChanged("AppState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckState {
            get {
                return this.CheckStateField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckStateField, value) != true)) {
                    this.CheckStateField = value;
                    this.RaisePropertyChanged("CheckState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountersignType {
            get {
                return this.CountersignTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountersignTypeField, value) != true)) {
                    this.CountersignTypeField = value;
                    this.RaisePropertyChanged("CountersignType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<SMT.Saas.Tools.FlowWFService.UserInfo, SMT.Saas.Tools.FlowWFService.UserInfo> DictAgentUserInfo {
            get {
                return this.DictAgentUserInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DictAgentUserInfoField, value) != true)) {
                    this.DictAgentUserInfoField = value;
                    this.RaisePropertyChanged("DictAgentUserInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<SMT.Saas.Tools.FlowWFService.Role_UserType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.UserInfo>> DictCounterUser {
            get {
                return this.DictCounterUserField;
            }
            set {
                if ((object.ReferenceEquals(this.DictCounterUserField, value) != true)) {
                    this.DictCounterUserField = value;
                    this.RaisePropertyChanged("DictCounterUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Err {
            get {
                return this.ErrField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrField, value) != true)) {
                    this.ErrField = value;
                    this.RaisePropertyChanged("Err");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrNum {
            get {
                return this.ErrNumField;
            }
            set {
                if ((this.ErrNumField.Equals(value) != true)) {
                    this.ErrNumField = value;
                    this.RaisePropertyChanged("ErrNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.FlowResult FlowResult {
            get {
                return this.FlowResultField;
            }
            set {
                if ((this.FlowResultField.Equals(value) != true)) {
                    this.FlowResultField = value;
                    this.RaisePropertyChanged("FlowResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCountersign {
            get {
                return this.IsCountersignField;
            }
            set {
                if ((this.IsCountersignField.Equals(value) != true)) {
                    this.IsCountersignField = value;
                    this.RaisePropertyChanged("IsCountersign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCountersignComplete {
            get {
                return this.IsCountersignCompleteField;
            }
            set {
                if ((this.IsCountersignCompleteField.Equals(value) != true)) {
                    this.IsCountersignCompleteField = value;
                    this.RaisePropertyChanged("IsCountersignComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelFlowRelationID {
            get {
                return this.ModelFlowRelationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelFlowRelationIDField, value) != true)) {
                    this.ModelFlowRelationIDField = value;
                    this.RaisePropertyChanged("ModelFlowRelationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RunTime {
            get {
                return this.RunTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.RunTimeField, value) != true)) {
                    this.RunTimeField = value;
                    this.RaisePropertyChanged("RunTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubModelCode {
            get {
                return this.SubModelCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubModelCodeField, value) != true)) {
                    this.SubModelCodeField = value;
                    this.RaisePropertyChanged("SubModelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.SubmitFlag SubmitFlag {
            get {
                return this.SubmitFlagField;
            }
            set {
                if ((this.SubmitFlagField.Equals(value) != true)) {
                    this.SubmitFlagField = value;
                    this.RaisePropertyChanged("SubmitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.UserInfo> UserInfo {
            get {
                return this.UserInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfoField, value) != true)) {
                    this.UserInfoField = value;
                    this.RaisePropertyChanged("UserInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlowResult", Namespace="http://schemas.datacontract.org/2004/07/SMT.FlowWFService")]
    public enum FlowResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAIL = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUCCESS = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        END = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MULTIUSER = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Countersign = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskInfo", Namespace="http://schemas.datacontract.org/2004/07/SMT.FlowWFService")]
    public partial class TaskInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T FlowInfoField;
        
        private string SubModelCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T FlowInfo {
            get {
                return this.FlowInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.FlowInfoField, value) != true)) {
                    this.FlowInfoField = value;
                    this.RaisePropertyChanged("FlowInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubModelCode {
            get {
                return this.SubModelCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubModelCodeField, value) != true)) {
                    this.SubModelCodeField = value;
                    this.RaisePropertyChanged("SubModelCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlowEntity", Namespace="http://schemas.datacontract.org/2004/07/SMT.EntityFlowSys", IsReference=true)]
    public partial class FlowEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T> FlowListField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_WF_FORWARDHISTORY> ForwardHistoryListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T> FlowList {
            get {
                return this.FlowListField;
            }
            set {
                if ((object.ReferenceEquals(this.FlowListField, value) != true)) {
                    this.FlowListField = value;
                    this.RaisePropertyChanged("FlowList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_WF_FORWARDHISTORY> ForwardHistoryList {
            get {
                return this.ForwardHistoryListField;
            }
            set {
                if ((object.ReferenceEquals(this.ForwardHistoryListField, value) != true)) {
                    this.ForwardHistoryListField = value;
                    this.RaisePropertyChanged("ForwardHistoryList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfFLOW_FLOWRECORDMASTER_TgZ_PhGfiK", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfFLOW_FLOWRECORDMASTER_TgZ_PhGfiK : SMT.Saas.Tools.FlowWFService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReference", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWRECORDMASTER_TgZ_PhGfiK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWRECORDDETAIL_TgZ_PhGfiK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_PERMISSIONCIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLECIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLEENTITYMENUCIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_USERCIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWDEFINE_TgZ_PhGfiK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_MODELDEFINE_TgZ_PhGfiK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv))]
    public partial class EntityReference : SMT.Saas.Tools.FlowWFService.RelatedEnd {
        
        private SMT.Saas.Tools.FlowWFService.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.FlowWFService.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedEnd", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWRECORDMASTER_TgZ_PhGfiK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWRECORDDETAIL_TgZ_PhGfiK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_PERMISSIONCIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLECIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLEENTITYMENUCIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_USERCIR1sILv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWDEFINE_TgZ_PhGfiK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_MODELDEFINE_TgZ_PhGfiK))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv))]
    public partial class RelatedEnd : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv : SMT.Saas.Tools.FlowWFService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfT_SYS_PERMISSIONCIR1sILv", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfT_SYS_PERMISSIONCIR1sILv : SMT.Saas.Tools.FlowWFService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfT_SYS_ROLECIR1sILv", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfT_SYS_ROLECIR1sILv : SMT.Saas.Tools.FlowWFService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfT_SYS_ROLEENTITYMENUCIR1sILv", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfT_SYS_ROLEENTITYMENUCIR1sILv : SMT.Saas.Tools.FlowWFService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfT_SYS_USERCIR1sILv", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfT_SYS_USERCIR1sILv : SMT.Saas.Tools.FlowWFService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfFLOW_FLOWDEFINE_TgZ_PhGfiK", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfFLOW_FLOWDEFINE_TgZ_PhGfiK : SMT.Saas.Tools.FlowWFService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfFLOW_MODELDEFINE_TgZ_PhGfiK", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfFLOW_MODELDEFINE_TgZ_PhGfiK : SMT.Saas.Tools.FlowWFService.EntityReference {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FlowWFService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/AddConsultation", ReplyAction="http://tempuri.org/IService/AddConsultationResponse")]
        System.IAsyncResult BeginAddConsultation(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T flowConsultation, SMT.Saas.Tools.FlowWFService.SubmitData submitData, System.AsyncCallback callback, object asyncState);
        
        void EndAddConsultation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ReplyConsultation", ReplyAction="http://tempuri.org/IService/ReplyConsultationResponse")]
        System.IAsyncResult BeginReplyConsultation(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T flowConsultation, SMT.Saas.Tools.FlowWFService.SubmitData submitData, System.AsyncCallback callback, object asyncState);
        
        void EndReplyConsultation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/SubimtFlow", ReplyAction="http://tempuri.org/IService/SubimtFlowResponse")]
        System.IAsyncResult BeginSubimtFlow(SMT.Saas.Tools.FlowWFService.SubmitData ApprovalData, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.FlowWFService.DataResult EndSubimtFlow(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetAppUser", ReplyAction="http://tempuri.org/IService/GetAppUserResponse")]
        System.IAsyncResult BeginGetAppUser(string CompanyID, string ModelCode, string ModelCodeType, string FlowGUID, string xml, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.FlowWFService.DataResult EndGetAppUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetFlowRecordMaster", ReplyAction="http://tempuri.org/IService/GetFlowRecordMasterResponse")]
        System.IAsyncResult BeginGetFlowRecordMaster(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T> EndGetFlowRecordMaster(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/UpdateFlow", ReplyAction="http://tempuri.org/IService/UpdateFlowResponse")]
        System.IAsyncResult BeginUpdateFlow(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T entity, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateFlow(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetFlowInfo", ReplyAction="http://tempuri.org/IService/GetFlowInfoResponse")]
        System.IAsyncResult BeginGetFlowInfo(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T> EndGetFlowInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetFlowEntity", ReplyAction="http://tempuri.org/IService/GetFlowEntityResponse")]
        System.IAsyncResult BeginGetFlowEntity(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.FlowWFService.FlowEntity EndGetFlowEntity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetWaitingApprovalForm", ReplyAction="http://tempuri.org/IService/GetWaitingApprovalFormResponse")]
        System.IAsyncResult BeginGetWaitingApprovalForm(string ModelCode, string EditUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetWaitingApprovalForm(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetTaskInfo", ReplyAction="http://tempuri.org/IService/GetTaskInfoResponse")]
        System.IAsyncResult BeginGetTaskInfo(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.TaskInfo> EndGetTaskInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/IsExistFlowDataByUserID", ReplyAction="http://tempuri.org/IService/IsExistFlowDataByUserIDResponse")]
        System.IAsyncResult BeginIsExistFlowDataByUserID(string UserID, string PostID, System.AsyncCallback callback, object asyncState);
        
        string EndIsExistFlowDataByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetFlowDataByUserID", ReplyAction="http://tempuri.org/IService/GetFlowDataByUserIDResponse")]
        System.IAsyncResult BeginGetFlowDataByUserID(string UserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T> EndGetFlowDataByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetFlowDefine", ReplyAction="http://tempuri.org/IService/GetFlowDefineResponse")]
        System.IAsyncResult BeginGetFlowDefine(SMT.Saas.Tools.FlowWFService.SubmitData ApprovalData, System.AsyncCallback callback, object asyncState);
        
        string EndGetFlowDefine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetPersonalRecordByID", ReplyAction="http://tempuri.org/IService/GetPersonalRecordByIDResponse")]
        System.IAsyncResult BeginGetPersonalRecordByID(string personalrecordid, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.FlowWFService.T_WF_PERSONALRECORD EndGetPersonalRecordByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetFlowBranch", ReplyAction="http://tempuri.org/IService/GetFlowBranchResponse")]
        System.IAsyncResult BeginGetFlowBranch(string FlowID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetFlowBranch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/IsFreeFlowAndIsCancel", ReplyAction="http://tempuri.org/IService/IsFreeFlowAndIsCancelResponse")]
        System.IAsyncResult BeginIsFreeFlowAndIsCancel(string modelcode, string companyid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndIsFreeFlowAndIsCancel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetModelFlowRelationInfosListBySearch", ReplyAction="http://tempuri.org/IService/GetModelFlowRelationInfosListBySearchResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_WF_FORWARDHISTORY>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_WF_FORWARDHISTORY))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_WF_PERSONALRECORD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_WF_DOTASK))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityKey))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.EntityKeyMember>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityKeyMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.SubmitData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.ApprovalResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.UserInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.Role_UserType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.UserInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FlowSelectType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FlowType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.SubmitFlag))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.DataResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FlowResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.TaskInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.TaskInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLE>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ROLE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENUCUSTOMPERM>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENUCUSTOMPERM))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ENTITYMENU>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_PERMISSION>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_PERMISSION))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLEMENUPERMISSION>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ROLEMENUPERMISSION))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_ROLEENTITYMENU))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_ROLEENTITYMENU>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.T_SYS_USERROLE>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_USERROLE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.T_SYS_USER))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<SMT.Saas.Tools.FlowWFService.Role_UserType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.UserInfo>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<SMT.Saas.Tools.FlowWFService.UserInfo, SMT.Saas.Tools.FlowWFService.UserInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FlowEntity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_FLOWDEFINE_T))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.FLOW_MODELDEFINE_T))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWRECORDMASTER_TgZ_PhGfiK))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWRECORDDETAIL_TgZ_PhGfiK))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ENTITYMENUCIR1sILv))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_PERMISSIONCIR1sILv))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLECIR1sILv))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_ROLEENTITYMENUCIR1sILv))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfT_SYS_USERCIR1sILv))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_FLOWDEFINE_TgZ_PhGfiK))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.FlowWFService.EntityReferenceOfFLOW_MODELDEFINE_TgZ_PhGfiK))]
        System.IAsyncResult BeginGetModelFlowRelationInfosListBySearch(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, ref int pageCount, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T> EndGetModelFlowRelationInfosListBySearch(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetMetadataByFormid", ReplyAction="http://tempuri.org/IService/GetMetadataByFormidResponse")]
        System.IAsyncResult BeginGetMetadataByFormid(string formid, System.AsyncCallback callback, object asyncState);
        
        string EndGetMetadataByFormid(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/UpdateMetadataByFormid", ReplyAction="http://tempuri.org/IService/UpdateMetadataByFormidResponse")]
        System.IAsyncResult BeginUpdateMetadataByFormid(string formid, string xml, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateMetadataByFormid(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetDoTask", ReplyAction="http://tempuri.org/IService/GetDoTaskResponse")]
        System.IAsyncResult BeginGetDoTask(string dotaskid, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.FlowWFService.T_WF_DOTASK EndGetDoTask(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : SMT.Saas.Tools.FlowWFService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubimtFlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubimtFlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.FlowWFService.DataResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.FlowWFService.DataResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAppUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAppUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.FlowWFService.DataResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.FlowWFService.DataResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlowRecordMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlowRecordMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateFlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateFlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlowInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlowInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlowEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlowEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.FlowWFService.FlowEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.FlowWFService.FlowEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWaitingApprovalFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWaitingApprovalFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTaskInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTaskInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.TaskInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.TaskInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsExistFlowDataByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsExistFlowDataByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlowDataByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlowDataByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlowDefineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlowDefineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPersonalRecordByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPersonalRecordByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.FlowWFService.T_WF_PERSONALRECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.FlowWFService.T_WF_PERSONALRECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlowBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlowBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsFreeFlowAndIsCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsFreeFlowAndIsCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetModelFlowRelationInfosListBySearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetModelFlowRelationInfosListBySearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMetadataByFormidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMetadataByFormidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateMetadataByFormidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateMetadataByFormidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDoTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDoTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.FlowWFService.T_WF_DOTASK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.FlowWFService.T_WF_DOTASK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<SMT.Saas.Tools.FlowWFService.IService>, SMT.Saas.Tools.FlowWFService.IService {
        
        private BeginOperationDelegate onBeginAddConsultationDelegate;
        
        private EndOperationDelegate onEndAddConsultationDelegate;
        
        private System.Threading.SendOrPostCallback onAddConsultationCompletedDelegate;
        
        private BeginOperationDelegate onBeginReplyConsultationDelegate;
        
        private EndOperationDelegate onEndReplyConsultationDelegate;
        
        private System.Threading.SendOrPostCallback onReplyConsultationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubimtFlowDelegate;
        
        private EndOperationDelegate onEndSubimtFlowDelegate;
        
        private System.Threading.SendOrPostCallback onSubimtFlowCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAppUserDelegate;
        
        private EndOperationDelegate onEndGetAppUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetAppUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlowRecordMasterDelegate;
        
        private EndOperationDelegate onEndGetFlowRecordMasterDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlowRecordMasterCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFlowDelegate;
        
        private EndOperationDelegate onEndUpdateFlowDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFlowCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlowInfoDelegate;
        
        private EndOperationDelegate onEndGetFlowInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlowInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlowEntityDelegate;
        
        private EndOperationDelegate onEndGetFlowEntityDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlowEntityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWaitingApprovalFormDelegate;
        
        private EndOperationDelegate onEndGetWaitingApprovalFormDelegate;
        
        private System.Threading.SendOrPostCallback onGetWaitingApprovalFormCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTaskInfoDelegate;
        
        private EndOperationDelegate onEndGetTaskInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetTaskInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsExistFlowDataByUserIDDelegate;
        
        private EndOperationDelegate onEndIsExistFlowDataByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onIsExistFlowDataByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlowDataByUserIDDelegate;
        
        private EndOperationDelegate onEndGetFlowDataByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlowDataByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlowDefineDelegate;
        
        private EndOperationDelegate onEndGetFlowDefineDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlowDefineCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPersonalRecordByIDDelegate;
        
        private EndOperationDelegate onEndGetPersonalRecordByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPersonalRecordByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlowBranchDelegate;
        
        private EndOperationDelegate onEndGetFlowBranchDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlowBranchCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsFreeFlowAndIsCancelDelegate;
        
        private EndOperationDelegate onEndIsFreeFlowAndIsCancelDelegate;
        
        private System.Threading.SendOrPostCallback onIsFreeFlowAndIsCancelCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetModelFlowRelationInfosListBySearchDelegate;
        
        private EndOperationDelegate onEndGetModelFlowRelationInfosListBySearchDelegate;
        
        private System.Threading.SendOrPostCallback onGetModelFlowRelationInfosListBySearchCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMetadataByFormidDelegate;
        
        private EndOperationDelegate onEndGetMetadataByFormidDelegate;
        
        private System.Threading.SendOrPostCallback onGetMetadataByFormidCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMetadataByFormidDelegate;
        
        private EndOperationDelegate onEndUpdateMetadataByFormidDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMetadataByFormidCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDoTaskDelegate;
        
        private EndOperationDelegate onEndGetDoTaskDelegate;
        
        private System.Threading.SendOrPostCallback onGetDoTaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddConsultationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReplyConsultationCompleted;
        
        public event System.EventHandler<SubimtFlowCompletedEventArgs> SubimtFlowCompleted;
        
        public event System.EventHandler<GetAppUserCompletedEventArgs> GetAppUserCompleted;
        
        public event System.EventHandler<GetFlowRecordMasterCompletedEventArgs> GetFlowRecordMasterCompleted;
        
        public event System.EventHandler<UpdateFlowCompletedEventArgs> UpdateFlowCompleted;
        
        public event System.EventHandler<GetFlowInfoCompletedEventArgs> GetFlowInfoCompleted;
        
        public event System.EventHandler<GetFlowEntityCompletedEventArgs> GetFlowEntityCompleted;
        
        public event System.EventHandler<GetWaitingApprovalFormCompletedEventArgs> GetWaitingApprovalFormCompleted;
        
        public event System.EventHandler<GetTaskInfoCompletedEventArgs> GetTaskInfoCompleted;
        
        public event System.EventHandler<IsExistFlowDataByUserIDCompletedEventArgs> IsExistFlowDataByUserIDCompleted;
        
        public event System.EventHandler<GetFlowDataByUserIDCompletedEventArgs> GetFlowDataByUserIDCompleted;
        
        public event System.EventHandler<GetFlowDefineCompletedEventArgs> GetFlowDefineCompleted;
        
        public event System.EventHandler<GetPersonalRecordByIDCompletedEventArgs> GetPersonalRecordByIDCompleted;
        
        public event System.EventHandler<GetFlowBranchCompletedEventArgs> GetFlowBranchCompleted;
        
        public event System.EventHandler<IsFreeFlowAndIsCancelCompletedEventArgs> IsFreeFlowAndIsCancelCompleted;
        
        public event System.EventHandler<GetModelFlowRelationInfosListBySearchCompletedEventArgs> GetModelFlowRelationInfosListBySearchCompleted;
        
        public event System.EventHandler<GetMetadataByFormidCompletedEventArgs> GetMetadataByFormidCompleted;
        
        public event System.EventHandler<UpdateMetadataByFormidCompletedEventArgs> UpdateMetadataByFormidCompleted;
        
        public event System.EventHandler<GetDoTaskCompletedEventArgs> GetDoTaskCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginAddConsultation(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T flowConsultation, SMT.Saas.Tools.FlowWFService.SubmitData submitData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddConsultation(flowConsultation, submitData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.FlowWFService.IService.EndAddConsultation(System.IAsyncResult result) {
            base.Channel.EndAddConsultation(result);
        }
        
        private System.IAsyncResult OnBeginAddConsultation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T flowConsultation = ((SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T)(inValues[0]));
            SMT.Saas.Tools.FlowWFService.SubmitData submitData = ((SMT.Saas.Tools.FlowWFService.SubmitData)(inValues[1]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginAddConsultation(flowConsultation, submitData, callback, asyncState);
        }
        
        private object[] OnEndAddConsultation(System.IAsyncResult result) {
            ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndAddConsultation(result);
            return null;
        }
        
        private void OnAddConsultationCompleted(object state) {
            if ((this.AddConsultationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddConsultationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddConsultationAsync(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T flowConsultation, SMT.Saas.Tools.FlowWFService.SubmitData submitData) {
            this.AddConsultationAsync(flowConsultation, submitData, null);
        }
        
        public void AddConsultationAsync(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T flowConsultation, SMT.Saas.Tools.FlowWFService.SubmitData submitData, object userState) {
            if ((this.onBeginAddConsultationDelegate == null)) {
                this.onBeginAddConsultationDelegate = new BeginOperationDelegate(this.OnBeginAddConsultation);
            }
            if ((this.onEndAddConsultationDelegate == null)) {
                this.onEndAddConsultationDelegate = new EndOperationDelegate(this.OnEndAddConsultation);
            }
            if ((this.onAddConsultationCompletedDelegate == null)) {
                this.onAddConsultationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddConsultationCompleted);
            }
            base.InvokeAsync(this.onBeginAddConsultationDelegate, new object[] {
                        flowConsultation,
                        submitData}, this.onEndAddConsultationDelegate, this.onAddConsultationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginReplyConsultation(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T flowConsultation, SMT.Saas.Tools.FlowWFService.SubmitData submitData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReplyConsultation(flowConsultation, submitData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.FlowWFService.IService.EndReplyConsultation(System.IAsyncResult result) {
            base.Channel.EndReplyConsultation(result);
        }
        
        private System.IAsyncResult OnBeginReplyConsultation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T flowConsultation = ((SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T)(inValues[0]));
            SMT.Saas.Tools.FlowWFService.SubmitData submitData = ((SMT.Saas.Tools.FlowWFService.SubmitData)(inValues[1]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginReplyConsultation(flowConsultation, submitData, callback, asyncState);
        }
        
        private object[] OnEndReplyConsultation(System.IAsyncResult result) {
            ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndReplyConsultation(result);
            return null;
        }
        
        private void OnReplyConsultationCompleted(object state) {
            if ((this.ReplyConsultationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReplyConsultationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReplyConsultationAsync(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T flowConsultation, SMT.Saas.Tools.FlowWFService.SubmitData submitData) {
            this.ReplyConsultationAsync(flowConsultation, submitData, null);
        }
        
        public void ReplyConsultationAsync(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T flowConsultation, SMT.Saas.Tools.FlowWFService.SubmitData submitData, object userState) {
            if ((this.onBeginReplyConsultationDelegate == null)) {
                this.onBeginReplyConsultationDelegate = new BeginOperationDelegate(this.OnBeginReplyConsultation);
            }
            if ((this.onEndReplyConsultationDelegate == null)) {
                this.onEndReplyConsultationDelegate = new EndOperationDelegate(this.OnEndReplyConsultation);
            }
            if ((this.onReplyConsultationCompletedDelegate == null)) {
                this.onReplyConsultationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReplyConsultationCompleted);
            }
            base.InvokeAsync(this.onBeginReplyConsultationDelegate, new object[] {
                        flowConsultation,
                        submitData}, this.onEndReplyConsultationDelegate, this.onReplyConsultationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginSubimtFlow(SMT.Saas.Tools.FlowWFService.SubmitData ApprovalData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubimtFlow(ApprovalData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.FlowWFService.DataResult SMT.Saas.Tools.FlowWFService.IService.EndSubimtFlow(System.IAsyncResult result) {
            return base.Channel.EndSubimtFlow(result);
        }
        
        private System.IAsyncResult OnBeginSubimtFlow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.FlowWFService.SubmitData ApprovalData = ((SMT.Saas.Tools.FlowWFService.SubmitData)(inValues[0]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginSubimtFlow(ApprovalData, callback, asyncState);
        }
        
        private object[] OnEndSubimtFlow(System.IAsyncResult result) {
            SMT.Saas.Tools.FlowWFService.DataResult retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndSubimtFlow(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubimtFlowCompleted(object state) {
            if ((this.SubimtFlowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubimtFlowCompleted(this, new SubimtFlowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubimtFlowAsync(SMT.Saas.Tools.FlowWFService.SubmitData ApprovalData) {
            this.SubimtFlowAsync(ApprovalData, null);
        }
        
        public void SubimtFlowAsync(SMT.Saas.Tools.FlowWFService.SubmitData ApprovalData, object userState) {
            if ((this.onBeginSubimtFlowDelegate == null)) {
                this.onBeginSubimtFlowDelegate = new BeginOperationDelegate(this.OnBeginSubimtFlow);
            }
            if ((this.onEndSubimtFlowDelegate == null)) {
                this.onEndSubimtFlowDelegate = new EndOperationDelegate(this.OnEndSubimtFlow);
            }
            if ((this.onSubimtFlowCompletedDelegate == null)) {
                this.onSubimtFlowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubimtFlowCompleted);
            }
            base.InvokeAsync(this.onBeginSubimtFlowDelegate, new object[] {
                        ApprovalData}, this.onEndSubimtFlowDelegate, this.onSubimtFlowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetAppUser(string CompanyID, string ModelCode, string ModelCodeType, string FlowGUID, string xml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAppUser(CompanyID, ModelCode, ModelCodeType, FlowGUID, xml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.FlowWFService.DataResult SMT.Saas.Tools.FlowWFService.IService.EndGetAppUser(System.IAsyncResult result) {
            return base.Channel.EndGetAppUser(result);
        }
        
        private System.IAsyncResult OnBeginGetAppUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CompanyID = ((string)(inValues[0]));
            string ModelCode = ((string)(inValues[1]));
            string ModelCodeType = ((string)(inValues[2]));
            string FlowGUID = ((string)(inValues[3]));
            string xml = ((string)(inValues[4]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetAppUser(CompanyID, ModelCode, ModelCodeType, FlowGUID, xml, callback, asyncState);
        }
        
        private object[] OnEndGetAppUser(System.IAsyncResult result) {
            SMT.Saas.Tools.FlowWFService.DataResult retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetAppUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAppUserCompleted(object state) {
            if ((this.GetAppUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAppUserCompleted(this, new GetAppUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAppUserAsync(string CompanyID, string ModelCode, string ModelCodeType, string FlowGUID, string xml) {
            this.GetAppUserAsync(CompanyID, ModelCode, ModelCodeType, FlowGUID, xml, null);
        }
        
        public void GetAppUserAsync(string CompanyID, string ModelCode, string ModelCodeType, string FlowGUID, string xml, object userState) {
            if ((this.onBeginGetAppUserDelegate == null)) {
                this.onBeginGetAppUserDelegate = new BeginOperationDelegate(this.OnBeginGetAppUser);
            }
            if ((this.onEndGetAppUserDelegate == null)) {
                this.onEndGetAppUserDelegate = new EndOperationDelegate(this.OnEndGetAppUser);
            }
            if ((this.onGetAppUserCompletedDelegate == null)) {
                this.onGetAppUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAppUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetAppUserDelegate, new object[] {
                        CompanyID,
                        ModelCode,
                        ModelCodeType,
                        FlowGUID,
                        xml}, this.onEndGetAppUserDelegate, this.onGetAppUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetFlowRecordMaster(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlowRecordMaster(FormID, FlowGUID, CheckState, Flag, ModelCode, CompanyID, EditUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T> SMT.Saas.Tools.FlowWFService.IService.EndGetFlowRecordMaster(System.IAsyncResult result) {
            return base.Channel.EndGetFlowRecordMaster(result);
        }
        
        private System.IAsyncResult OnBeginGetFlowRecordMaster(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FormID = ((string)(inValues[0]));
            string FlowGUID = ((string)(inValues[1]));
            string CheckState = ((string)(inValues[2]));
            string Flag = ((string)(inValues[3]));
            string ModelCode = ((string)(inValues[4]));
            string CompanyID = ((string)(inValues[5]));
            string EditUserID = ((string)(inValues[6]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetFlowRecordMaster(FormID, FlowGUID, CheckState, Flag, ModelCode, CompanyID, EditUserID, callback, asyncState);
        }
        
        private object[] OnEndGetFlowRecordMaster(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T> retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetFlowRecordMaster(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlowRecordMasterCompleted(object state) {
            if ((this.GetFlowRecordMasterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlowRecordMasterCompleted(this, new GetFlowRecordMasterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlowRecordMasterAsync(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID) {
            this.GetFlowRecordMasterAsync(FormID, FlowGUID, CheckState, Flag, ModelCode, CompanyID, EditUserID, null);
        }
        
        public void GetFlowRecordMasterAsync(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, object userState) {
            if ((this.onBeginGetFlowRecordMasterDelegate == null)) {
                this.onBeginGetFlowRecordMasterDelegate = new BeginOperationDelegate(this.OnBeginGetFlowRecordMaster);
            }
            if ((this.onEndGetFlowRecordMasterDelegate == null)) {
                this.onEndGetFlowRecordMasterDelegate = new EndOperationDelegate(this.OnEndGetFlowRecordMaster);
            }
            if ((this.onGetFlowRecordMasterCompletedDelegate == null)) {
                this.onGetFlowRecordMasterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlowRecordMasterCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlowRecordMasterDelegate, new object[] {
                        FormID,
                        FlowGUID,
                        CheckState,
                        Flag,
                        ModelCode,
                        CompanyID,
                        EditUserID}, this.onEndGetFlowRecordMasterDelegate, this.onGetFlowRecordMasterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginUpdateFlow(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFlow(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.Saas.Tools.FlowWFService.IService.EndUpdateFlow(System.IAsyncResult result) {
            return base.Channel.EndUpdateFlow(result);
        }
        
        private System.IAsyncResult OnBeginUpdateFlow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T entity = ((SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T)(inValues[0]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginUpdateFlow(entity, callback, asyncState);
        }
        
        private object[] OnEndUpdateFlow(System.IAsyncResult result) {
            string retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndUpdateFlow(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateFlowCompleted(object state) {
            if ((this.UpdateFlowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFlowCompleted(this, new UpdateFlowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFlowAsync(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T entity) {
            this.UpdateFlowAsync(entity, null);
        }
        
        public void UpdateFlowAsync(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T entity, object userState) {
            if ((this.onBeginUpdateFlowDelegate == null)) {
                this.onBeginUpdateFlowDelegate = new BeginOperationDelegate(this.OnBeginUpdateFlow);
            }
            if ((this.onEndUpdateFlowDelegate == null)) {
                this.onEndUpdateFlowDelegate = new EndOperationDelegate(this.OnEndUpdateFlow);
            }
            if ((this.onUpdateFlowCompletedDelegate == null)) {
                this.onUpdateFlowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFlowCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFlowDelegate, new object[] {
                        entity}, this.onEndUpdateFlowDelegate, this.onUpdateFlowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetFlowInfo(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlowInfo(FormID, FlowGUID, CheckState, Flag, ModelCode, CompanyID, EditUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T> SMT.Saas.Tools.FlowWFService.IService.EndGetFlowInfo(System.IAsyncResult result) {
            return base.Channel.EndGetFlowInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetFlowInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FormID = ((string)(inValues[0]));
            string FlowGUID = ((string)(inValues[1]));
            string CheckState = ((string)(inValues[2]));
            string Flag = ((string)(inValues[3]));
            string ModelCode = ((string)(inValues[4]));
            string CompanyID = ((string)(inValues[5]));
            string EditUserID = ((string)(inValues[6]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetFlowInfo(FormID, FlowGUID, CheckState, Flag, ModelCode, CompanyID, EditUserID, callback, asyncState);
        }
        
        private object[] OnEndGetFlowInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T> retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetFlowInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlowInfoCompleted(object state) {
            if ((this.GetFlowInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlowInfoCompleted(this, new GetFlowInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlowInfoAsync(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID) {
            this.GetFlowInfoAsync(FormID, FlowGUID, CheckState, Flag, ModelCode, CompanyID, EditUserID, null);
        }
        
        public void GetFlowInfoAsync(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, object userState) {
            if ((this.onBeginGetFlowInfoDelegate == null)) {
                this.onBeginGetFlowInfoDelegate = new BeginOperationDelegate(this.OnBeginGetFlowInfo);
            }
            if ((this.onEndGetFlowInfoDelegate == null)) {
                this.onEndGetFlowInfoDelegate = new EndOperationDelegate(this.OnEndGetFlowInfo);
            }
            if ((this.onGetFlowInfoCompletedDelegate == null)) {
                this.onGetFlowInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlowInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlowInfoDelegate, new object[] {
                        FormID,
                        FlowGUID,
                        CheckState,
                        Flag,
                        ModelCode,
                        CompanyID,
                        EditUserID}, this.onEndGetFlowInfoDelegate, this.onGetFlowInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetFlowEntity(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlowEntity(FormID, FlowGUID, CheckState, Flag, ModelCode, CompanyID, EditUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.FlowWFService.FlowEntity SMT.Saas.Tools.FlowWFService.IService.EndGetFlowEntity(System.IAsyncResult result) {
            return base.Channel.EndGetFlowEntity(result);
        }
        
        private System.IAsyncResult OnBeginGetFlowEntity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FormID = ((string)(inValues[0]));
            string FlowGUID = ((string)(inValues[1]));
            string CheckState = ((string)(inValues[2]));
            string Flag = ((string)(inValues[3]));
            string ModelCode = ((string)(inValues[4]));
            string CompanyID = ((string)(inValues[5]));
            string EditUserID = ((string)(inValues[6]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetFlowEntity(FormID, FlowGUID, CheckState, Flag, ModelCode, CompanyID, EditUserID, callback, asyncState);
        }
        
        private object[] OnEndGetFlowEntity(System.IAsyncResult result) {
            SMT.Saas.Tools.FlowWFService.FlowEntity retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetFlowEntity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlowEntityCompleted(object state) {
            if ((this.GetFlowEntityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlowEntityCompleted(this, new GetFlowEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlowEntityAsync(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID) {
            this.GetFlowEntityAsync(FormID, FlowGUID, CheckState, Flag, ModelCode, CompanyID, EditUserID, null);
        }
        
        public void GetFlowEntityAsync(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, object userState) {
            if ((this.onBeginGetFlowEntityDelegate == null)) {
                this.onBeginGetFlowEntityDelegate = new BeginOperationDelegate(this.OnBeginGetFlowEntity);
            }
            if ((this.onEndGetFlowEntityDelegate == null)) {
                this.onEndGetFlowEntityDelegate = new EndOperationDelegate(this.OnEndGetFlowEntity);
            }
            if ((this.onGetFlowEntityCompletedDelegate == null)) {
                this.onGetFlowEntityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlowEntityCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlowEntityDelegate, new object[] {
                        FormID,
                        FlowGUID,
                        CheckState,
                        Flag,
                        ModelCode,
                        CompanyID,
                        EditUserID}, this.onEndGetFlowEntityDelegate, this.onGetFlowEntityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetWaitingApprovalForm(string ModelCode, string EditUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWaitingApprovalForm(ModelCode, EditUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> SMT.Saas.Tools.FlowWFService.IService.EndGetWaitingApprovalForm(System.IAsyncResult result) {
            return base.Channel.EndGetWaitingApprovalForm(result);
        }
        
        private System.IAsyncResult OnBeginGetWaitingApprovalForm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ModelCode = ((string)(inValues[0]));
            string EditUserID = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetWaitingApprovalForm(ModelCode, EditUserID, callback, asyncState);
        }
        
        private object[] OnEndGetWaitingApprovalForm(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetWaitingApprovalForm(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWaitingApprovalFormCompleted(object state) {
            if ((this.GetWaitingApprovalFormCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWaitingApprovalFormCompleted(this, new GetWaitingApprovalFormCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWaitingApprovalFormAsync(string ModelCode, string EditUserID) {
            this.GetWaitingApprovalFormAsync(ModelCode, EditUserID, null);
        }
        
        public void GetWaitingApprovalFormAsync(string ModelCode, string EditUserID, object userState) {
            if ((this.onBeginGetWaitingApprovalFormDelegate == null)) {
                this.onBeginGetWaitingApprovalFormDelegate = new BeginOperationDelegate(this.OnBeginGetWaitingApprovalForm);
            }
            if ((this.onEndGetWaitingApprovalFormDelegate == null)) {
                this.onEndGetWaitingApprovalFormDelegate = new EndOperationDelegate(this.OnEndGetWaitingApprovalForm);
            }
            if ((this.onGetWaitingApprovalFormCompletedDelegate == null)) {
                this.onGetWaitingApprovalFormCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWaitingApprovalFormCompleted);
            }
            base.InvokeAsync(this.onBeginGetWaitingApprovalFormDelegate, new object[] {
                        ModelCode,
                        EditUserID}, this.onEndGetWaitingApprovalFormDelegate, this.onGetWaitingApprovalFormCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetTaskInfo(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTaskInfo(FormID, FlowGUID, CheckState, Flag, ModelCode, CompanyID, EditUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.TaskInfo> SMT.Saas.Tools.FlowWFService.IService.EndGetTaskInfo(System.IAsyncResult result) {
            return base.Channel.EndGetTaskInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetTaskInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FormID = ((string)(inValues[0]));
            string FlowGUID = ((string)(inValues[1]));
            string CheckState = ((string)(inValues[2]));
            string Flag = ((string)(inValues[3]));
            string ModelCode = ((string)(inValues[4]));
            string CompanyID = ((string)(inValues[5]));
            string EditUserID = ((string)(inValues[6]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetTaskInfo(FormID, FlowGUID, CheckState, Flag, ModelCode, CompanyID, EditUserID, callback, asyncState);
        }
        
        private object[] OnEndGetTaskInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.TaskInfo> retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetTaskInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTaskInfoCompleted(object state) {
            if ((this.GetTaskInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTaskInfoCompleted(this, new GetTaskInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTaskInfoAsync(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID) {
            this.GetTaskInfoAsync(FormID, FlowGUID, CheckState, Flag, ModelCode, CompanyID, EditUserID, null);
        }
        
        public void GetTaskInfoAsync(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, object userState) {
            if ((this.onBeginGetTaskInfoDelegate == null)) {
                this.onBeginGetTaskInfoDelegate = new BeginOperationDelegate(this.OnBeginGetTaskInfo);
            }
            if ((this.onEndGetTaskInfoDelegate == null)) {
                this.onEndGetTaskInfoDelegate = new EndOperationDelegate(this.OnEndGetTaskInfo);
            }
            if ((this.onGetTaskInfoCompletedDelegate == null)) {
                this.onGetTaskInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTaskInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetTaskInfoDelegate, new object[] {
                        FormID,
                        FlowGUID,
                        CheckState,
                        Flag,
                        ModelCode,
                        CompanyID,
                        EditUserID}, this.onEndGetTaskInfoDelegate, this.onGetTaskInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginIsExistFlowDataByUserID(string UserID, string PostID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsExistFlowDataByUserID(UserID, PostID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.Saas.Tools.FlowWFService.IService.EndIsExistFlowDataByUserID(System.IAsyncResult result) {
            return base.Channel.EndIsExistFlowDataByUserID(result);
        }
        
        private System.IAsyncResult OnBeginIsExistFlowDataByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserID = ((string)(inValues[0]));
            string PostID = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginIsExistFlowDataByUserID(UserID, PostID, callback, asyncState);
        }
        
        private object[] OnEndIsExistFlowDataByUserID(System.IAsyncResult result) {
            string retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndIsExistFlowDataByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsExistFlowDataByUserIDCompleted(object state) {
            if ((this.IsExistFlowDataByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsExistFlowDataByUserIDCompleted(this, new IsExistFlowDataByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsExistFlowDataByUserIDAsync(string UserID, string PostID) {
            this.IsExistFlowDataByUserIDAsync(UserID, PostID, null);
        }
        
        public void IsExistFlowDataByUserIDAsync(string UserID, string PostID, object userState) {
            if ((this.onBeginIsExistFlowDataByUserIDDelegate == null)) {
                this.onBeginIsExistFlowDataByUserIDDelegate = new BeginOperationDelegate(this.OnBeginIsExistFlowDataByUserID);
            }
            if ((this.onEndIsExistFlowDataByUserIDDelegate == null)) {
                this.onEndIsExistFlowDataByUserIDDelegate = new EndOperationDelegate(this.OnEndIsExistFlowDataByUserID);
            }
            if ((this.onIsExistFlowDataByUserIDCompletedDelegate == null)) {
                this.onIsExistFlowDataByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsExistFlowDataByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginIsExistFlowDataByUserIDDelegate, new object[] {
                        UserID,
                        PostID}, this.onEndIsExistFlowDataByUserIDDelegate, this.onIsExistFlowDataByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetFlowDataByUserID(string UserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlowDataByUserID(UserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T> SMT.Saas.Tools.FlowWFService.IService.EndGetFlowDataByUserID(System.IAsyncResult result) {
            return base.Channel.EndGetFlowDataByUserID(result);
        }
        
        private System.IAsyncResult OnBeginGetFlowDataByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetFlowDataByUserID(UserID, callback, asyncState);
        }
        
        private object[] OnEndGetFlowDataByUserID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T> retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetFlowDataByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlowDataByUserIDCompleted(object state) {
            if ((this.GetFlowDataByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlowDataByUserIDCompleted(this, new GetFlowDataByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlowDataByUserIDAsync(string UserID) {
            this.GetFlowDataByUserIDAsync(UserID, null);
        }
        
        public void GetFlowDataByUserIDAsync(string UserID, object userState) {
            if ((this.onBeginGetFlowDataByUserIDDelegate == null)) {
                this.onBeginGetFlowDataByUserIDDelegate = new BeginOperationDelegate(this.OnBeginGetFlowDataByUserID);
            }
            if ((this.onEndGetFlowDataByUserIDDelegate == null)) {
                this.onEndGetFlowDataByUserIDDelegate = new EndOperationDelegate(this.OnEndGetFlowDataByUserID);
            }
            if ((this.onGetFlowDataByUserIDCompletedDelegate == null)) {
                this.onGetFlowDataByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlowDataByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlowDataByUserIDDelegate, new object[] {
                        UserID}, this.onEndGetFlowDataByUserIDDelegate, this.onGetFlowDataByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetFlowDefine(SMT.Saas.Tools.FlowWFService.SubmitData ApprovalData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlowDefine(ApprovalData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.Saas.Tools.FlowWFService.IService.EndGetFlowDefine(System.IAsyncResult result) {
            return base.Channel.EndGetFlowDefine(result);
        }
        
        private System.IAsyncResult OnBeginGetFlowDefine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.FlowWFService.SubmitData ApprovalData = ((SMT.Saas.Tools.FlowWFService.SubmitData)(inValues[0]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetFlowDefine(ApprovalData, callback, asyncState);
        }
        
        private object[] OnEndGetFlowDefine(System.IAsyncResult result) {
            string retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetFlowDefine(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlowDefineCompleted(object state) {
            if ((this.GetFlowDefineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlowDefineCompleted(this, new GetFlowDefineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlowDefineAsync(SMT.Saas.Tools.FlowWFService.SubmitData ApprovalData) {
            this.GetFlowDefineAsync(ApprovalData, null);
        }
        
        public void GetFlowDefineAsync(SMT.Saas.Tools.FlowWFService.SubmitData ApprovalData, object userState) {
            if ((this.onBeginGetFlowDefineDelegate == null)) {
                this.onBeginGetFlowDefineDelegate = new BeginOperationDelegate(this.OnBeginGetFlowDefine);
            }
            if ((this.onEndGetFlowDefineDelegate == null)) {
                this.onEndGetFlowDefineDelegate = new EndOperationDelegate(this.OnEndGetFlowDefine);
            }
            if ((this.onGetFlowDefineCompletedDelegate == null)) {
                this.onGetFlowDefineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlowDefineCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlowDefineDelegate, new object[] {
                        ApprovalData}, this.onEndGetFlowDefineDelegate, this.onGetFlowDefineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetPersonalRecordByID(string personalrecordid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPersonalRecordByID(personalrecordid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.FlowWFService.T_WF_PERSONALRECORD SMT.Saas.Tools.FlowWFService.IService.EndGetPersonalRecordByID(System.IAsyncResult result) {
            return base.Channel.EndGetPersonalRecordByID(result);
        }
        
        private System.IAsyncResult OnBeginGetPersonalRecordByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string personalrecordid = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetPersonalRecordByID(personalrecordid, callback, asyncState);
        }
        
        private object[] OnEndGetPersonalRecordByID(System.IAsyncResult result) {
            SMT.Saas.Tools.FlowWFService.T_WF_PERSONALRECORD retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetPersonalRecordByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPersonalRecordByIDCompleted(object state) {
            if ((this.GetPersonalRecordByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPersonalRecordByIDCompleted(this, new GetPersonalRecordByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPersonalRecordByIDAsync(string personalrecordid) {
            this.GetPersonalRecordByIDAsync(personalrecordid, null);
        }
        
        public void GetPersonalRecordByIDAsync(string personalrecordid, object userState) {
            if ((this.onBeginGetPersonalRecordByIDDelegate == null)) {
                this.onBeginGetPersonalRecordByIDDelegate = new BeginOperationDelegate(this.OnBeginGetPersonalRecordByID);
            }
            if ((this.onEndGetPersonalRecordByIDDelegate == null)) {
                this.onEndGetPersonalRecordByIDDelegate = new EndOperationDelegate(this.OnEndGetPersonalRecordByID);
            }
            if ((this.onGetPersonalRecordByIDCompletedDelegate == null)) {
                this.onGetPersonalRecordByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPersonalRecordByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPersonalRecordByIDDelegate, new object[] {
                        personalrecordid}, this.onEndGetPersonalRecordByIDDelegate, this.onGetPersonalRecordByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetFlowBranch(string FlowID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlowBranch(FlowID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> SMT.Saas.Tools.FlowWFService.IService.EndGetFlowBranch(System.IAsyncResult result) {
            return base.Channel.EndGetFlowBranch(result);
        }
        
        private System.IAsyncResult OnBeginGetFlowBranch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FlowID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetFlowBranch(FlowID, callback, asyncState);
        }
        
        private object[] OnEndGetFlowBranch(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetFlowBranch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlowBranchCompleted(object state) {
            if ((this.GetFlowBranchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlowBranchCompleted(this, new GetFlowBranchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlowBranchAsync(string FlowID) {
            this.GetFlowBranchAsync(FlowID, null);
        }
        
        public void GetFlowBranchAsync(string FlowID, object userState) {
            if ((this.onBeginGetFlowBranchDelegate == null)) {
                this.onBeginGetFlowBranchDelegate = new BeginOperationDelegate(this.OnBeginGetFlowBranch);
            }
            if ((this.onEndGetFlowBranchDelegate == null)) {
                this.onEndGetFlowBranchDelegate = new EndOperationDelegate(this.OnEndGetFlowBranch);
            }
            if ((this.onGetFlowBranchCompletedDelegate == null)) {
                this.onGetFlowBranchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlowBranchCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlowBranchDelegate, new object[] {
                        FlowID}, this.onEndGetFlowBranchDelegate, this.onGetFlowBranchCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginIsFreeFlowAndIsCancel(string modelcode, string companyid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsFreeFlowAndIsCancel(modelcode, companyid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> SMT.Saas.Tools.FlowWFService.IService.EndIsFreeFlowAndIsCancel(System.IAsyncResult result) {
            return base.Channel.EndIsFreeFlowAndIsCancel(result);
        }
        
        private System.IAsyncResult OnBeginIsFreeFlowAndIsCancel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string modelcode = ((string)(inValues[0]));
            string companyid = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginIsFreeFlowAndIsCancel(modelcode, companyid, callback, asyncState);
        }
        
        private object[] OnEndIsFreeFlowAndIsCancel(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndIsFreeFlowAndIsCancel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsFreeFlowAndIsCancelCompleted(object state) {
            if ((this.IsFreeFlowAndIsCancelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsFreeFlowAndIsCancelCompleted(this, new IsFreeFlowAndIsCancelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsFreeFlowAndIsCancelAsync(string modelcode, string companyid) {
            this.IsFreeFlowAndIsCancelAsync(modelcode, companyid, null);
        }
        
        public void IsFreeFlowAndIsCancelAsync(string modelcode, string companyid, object userState) {
            if ((this.onBeginIsFreeFlowAndIsCancelDelegate == null)) {
                this.onBeginIsFreeFlowAndIsCancelDelegate = new BeginOperationDelegate(this.OnBeginIsFreeFlowAndIsCancel);
            }
            if ((this.onEndIsFreeFlowAndIsCancelDelegate == null)) {
                this.onEndIsFreeFlowAndIsCancelDelegate = new EndOperationDelegate(this.OnEndIsFreeFlowAndIsCancel);
            }
            if ((this.onIsFreeFlowAndIsCancelCompletedDelegate == null)) {
                this.onIsFreeFlowAndIsCancelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsFreeFlowAndIsCancelCompleted);
            }
            base.InvokeAsync(this.onBeginIsFreeFlowAndIsCancelDelegate, new object[] {
                        modelcode,
                        companyid}, this.onEndIsFreeFlowAndIsCancelDelegate, this.onIsFreeFlowAndIsCancelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetModelFlowRelationInfosListBySearch(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, ref int pageCount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetModelFlowRelationInfosListBySearch(pageIndex, pageSize, sort, filterString, paras, ref pageCount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T> SMT.Saas.Tools.FlowWFService.IService.EndGetModelFlowRelationInfosListBySearch(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetModelFlowRelationInfosListBySearch(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetModelFlowRelationInfosListBySearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<object> paras = ((System.Collections.ObjectModel.ObservableCollection<object>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetModelFlowRelationInfosListBySearch(pageIndex, pageSize, sort, filterString, paras, ref pageCount, callback, asyncState);
        }
        
        private object[] OnEndGetModelFlowRelationInfosListBySearch(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T> retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetModelFlowRelationInfosListBySearch(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetModelFlowRelationInfosListBySearchCompleted(object state) {
            if ((this.GetModelFlowRelationInfosListBySearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetModelFlowRelationInfosListBySearchCompleted(this, new GetModelFlowRelationInfosListBySearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetModelFlowRelationInfosListBySearchAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, int pageCount) {
            this.GetModelFlowRelationInfosListBySearchAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, null);
        }
        
        public void GetModelFlowRelationInfosListBySearchAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, int pageCount, object userState) {
            if ((this.onBeginGetModelFlowRelationInfosListBySearchDelegate == null)) {
                this.onBeginGetModelFlowRelationInfosListBySearchDelegate = new BeginOperationDelegate(this.OnBeginGetModelFlowRelationInfosListBySearch);
            }
            if ((this.onEndGetModelFlowRelationInfosListBySearchDelegate == null)) {
                this.onEndGetModelFlowRelationInfosListBySearchDelegate = new EndOperationDelegate(this.OnEndGetModelFlowRelationInfosListBySearch);
            }
            if ((this.onGetModelFlowRelationInfosListBySearchCompletedDelegate == null)) {
                this.onGetModelFlowRelationInfosListBySearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetModelFlowRelationInfosListBySearchCompleted);
            }
            base.InvokeAsync(this.onBeginGetModelFlowRelationInfosListBySearchDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount}, this.onEndGetModelFlowRelationInfosListBySearchDelegate, this.onGetModelFlowRelationInfosListBySearchCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetMetadataByFormid(string formid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMetadataByFormid(formid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.Saas.Tools.FlowWFService.IService.EndGetMetadataByFormid(System.IAsyncResult result) {
            return base.Channel.EndGetMetadataByFormid(result);
        }
        
        private System.IAsyncResult OnBeginGetMetadataByFormid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string formid = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetMetadataByFormid(formid, callback, asyncState);
        }
        
        private object[] OnEndGetMetadataByFormid(System.IAsyncResult result) {
            string retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetMetadataByFormid(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMetadataByFormidCompleted(object state) {
            if ((this.GetMetadataByFormidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMetadataByFormidCompleted(this, new GetMetadataByFormidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMetadataByFormidAsync(string formid) {
            this.GetMetadataByFormidAsync(formid, null);
        }
        
        public void GetMetadataByFormidAsync(string formid, object userState) {
            if ((this.onBeginGetMetadataByFormidDelegate == null)) {
                this.onBeginGetMetadataByFormidDelegate = new BeginOperationDelegate(this.OnBeginGetMetadataByFormid);
            }
            if ((this.onEndGetMetadataByFormidDelegate == null)) {
                this.onEndGetMetadataByFormidDelegate = new EndOperationDelegate(this.OnEndGetMetadataByFormid);
            }
            if ((this.onGetMetadataByFormidCompletedDelegate == null)) {
                this.onGetMetadataByFormidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMetadataByFormidCompleted);
            }
            base.InvokeAsync(this.onBeginGetMetadataByFormidDelegate, new object[] {
                        formid}, this.onEndGetMetadataByFormidDelegate, this.onGetMetadataByFormidCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginUpdateMetadataByFormid(string formid, string xml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMetadataByFormid(formid, xml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.FlowWFService.IService.EndUpdateMetadataByFormid(System.IAsyncResult result) {
            return base.Channel.EndUpdateMetadataByFormid(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMetadataByFormid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string formid = ((string)(inValues[0]));
            string xml = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginUpdateMetadataByFormid(formid, xml, callback, asyncState);
        }
        
        private object[] OnEndUpdateMetadataByFormid(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndUpdateMetadataByFormid(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateMetadataByFormidCompleted(object state) {
            if ((this.UpdateMetadataByFormidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMetadataByFormidCompleted(this, new UpdateMetadataByFormidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMetadataByFormidAsync(string formid, string xml) {
            this.UpdateMetadataByFormidAsync(formid, xml, null);
        }
        
        public void UpdateMetadataByFormidAsync(string formid, string xml, object userState) {
            if ((this.onBeginUpdateMetadataByFormidDelegate == null)) {
                this.onBeginUpdateMetadataByFormidDelegate = new BeginOperationDelegate(this.OnBeginUpdateMetadataByFormid);
            }
            if ((this.onEndUpdateMetadataByFormidDelegate == null)) {
                this.onEndUpdateMetadataByFormidDelegate = new EndOperationDelegate(this.OnEndUpdateMetadataByFormid);
            }
            if ((this.onUpdateMetadataByFormidCompletedDelegate == null)) {
                this.onUpdateMetadataByFormidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMetadataByFormidCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMetadataByFormidDelegate, new object[] {
                        formid,
                        xml}, this.onEndUpdateMetadataByFormidDelegate, this.onUpdateMetadataByFormidCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.FlowWFService.IService.BeginGetDoTask(string dotaskid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDoTask(dotaskid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.FlowWFService.T_WF_DOTASK SMT.Saas.Tools.FlowWFService.IService.EndGetDoTask(System.IAsyncResult result) {
            return base.Channel.EndGetDoTask(result);
        }
        
        private System.IAsyncResult OnBeginGetDoTask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string dotaskid = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.FlowWFService.IService)(this)).BeginGetDoTask(dotaskid, callback, asyncState);
        }
        
        private object[] OnEndGetDoTask(System.IAsyncResult result) {
            SMT.Saas.Tools.FlowWFService.T_WF_DOTASK retVal = ((SMT.Saas.Tools.FlowWFService.IService)(this)).EndGetDoTask(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDoTaskCompleted(object state) {
            if ((this.GetDoTaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDoTaskCompleted(this, new GetDoTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDoTaskAsync(string dotaskid) {
            this.GetDoTaskAsync(dotaskid, null);
        }
        
        public void GetDoTaskAsync(string dotaskid, object userState) {
            if ((this.onBeginGetDoTaskDelegate == null)) {
                this.onBeginGetDoTaskDelegate = new BeginOperationDelegate(this.OnBeginGetDoTask);
            }
            if ((this.onEndGetDoTaskDelegate == null)) {
                this.onEndGetDoTaskDelegate = new EndOperationDelegate(this.OnEndGetDoTask);
            }
            if ((this.onGetDoTaskCompletedDelegate == null)) {
                this.onGetDoTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDoTaskCompleted);
            }
            base.InvokeAsync(this.onBeginGetDoTaskDelegate, new object[] {
                        dotaskid}, this.onEndGetDoTaskDelegate, this.onGetDoTaskCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.Saas.Tools.FlowWFService.IService CreateChannel() {
            return new ServiceClientChannel(this);
        }
        
        private class ServiceClientChannel : ChannelBase<SMT.Saas.Tools.FlowWFService.IService>, SMT.Saas.Tools.FlowWFService.IService {
            
            public ServiceClientChannel(System.ServiceModel.ClientBase<SMT.Saas.Tools.FlowWFService.IService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddConsultation(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T flowConsultation, SMT.Saas.Tools.FlowWFService.SubmitData submitData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = flowConsultation;
                _args[1] = submitData;
                System.IAsyncResult _result = base.BeginInvoke("AddConsultation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddConsultation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddConsultation", _args, result);
            }
            
            public System.IAsyncResult BeginReplyConsultation(SMT.Saas.Tools.FlowWFService.FLOW_CONSULTATION_T flowConsultation, SMT.Saas.Tools.FlowWFService.SubmitData submitData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = flowConsultation;
                _args[1] = submitData;
                System.IAsyncResult _result = base.BeginInvoke("ReplyConsultation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndReplyConsultation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ReplyConsultation", _args, result);
            }
            
            public System.IAsyncResult BeginSubimtFlow(SMT.Saas.Tools.FlowWFService.SubmitData ApprovalData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ApprovalData;
                System.IAsyncResult _result = base.BeginInvoke("SubimtFlow", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.FlowWFService.DataResult EndSubimtFlow(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.FlowWFService.DataResult _result = ((SMT.Saas.Tools.FlowWFService.DataResult)(base.EndInvoke("SubimtFlow", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAppUser(string CompanyID, string ModelCode, string ModelCodeType, string FlowGUID, string xml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = CompanyID;
                _args[1] = ModelCode;
                _args[2] = ModelCodeType;
                _args[3] = FlowGUID;
                _args[4] = xml;
                System.IAsyncResult _result = base.BeginInvoke("GetAppUser", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.FlowWFService.DataResult EndGetAppUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.FlowWFService.DataResult _result = ((SMT.Saas.Tools.FlowWFService.DataResult)(base.EndInvoke("GetAppUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlowRecordMaster(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = FormID;
                _args[1] = FlowGUID;
                _args[2] = CheckState;
                _args[3] = Flag;
                _args[4] = ModelCode;
                _args[5] = CompanyID;
                _args[6] = EditUserID;
                System.IAsyncResult _result = base.BeginInvoke("GetFlowRecordMaster", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T> EndGetFlowRecordMaster(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T>)(base.EndInvoke("GetFlowRecordMaster", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateFlow(SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entity;
                System.IAsyncResult _result = base.BeginInvoke("UpdateFlow", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUpdateFlow(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UpdateFlow", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlowInfo(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = FormID;
                _args[1] = FlowGUID;
                _args[2] = CheckState;
                _args[3] = Flag;
                _args[4] = ModelCode;
                _args[5] = CompanyID;
                _args[6] = EditUserID;
                System.IAsyncResult _result = base.BeginInvoke("GetFlowInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T> EndGetFlowInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDDETAIL_T>)(base.EndInvoke("GetFlowInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlowEntity(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = FormID;
                _args[1] = FlowGUID;
                _args[2] = CheckState;
                _args[3] = Flag;
                _args[4] = ModelCode;
                _args[5] = CompanyID;
                _args[6] = EditUserID;
                System.IAsyncResult _result = base.BeginInvoke("GetFlowEntity", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.FlowWFService.FlowEntity EndGetFlowEntity(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.FlowWFService.FlowEntity _result = ((SMT.Saas.Tools.FlowWFService.FlowEntity)(base.EndInvoke("GetFlowEntity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWaitingApprovalForm(string ModelCode, string EditUserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ModelCode;
                _args[1] = EditUserID;
                System.IAsyncResult _result = base.BeginInvoke("GetWaitingApprovalForm", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetWaitingApprovalForm(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetWaitingApprovalForm", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTaskInfo(string FormID, string FlowGUID, string CheckState, string Flag, string ModelCode, string CompanyID, string EditUserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = FormID;
                _args[1] = FlowGUID;
                _args[2] = CheckState;
                _args[3] = Flag;
                _args[4] = ModelCode;
                _args[5] = CompanyID;
                _args[6] = EditUserID;
                System.IAsyncResult _result = base.BeginInvoke("GetTaskInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.TaskInfo> EndGetTaskInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.TaskInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.TaskInfo>)(base.EndInvoke("GetTaskInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsExistFlowDataByUserID(string UserID, string PostID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UserID;
                _args[1] = PostID;
                System.IAsyncResult _result = base.BeginInvoke("IsExistFlowDataByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public string EndIsExistFlowDataByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("IsExistFlowDataByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlowDataByUserID(string UserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserID;
                System.IAsyncResult _result = base.BeginInvoke("GetFlowDataByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T> EndGetFlowDataByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_FLOWRECORDMASTER_T>)(base.EndInvoke("GetFlowDataByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlowDefine(SMT.Saas.Tools.FlowWFService.SubmitData ApprovalData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ApprovalData;
                System.IAsyncResult _result = base.BeginInvoke("GetFlowDefine", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetFlowDefine(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetFlowDefine", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPersonalRecordByID(string personalrecordid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = personalrecordid;
                System.IAsyncResult _result = base.BeginInvoke("GetPersonalRecordByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.FlowWFService.T_WF_PERSONALRECORD EndGetPersonalRecordByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.FlowWFService.T_WF_PERSONALRECORD _result = ((SMT.Saas.Tools.FlowWFService.T_WF_PERSONALRECORD)(base.EndInvoke("GetPersonalRecordByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlowBranch(string FlowID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = FlowID;
                System.IAsyncResult _result = base.BeginInvoke("GetFlowBranch", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetFlowBranch(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetFlowBranch", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsFreeFlowAndIsCancel(string modelcode, string companyid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = modelcode;
                _args[1] = companyid;
                System.IAsyncResult _result = base.BeginInvoke("IsFreeFlowAndIsCancel", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndIsFreeFlowAndIsCancel(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("IsFreeFlowAndIsCancel", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetModelFlowRelationInfosListBySearch(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, ref int pageCount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                System.IAsyncResult _result = base.BeginInvoke("GetModelFlowRelationInfosListBySearch", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T> EndGetModelFlowRelationInfosListBySearch(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.FlowWFService.FLOW_MODELFLOWRELATION_T>)(base.EndInvoke("GetModelFlowRelationInfosListBySearch", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMetadataByFormid(string formid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = formid;
                System.IAsyncResult _result = base.BeginInvoke("GetMetadataByFormid", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetMetadataByFormid(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetMetadataByFormid", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateMetadataByFormid(string formid, string xml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = formid;
                _args[1] = xml;
                System.IAsyncResult _result = base.BeginInvoke("UpdateMetadataByFormid", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateMetadataByFormid(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateMetadataByFormid", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDoTask(string dotaskid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = dotaskid;
                System.IAsyncResult _result = base.BeginInvoke("GetDoTask", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.FlowWFService.T_WF_DOTASK EndGetDoTask(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.FlowWFService.T_WF_DOTASK _result = ((SMT.Saas.Tools.FlowWFService.T_WF_DOTASK)(base.EndInvoke("GetDoTask", _args, result)));
                return _result;
            }
        }
    }
}
