//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.60310.0
// 
namespace SMT.Saas.Tools.EngineWS {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WF_DOTASK", Namespace="http://schemas.datacontract.org/2004/07/SMT.Workflow.Common.Model.FlowEngine")]
    public partial class T_WF_DOTASK : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string APPFIELDVALUEField;
        
        private string APPLICATIONURLField;
        
        private string APPXMLField;
        
        private System.Nullable<System.DateTime> BEFOREPROCESSDATEField;
        
        private System.Nullable<System.DateTime> CLOSEDDATEField;
        
        private string COMPANYIDField;
        
        private System.DateTime CREATEDATETIMEField;
        
        private string DOTASKIDField;
        
        private decimal DOTASKSTATUSField;
        
        private decimal DOTASKTYPEField;
        
        private string ENGINECODEField;
        
        private string FLOWXMLField;
        
        private decimal ISALARMField;
        
        private decimal MAILSTATUSField;
        
        private string MESSAGEBODYField;
        
        private string MODELCODEField;
        
        private string MODELNAMEField;
        
        private string ORDERIDField;
        
        private decimal ORDERSTATUSField;
        
        private string ORDERUSERIDField;
        
        private string ORDERUSERNAMEField;
        
        private string RECEIVEUSERIDField;
        
        private string REMARKField;
        
        private decimal RTXSTATUSField;
        
        private string SYSTEMCODEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPFIELDVALUE {
            get {
                return this.APPFIELDVALUEField;
            }
            set {
                if ((object.ReferenceEquals(this.APPFIELDVALUEField, value) != true)) {
                    this.APPFIELDVALUEField = value;
                    this.RaisePropertyChanged("APPFIELDVALUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPLICATIONURL {
            get {
                return this.APPLICATIONURLField;
            }
            set {
                if ((object.ReferenceEquals(this.APPLICATIONURLField, value) != true)) {
                    this.APPLICATIONURLField = value;
                    this.RaisePropertyChanged("APPLICATIONURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPXML {
            get {
                return this.APPXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.APPXMLField, value) != true)) {
                    this.APPXMLField = value;
                    this.RaisePropertyChanged("APPXML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BEFOREPROCESSDATE {
            get {
                return this.BEFOREPROCESSDATEField;
            }
            set {
                if ((this.BEFOREPROCESSDATEField.Equals(value) != true)) {
                    this.BEFOREPROCESSDATEField = value;
                    this.RaisePropertyChanged("BEFOREPROCESSDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CLOSEDDATE {
            get {
                return this.CLOSEDDATEField;
            }
            set {
                if ((this.CLOSEDDATEField.Equals(value) != true)) {
                    this.CLOSEDDATEField = value;
                    this.RaisePropertyChanged("CLOSEDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYID {
            get {
                return this.COMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYIDField, value) != true)) {
                    this.COMPANYIDField = value;
                    this.RaisePropertyChanged("COMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATETIME {
            get {
                return this.CREATEDATETIMEField;
            }
            set {
                if ((this.CREATEDATETIMEField.Equals(value) != true)) {
                    this.CREATEDATETIMEField = value;
                    this.RaisePropertyChanged("CREATEDATETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOTASKID {
            get {
                return this.DOTASKIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DOTASKIDField, value) != true)) {
                    this.DOTASKIDField = value;
                    this.RaisePropertyChanged("DOTASKID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DOTASKSTATUS {
            get {
                return this.DOTASKSTATUSField;
            }
            set {
                if ((this.DOTASKSTATUSField.Equals(value) != true)) {
                    this.DOTASKSTATUSField = value;
                    this.RaisePropertyChanged("DOTASKSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DOTASKTYPE {
            get {
                return this.DOTASKTYPEField;
            }
            set {
                if ((this.DOTASKTYPEField.Equals(value) != true)) {
                    this.DOTASKTYPEField = value;
                    this.RaisePropertyChanged("DOTASKTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENGINECODE {
            get {
                return this.ENGINECODEField;
            }
            set {
                if ((object.ReferenceEquals(this.ENGINECODEField, value) != true)) {
                    this.ENGINECODEField = value;
                    this.RaisePropertyChanged("ENGINECODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWXML {
            get {
                return this.FLOWXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWXMLField, value) != true)) {
                    this.FLOWXMLField = value;
                    this.RaisePropertyChanged("FLOWXML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ISALARM {
            get {
                return this.ISALARMField;
            }
            set {
                if ((this.ISALARMField.Equals(value) != true)) {
                    this.ISALARMField = value;
                    this.RaisePropertyChanged("ISALARM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MAILSTATUS {
            get {
                return this.MAILSTATUSField;
            }
            set {
                if ((this.MAILSTATUSField.Equals(value) != true)) {
                    this.MAILSTATUSField = value;
                    this.RaisePropertyChanged("MAILSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGEBODY {
            get {
                return this.MESSAGEBODYField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGEBODYField, value) != true)) {
                    this.MESSAGEBODYField = value;
                    this.RaisePropertyChanged("MESSAGEBODY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELCODE {
            get {
                return this.MODELCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELCODEField, value) != true)) {
                    this.MODELCODEField = value;
                    this.RaisePropertyChanged("MODELCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELNAME {
            get {
                return this.MODELNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELNAMEField, value) != true)) {
                    this.MODELNAMEField = value;
                    this.RaisePropertyChanged("MODELNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORDERID {
            get {
                return this.ORDERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ORDERIDField, value) != true)) {
                    this.ORDERIDField = value;
                    this.RaisePropertyChanged("ORDERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ORDERSTATUS {
            get {
                return this.ORDERSTATUSField;
            }
            set {
                if ((this.ORDERSTATUSField.Equals(value) != true)) {
                    this.ORDERSTATUSField = value;
                    this.RaisePropertyChanged("ORDERSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORDERUSERID {
            get {
                return this.ORDERUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ORDERUSERIDField, value) != true)) {
                    this.ORDERUSERIDField = value;
                    this.RaisePropertyChanged("ORDERUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORDERUSERNAME {
            get {
                return this.ORDERUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ORDERUSERNAMEField, value) != true)) {
                    this.ORDERUSERNAMEField = value;
                    this.RaisePropertyChanged("ORDERUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEUSERID {
            get {
                return this.RECEIVEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEUSERIDField, value) != true)) {
                    this.RECEIVEUSERIDField = value;
                    this.RaisePropertyChanged("RECEIVEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RTXSTATUS {
            get {
                return this.RTXSTATUSField;
            }
            set {
                if ((this.RTXSTATUSField.Equals(value) != true)) {
                    this.RTXSTATUSField = value;
                    this.RaisePropertyChanged("RTXSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMCODE {
            get {
                return this.SYSTEMCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMCODEField, value) != true)) {
                    this.SYSTEMCODEField = value;
                    this.RaisePropertyChanged("SYSTEMCODE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MsgType", Namespace="http://schemas.datacontract.org/2004/07/SMT.Global.IEngineContract")]
    public enum MsgType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Msg = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Task = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancel = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/SMT.Workflow.Engine.Services.BLL")]
    public partial class UserInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CompanyIDField;
        
        private string CompanyNameField;
        
        private string DepartmentIDField;
        
        private string DepartmentNameField;
        
        private string PostIDField;
        
        private string PostNameField;
        
        private string UserIDField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIDField, value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentIDField, value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostID {
            get {
                return this.PostIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PostIDField, value) != true)) {
                    this.PostIDField = value;
                    this.RaisePropertyChanged("PostID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostName {
            get {
                return this.PostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PostNameField, value) != true)) {
                    this.PostNameField = value;
                    this.RaisePropertyChanged("PostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomUserMsg", Namespace="http://schemas.datacontract.org/2004/07/SMT.Workflow.Common.Model.FlowEngine")]
    public partial class CustomUserMsg : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FormIDField;
        
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormID {
            get {
                return this.FormIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FormIDField, value) != true)) {
                    this.FormIDField = value;
                    this.RaisePropertyChanged("FormID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WF_FORWARDHISTORY", Namespace="http://schemas.datacontract.org/2004/07/EngineDataModel")]
    public partial class T_WF_FORWARDHISTORY : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string FORWARDHISTORYIDField;
        
        private string FROMOWNERIDField;
        
        private string FROMOWNERNAMEField;
        
        private string MODELCODEField;
        
        private string MODELIDField;
        
        private string PERSONALRECORDIDField;
        
        private string REMARKField;
        
        private string TOOWNERIDField;
        
        private string TOOWNERNAMEField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FORWARDHISTORYID {
            get {
                return this.FORWARDHISTORYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FORWARDHISTORYIDField, value) != true)) {
                    this.FORWARDHISTORYIDField = value;
                    this.RaisePropertyChanged("FORWARDHISTORYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FROMOWNERID {
            get {
                return this.FROMOWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FROMOWNERIDField, value) != true)) {
                    this.FROMOWNERIDField = value;
                    this.RaisePropertyChanged("FROMOWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FROMOWNERNAME {
            get {
                return this.FROMOWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FROMOWNERNAMEField, value) != true)) {
                    this.FROMOWNERNAMEField = value;
                    this.RaisePropertyChanged("FROMOWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELCODE {
            get {
                return this.MODELCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELCODEField, value) != true)) {
                    this.MODELCODEField = value;
                    this.RaisePropertyChanged("MODELCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELID {
            get {
                return this.MODELIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELIDField, value) != true)) {
                    this.MODELIDField = value;
                    this.RaisePropertyChanged("MODELID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERSONALRECORDID {
            get {
                return this.PERSONALRECORDIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PERSONALRECORDIDField, value) != true)) {
                    this.PERSONALRECORDIDField = value;
                    this.RaisePropertyChanged("PERSONALRECORDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TOOWNERID {
            get {
                return this.TOOWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TOOWNERIDField, value) != true)) {
                    this.TOOWNERIDField = value;
                    this.RaisePropertyChanged("TOOWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TOOWNERNAME {
            get {
                return this.TOOWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TOOWNERNAMEField, value) != true)) {
                    this.TOOWNERNAMEField = value;
                    this.RaisePropertyChanged("TOOWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MsgParms", Namespace="http://schemas.datacontract.org/2004/07/SMT.Global.IEngineContract")]
    public partial class MsgParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime BeginDateField;
        
        private System.DateTime EndDateField;
        
        private int LastDayField;
        
        private string MessageBodyField;
        
        private string MessageIdField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private string StatusField;
        
        private int TopField;
        
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BeginDate {
            get {
                return this.BeginDateField;
            }
            set {
                if ((this.BeginDateField.Equals(value) != true)) {
                    this.BeginDateField = value;
                    this.RaisePropertyChanged("BeginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastDay {
            get {
                return this.LastDayField;
            }
            set {
                if ((this.LastDayField.Equals(value) != true)) {
                    this.LastDayField = value;
                    this.RaisePropertyChanged("LastDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageBody {
            get {
                return this.MessageBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageBodyField, value) != true)) {
                    this.MessageBodyField = value;
                    this.RaisePropertyChanged("MessageBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Top {
            get {
                return this.TopField;
            }
            set {
                if ((this.TopField.Equals(value) != true)) {
                    this.TopField = value;
                    this.RaisePropertyChanged("Top");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_FLOW_ENGINEMSGLIST", Namespace="http://schemas.datacontract.org/2004/07/EngineDataModel")]
    public partial class T_FLOW_ENGINEMSGLIST : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string APPFIELDVALUEField;
        
        private string APPLICATIONCODEField;
        
        private string APPLICATIONURLField;
        
        private string APPXMLField;
        
        private System.DateTime BEFOREPROCESSDATEField;
        
        private string COMPANYCODEField;
        
        private string CREATEDATEField;
        
        private string CREATETIMEField;
        
        private string CREATEUSERIDField;
        
        private string ENGINECODEField;
        
        private string FLOWXMLField;
        
        private string ISALARMField;
        
        private string MAILSTATUSField;
        
        private string MESSAGEBODYField;
        
        private string MESSAGEIDField;
        
        private string MESSAGESTATUSField;
        
        private string MODELCODEField;
        
        private string MODELNAMEField;
        
        private string OPERATIONDATEField;
        
        private string OPERATIONTIMEField;
        
        private string OPERATIONUSERField;
        
        private string ORDERNODECODEField;
        
        private string RECEIVEDATEField;
        
        private string RECEIVETIMEField;
        
        private string RECEIVEUSERField;
        
        private string RTXSTATUSField;
        
        private string SYSTEMNAMEField;
        
        private string TEMPFIELDField;
        
        private string UPDATEDATEField;
        
        private string UPDATETIMEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPFIELDVALUE {
            get {
                return this.APPFIELDVALUEField;
            }
            set {
                if ((object.ReferenceEquals(this.APPFIELDVALUEField, value) != true)) {
                    this.APPFIELDVALUEField = value;
                    this.RaisePropertyChanged("APPFIELDVALUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPLICATIONCODE {
            get {
                return this.APPLICATIONCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.APPLICATIONCODEField, value) != true)) {
                    this.APPLICATIONCODEField = value;
                    this.RaisePropertyChanged("APPLICATIONCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPLICATIONURL {
            get {
                return this.APPLICATIONURLField;
            }
            set {
                if ((object.ReferenceEquals(this.APPLICATIONURLField, value) != true)) {
                    this.APPLICATIONURLField = value;
                    this.RaisePropertyChanged("APPLICATIONURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPXML {
            get {
                return this.APPXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.APPXMLField, value) != true)) {
                    this.APPXMLField = value;
                    this.RaisePropertyChanged("APPXML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BEFOREPROCESSDATE {
            get {
                return this.BEFOREPROCESSDATEField;
            }
            set {
                if ((this.BEFOREPROCESSDATEField.Equals(value) != true)) {
                    this.BEFOREPROCESSDATEField = value;
                    this.RaisePropertyChanged("BEFOREPROCESSDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYCODE {
            get {
                return this.COMPANYCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYCODEField, value) != true)) {
                    this.COMPANYCODEField = value;
                    this.RaisePropertyChanged("COMPANYCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDATEField, value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATETIME {
            get {
                return this.CREATETIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATETIMEField, value) != true)) {
                    this.CREATETIMEField = value;
                    this.RaisePropertyChanged("CREATETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENGINECODE {
            get {
                return this.ENGINECODEField;
            }
            set {
                if ((object.ReferenceEquals(this.ENGINECODEField, value) != true)) {
                    this.ENGINECODEField = value;
                    this.RaisePropertyChanged("ENGINECODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWXML {
            get {
                return this.FLOWXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWXMLField, value) != true)) {
                    this.FLOWXMLField = value;
                    this.RaisePropertyChanged("FLOWXML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISALARM {
            get {
                return this.ISALARMField;
            }
            set {
                if ((object.ReferenceEquals(this.ISALARMField, value) != true)) {
                    this.ISALARMField = value;
                    this.RaisePropertyChanged("ISALARM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAILSTATUS {
            get {
                return this.MAILSTATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.MAILSTATUSField, value) != true)) {
                    this.MAILSTATUSField = value;
                    this.RaisePropertyChanged("MAILSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGEBODY {
            get {
                return this.MESSAGEBODYField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGEBODYField, value) != true)) {
                    this.MESSAGEBODYField = value;
                    this.RaisePropertyChanged("MESSAGEBODY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGEID {
            get {
                return this.MESSAGEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGEIDField, value) != true)) {
                    this.MESSAGEIDField = value;
                    this.RaisePropertyChanged("MESSAGEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGESTATUS {
            get {
                return this.MESSAGESTATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGESTATUSField, value) != true)) {
                    this.MESSAGESTATUSField = value;
                    this.RaisePropertyChanged("MESSAGESTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELCODE {
            get {
                return this.MODELCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELCODEField, value) != true)) {
                    this.MODELCODEField = value;
                    this.RaisePropertyChanged("MODELCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELNAME {
            get {
                return this.MODELNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELNAMEField, value) != true)) {
                    this.MODELNAMEField = value;
                    this.RaisePropertyChanged("MODELNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OPERATIONDATE {
            get {
                return this.OPERATIONDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.OPERATIONDATEField, value) != true)) {
                    this.OPERATIONDATEField = value;
                    this.RaisePropertyChanged("OPERATIONDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OPERATIONTIME {
            get {
                return this.OPERATIONTIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OPERATIONTIMEField, value) != true)) {
                    this.OPERATIONTIMEField = value;
                    this.RaisePropertyChanged("OPERATIONTIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OPERATIONUSER {
            get {
                return this.OPERATIONUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.OPERATIONUSERField, value) != true)) {
                    this.OPERATIONUSERField = value;
                    this.RaisePropertyChanged("OPERATIONUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORDERNODECODE {
            get {
                return this.ORDERNODECODEField;
            }
            set {
                if ((object.ReferenceEquals(this.ORDERNODECODEField, value) != true)) {
                    this.ORDERNODECODEField = value;
                    this.RaisePropertyChanged("ORDERNODECODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEDATE {
            get {
                return this.RECEIVEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEDATEField, value) != true)) {
                    this.RECEIVEDATEField = value;
                    this.RaisePropertyChanged("RECEIVEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVETIME {
            get {
                return this.RECEIVETIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVETIMEField, value) != true)) {
                    this.RECEIVETIMEField = value;
                    this.RaisePropertyChanged("RECEIVETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEUSER {
            get {
                return this.RECEIVEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEUSERField, value) != true)) {
                    this.RECEIVEUSERField = value;
                    this.RaisePropertyChanged("RECEIVEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RTXSTATUS {
            get {
                return this.RTXSTATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.RTXSTATUSField, value) != true)) {
                    this.RTXSTATUSField = value;
                    this.RaisePropertyChanged("RTXSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMNAME {
            get {
                return this.SYSTEMNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMNAMEField, value) != true)) {
                    this.SYSTEMNAMEField = value;
                    this.RaisePropertyChanged("SYSTEMNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TEMPFIELD {
            get {
                return this.TEMPFIELDField;
            }
            set {
                if ((object.ReferenceEquals(this.TEMPFIELDField, value) != true)) {
                    this.TEMPFIELDField = value;
                    this.RaisePropertyChanged("TEMPFIELD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEDATEField, value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATETIME {
            get {
                return this.UPDATETIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATETIMEField, value) != true)) {
                    this.UPDATETIMEField = value;
                    this.RaisePropertyChanged("UPDATETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_FLOW_ENGINENOTES", Namespace="http://schemas.datacontract.org/2004/07/SMT.Workflow.Common.Model.FlowEngine")]
    public partial class T_FLOW_ENGINENOTES : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string APPLICATIONCODEField;
        
        private string APPLICATIONORDERCODEField;
        
        private string COMPANYCODEField;
        
        private string CREATEDATEField;
        
        private string CREATETIMEField;
        
        private string CREATEUSERIDField;
        
        private string MAILSTATUSField;
        
        private string MESSAGEBODYField;
        
        private string MESSAGESTATUSField;
        
        private decimal NOTESIDField;
        
        private string RECEIVEDATEField;
        
        private string RECEIVETIMEField;
        
        private string RECEIVEUSERField;
        
        private string RTXSTATUSField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPLICATIONCODE {
            get {
                return this.APPLICATIONCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.APPLICATIONCODEField, value) != true)) {
                    this.APPLICATIONCODEField = value;
                    this.RaisePropertyChanged("APPLICATIONCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPLICATIONORDERCODE {
            get {
                return this.APPLICATIONORDERCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.APPLICATIONORDERCODEField, value) != true)) {
                    this.APPLICATIONORDERCODEField = value;
                    this.RaisePropertyChanged("APPLICATIONORDERCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYCODE {
            get {
                return this.COMPANYCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYCODEField, value) != true)) {
                    this.COMPANYCODEField = value;
                    this.RaisePropertyChanged("COMPANYCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDATEField, value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATETIME {
            get {
                return this.CREATETIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATETIMEField, value) != true)) {
                    this.CREATETIMEField = value;
                    this.RaisePropertyChanged("CREATETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAILSTATUS {
            get {
                return this.MAILSTATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.MAILSTATUSField, value) != true)) {
                    this.MAILSTATUSField = value;
                    this.RaisePropertyChanged("MAILSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGEBODY {
            get {
                return this.MESSAGEBODYField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGEBODYField, value) != true)) {
                    this.MESSAGEBODYField = value;
                    this.RaisePropertyChanged("MESSAGEBODY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGESTATUS {
            get {
                return this.MESSAGESTATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGESTATUSField, value) != true)) {
                    this.MESSAGESTATUSField = value;
                    this.RaisePropertyChanged("MESSAGESTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NOTESID {
            get {
                return this.NOTESIDField;
            }
            set {
                if ((this.NOTESIDField.Equals(value) != true)) {
                    this.NOTESIDField = value;
                    this.RaisePropertyChanged("NOTESID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEDATE {
            get {
                return this.RECEIVEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEDATEField, value) != true)) {
                    this.RECEIVEDATEField = value;
                    this.RaisePropertyChanged("RECEIVEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVETIME {
            get {
                return this.RECEIVETIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVETIMEField, value) != true)) {
                    this.RECEIVETIMEField = value;
                    this.RaisePropertyChanged("RECEIVETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEUSER {
            get {
                return this.RECEIVEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEUSERField, value) != true)) {
                    this.RECEIVEUSERField = value;
                    this.RaisePropertyChanged("RECEIVEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RTXSTATUS {
            get {
                return this.RTXSTATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.RTXSTATUSField, value) != true)) {
                    this.RTXSTATUSField = value;
                    this.RaisePropertyChanged("RTXSTATUS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveUserAndContent", Namespace="http://schemas.datacontract.org/2004/07/SMT.Global.IEngineContract")]
    public partial class ReceiveUserAndContent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ContentField;
        
        private string ReceiveUserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiveUser {
            get {
                return this.ReceiveUserField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiveUserField, value) != true)) {
                    this.ReceiveUserField = value;
                    this.RaisePropertyChanged("ReceiveUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveUserForm", Namespace="http://schemas.datacontract.org/2004/07/SMT.Global.IEngineContract")]
    public partial class ReceiveUserForm : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<string> FormIDField;
        
        private string ReceiveUserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> FormID {
            get {
                return this.FormIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FormIDField, value) != true)) {
                    this.FormIDField = value;
                    this.RaisePropertyChanged("FormID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiveUser {
            get {
                return this.ReceiveUserField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiveUserField, value) != true)) {
                    this.ReceiveUserField = value;
                    this.RaisePropertyChanged("ReceiveUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_FLOW_CUSTOMFLOWDEFINE", Namespace="http://schemas.datacontract.org/2004/07/SMT.Workflow.Common.Model.FlowEngine")]
    public partial class T_FLOW_CUSTOMFLOWDEFINE : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string COMPANYCODEField;
        
        private string CREATEDATEField;
        
        private string CREATETIMEField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string FUNCTIONDESField;
        
        private string FUNCTIONNAMEField;
        
        private string MESSAGEBODYField;
        
        private string MODELCODEField;
        
        private string MODELNAMEField;
        
        private string MSGLINKURLField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERPOSTIDField;
        
        private string PAMETERSPLITCHARField;
        
        private string PROCESSFUNCNAMEField;
        
        private string PROCESSFUNCPAMETERField;
        
        private string PROCESSIDField;
        
        private string PROCESSWCFURLField;
        
        private string RECEIVEUSERField;
        
        private string RECEIVEUSERNAMEField;
        
        private string SYSTEMCODEField;
        
        private string SYSTEMNAMEField;
        
        private string WCFBINDINGCONTRACTField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYCODE {
            get {
                return this.COMPANYCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYCODEField, value) != true)) {
                    this.COMPANYCODEField = value;
                    this.RaisePropertyChanged("COMPANYCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDATEField, value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATETIME {
            get {
                return this.CREATETIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATETIMEField, value) != true)) {
                    this.CREATETIMEField = value;
                    this.RaisePropertyChanged("CREATETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FUNCTIONDES {
            get {
                return this.FUNCTIONDESField;
            }
            set {
                if ((object.ReferenceEquals(this.FUNCTIONDESField, value) != true)) {
                    this.FUNCTIONDESField = value;
                    this.RaisePropertyChanged("FUNCTIONDES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FUNCTIONNAME {
            get {
                return this.FUNCTIONNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FUNCTIONNAMEField, value) != true)) {
                    this.FUNCTIONNAMEField = value;
                    this.RaisePropertyChanged("FUNCTIONNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGEBODY {
            get {
                return this.MESSAGEBODYField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGEBODYField, value) != true)) {
                    this.MESSAGEBODYField = value;
                    this.RaisePropertyChanged("MESSAGEBODY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELCODE {
            get {
                return this.MODELCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELCODEField, value) != true)) {
                    this.MODELCODEField = value;
                    this.RaisePropertyChanged("MODELCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELNAME {
            get {
                return this.MODELNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELNAMEField, value) != true)) {
                    this.MODELNAMEField = value;
                    this.RaisePropertyChanged("MODELNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MSGLINKURL {
            get {
                return this.MSGLINKURLField;
            }
            set {
                if ((object.ReferenceEquals(this.MSGLINKURLField, value) != true)) {
                    this.MSGLINKURLField = value;
                    this.RaisePropertyChanged("MSGLINKURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PAMETERSPLITCHAR {
            get {
                return this.PAMETERSPLITCHARField;
            }
            set {
                if ((object.ReferenceEquals(this.PAMETERSPLITCHARField, value) != true)) {
                    this.PAMETERSPLITCHARField = value;
                    this.RaisePropertyChanged("PAMETERSPLITCHAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROCESSFUNCNAME {
            get {
                return this.PROCESSFUNCNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PROCESSFUNCNAMEField, value) != true)) {
                    this.PROCESSFUNCNAMEField = value;
                    this.RaisePropertyChanged("PROCESSFUNCNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROCESSFUNCPAMETER {
            get {
                return this.PROCESSFUNCPAMETERField;
            }
            set {
                if ((object.ReferenceEquals(this.PROCESSFUNCPAMETERField, value) != true)) {
                    this.PROCESSFUNCPAMETERField = value;
                    this.RaisePropertyChanged("PROCESSFUNCPAMETER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROCESSID {
            get {
                return this.PROCESSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PROCESSIDField, value) != true)) {
                    this.PROCESSIDField = value;
                    this.RaisePropertyChanged("PROCESSID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROCESSWCFURL {
            get {
                return this.PROCESSWCFURLField;
            }
            set {
                if ((object.ReferenceEquals(this.PROCESSWCFURLField, value) != true)) {
                    this.PROCESSWCFURLField = value;
                    this.RaisePropertyChanged("PROCESSWCFURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEUSER {
            get {
                return this.RECEIVEUSERField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEUSERField, value) != true)) {
                    this.RECEIVEUSERField = value;
                    this.RaisePropertyChanged("RECEIVEUSER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEUSERNAME {
            get {
                return this.RECEIVEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEUSERNAMEField, value) != true)) {
                    this.RECEIVEUSERNAMEField = value;
                    this.RaisePropertyChanged("RECEIVEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMCODE {
            get {
                return this.SYSTEMCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMCODEField, value) != true)) {
                    this.SYSTEMCODEField = value;
                    this.RaisePropertyChanged("SYSTEMCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMNAME {
            get {
                return this.SYSTEMNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMNAMEField, value) != true)) {
                    this.SYSTEMNAMEField = value;
                    this.RaisePropertyChanged("SYSTEMNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WCFBINDINGCONTRACT {
            get {
                return this.WCFBINDINGCONTRACTField;
            }
            set {
                if ((object.ReferenceEquals(this.WCFBINDINGCONTRACTField, value) != true)) {
                    this.WCFBINDINGCONTRACTField = value;
                    this.RaisePropertyChanged("WCFBINDINGCONTRACT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailParams", Namespace="http://schemas.datacontract.org/2004/07/SMT.Workflow.Common.Model.FlowEngine")]
    public partial class MailParams : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MailContentField;
        
        private string MailTitleField;
        
        private string ReceiveUserMailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailContent {
            get {
                return this.MailContentField;
            }
            set {
                if ((object.ReferenceEquals(this.MailContentField, value) != true)) {
                    this.MailContentField = value;
                    this.RaisePropertyChanged("MailContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailTitle {
            get {
                return this.MailTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.MailTitleField, value) != true)) {
                    this.MailTitleField = value;
                    this.RaisePropertyChanged("MailTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiveUserMail {
            get {
                return this.ReceiveUserMailField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiveUserMailField, value) != true)) {
                    this.ReceiveUserMailField = value;
                    this.RaisePropertyChanged("ReceiveUserMail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WF_TIMINGTRIGGERACTIVITY", Namespace="http://schemas.datacontract.org/2004/07/SMT.Workflow.Common.Model.FlowEngine")]
    public partial class T_WF_TIMINGTRIGGERACTIVITY : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BUSINESSIDField;
        
        private string COMPANYIDField;
        
        private string CONTRACTTYPEField;
        
        private System.DateTime CREATEDATETIMEField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string FUNCTIONNAMEField;
        
        private string FUNCTIONPARAMTERField;
        
        private string MESSAGEBODYField;
        
        private string MESSAGEURLField;
        
        private string MODELCODEField;
        
        private string MODELNAMEField;
        
        private string PAMETERSPLITCHARField;
        
        private string RECEIVERNAMEField;
        
        private string RECEIVEROLEField;
        
        private string RECEIVERUSERIDField;
        
        private string REMARKField;
        
        private string SYSTEMCODEField;
        
        private string SYSTEMNAMEField;
        
        private decimal TRIGGERACTIVITYTYPEField;
        
        private string TRIGGERDESCRIPTIONField;
        
        private System.Nullable<System.DateTime> TRIGGERENDField;
        
        private string TRIGGERIDField;
        
        private decimal TRIGGERMULTIPLEField;
        
        private string TRIGGERNAMEField;
        
        private decimal TRIGGERROUNDField;
        
        private System.Nullable<System.DateTime> TRIGGERSTARTField;
        
        private decimal TRIGGERSTATUSField;
        
        private System.DateTime TRIGGERTIMEField;
        
        private string TRIGGERTYPEField;
        
        private string WCFBINDINGCONTRACTField;
        
        private string WCFURLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BUSINESSID {
            get {
                return this.BUSINESSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BUSINESSIDField, value) != true)) {
                    this.BUSINESSIDField = value;
                    this.RaisePropertyChanged("BUSINESSID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYID {
            get {
                return this.COMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYIDField, value) != true)) {
                    this.COMPANYIDField = value;
                    this.RaisePropertyChanged("COMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONTRACTTYPE {
            get {
                return this.CONTRACTTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.CONTRACTTYPEField, value) != true)) {
                    this.CONTRACTTYPEField = value;
                    this.RaisePropertyChanged("CONTRACTTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATETIME {
            get {
                return this.CREATEDATETIMEField;
            }
            set {
                if ((this.CREATEDATETIMEField.Equals(value) != true)) {
                    this.CREATEDATETIMEField = value;
                    this.RaisePropertyChanged("CREATEDATETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FUNCTIONNAME {
            get {
                return this.FUNCTIONNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FUNCTIONNAMEField, value) != true)) {
                    this.FUNCTIONNAMEField = value;
                    this.RaisePropertyChanged("FUNCTIONNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FUNCTIONPARAMTER {
            get {
                return this.FUNCTIONPARAMTERField;
            }
            set {
                if ((object.ReferenceEquals(this.FUNCTIONPARAMTERField, value) != true)) {
                    this.FUNCTIONPARAMTERField = value;
                    this.RaisePropertyChanged("FUNCTIONPARAMTER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGEBODY {
            get {
                return this.MESSAGEBODYField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGEBODYField, value) != true)) {
                    this.MESSAGEBODYField = value;
                    this.RaisePropertyChanged("MESSAGEBODY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGEURL {
            get {
                return this.MESSAGEURLField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGEURLField, value) != true)) {
                    this.MESSAGEURLField = value;
                    this.RaisePropertyChanged("MESSAGEURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELCODE {
            get {
                return this.MODELCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELCODEField, value) != true)) {
                    this.MODELCODEField = value;
                    this.RaisePropertyChanged("MODELCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELNAME {
            get {
                return this.MODELNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELNAMEField, value) != true)) {
                    this.MODELNAMEField = value;
                    this.RaisePropertyChanged("MODELNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PAMETERSPLITCHAR {
            get {
                return this.PAMETERSPLITCHARField;
            }
            set {
                if ((object.ReferenceEquals(this.PAMETERSPLITCHARField, value) != true)) {
                    this.PAMETERSPLITCHARField = value;
                    this.RaisePropertyChanged("PAMETERSPLITCHAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVERNAME {
            get {
                return this.RECEIVERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVERNAMEField, value) != true)) {
                    this.RECEIVERNAMEField = value;
                    this.RaisePropertyChanged("RECEIVERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEROLE {
            get {
                return this.RECEIVEROLEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEROLEField, value) != true)) {
                    this.RECEIVEROLEField = value;
                    this.RaisePropertyChanged("RECEIVEROLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVERUSERID {
            get {
                return this.RECEIVERUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVERUSERIDField, value) != true)) {
                    this.RECEIVERUSERIDField = value;
                    this.RaisePropertyChanged("RECEIVERUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMCODE {
            get {
                return this.SYSTEMCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMCODEField, value) != true)) {
                    this.SYSTEMCODEField = value;
                    this.RaisePropertyChanged("SYSTEMCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMNAME {
            get {
                return this.SYSTEMNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMNAMEField, value) != true)) {
                    this.SYSTEMNAMEField = value;
                    this.RaisePropertyChanged("SYSTEMNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TRIGGERACTIVITYTYPE {
            get {
                return this.TRIGGERACTIVITYTYPEField;
            }
            set {
                if ((this.TRIGGERACTIVITYTYPEField.Equals(value) != true)) {
                    this.TRIGGERACTIVITYTYPEField = value;
                    this.RaisePropertyChanged("TRIGGERACTIVITYTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TRIGGERDESCRIPTION {
            get {
                return this.TRIGGERDESCRIPTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.TRIGGERDESCRIPTIONField, value) != true)) {
                    this.TRIGGERDESCRIPTIONField = value;
                    this.RaisePropertyChanged("TRIGGERDESCRIPTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TRIGGEREND {
            get {
                return this.TRIGGERENDField;
            }
            set {
                if ((this.TRIGGERENDField.Equals(value) != true)) {
                    this.TRIGGERENDField = value;
                    this.RaisePropertyChanged("TRIGGEREND");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TRIGGERID {
            get {
                return this.TRIGGERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TRIGGERIDField, value) != true)) {
                    this.TRIGGERIDField = value;
                    this.RaisePropertyChanged("TRIGGERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TRIGGERMULTIPLE {
            get {
                return this.TRIGGERMULTIPLEField;
            }
            set {
                if ((this.TRIGGERMULTIPLEField.Equals(value) != true)) {
                    this.TRIGGERMULTIPLEField = value;
                    this.RaisePropertyChanged("TRIGGERMULTIPLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TRIGGERNAME {
            get {
                return this.TRIGGERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TRIGGERNAMEField, value) != true)) {
                    this.TRIGGERNAMEField = value;
                    this.RaisePropertyChanged("TRIGGERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TRIGGERROUND {
            get {
                return this.TRIGGERROUNDField;
            }
            set {
                if ((this.TRIGGERROUNDField.Equals(value) != true)) {
                    this.TRIGGERROUNDField = value;
                    this.RaisePropertyChanged("TRIGGERROUND");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TRIGGERSTART {
            get {
                return this.TRIGGERSTARTField;
            }
            set {
                if ((this.TRIGGERSTARTField.Equals(value) != true)) {
                    this.TRIGGERSTARTField = value;
                    this.RaisePropertyChanged("TRIGGERSTART");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TRIGGERSTATUS {
            get {
                return this.TRIGGERSTATUSField;
            }
            set {
                if ((this.TRIGGERSTATUSField.Equals(value) != true)) {
                    this.TRIGGERSTATUSField = value;
                    this.RaisePropertyChanged("TRIGGERSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TRIGGERTIME {
            get {
                return this.TRIGGERTIMEField;
            }
            set {
                if ((this.TRIGGERTIMEField.Equals(value) != true)) {
                    this.TRIGGERTIMEField = value;
                    this.RaisePropertyChanged("TRIGGERTIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TRIGGERTYPE {
            get {
                return this.TRIGGERTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.TRIGGERTYPEField, value) != true)) {
                    this.TRIGGERTYPEField = value;
                    this.RaisePropertyChanged("TRIGGERTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WCFBINDINGCONTRACT {
            get {
                return this.WCFBINDINGCONTRACTField;
            }
            set {
                if ((object.ReferenceEquals(this.WCFBINDINGCONTRACTField, value) != true)) {
                    this.WCFBINDINGCONTRACTField = value;
                    this.RaisePropertyChanged("WCFBINDINGCONTRACT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WCFURL {
            get {
                return this.WCFURLField;
            }
            set {
                if ((object.ReferenceEquals(this.WCFURLField, value) != true)) {
                    this.WCFURLField = value;
                    this.RaisePropertyChanged("WCFURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EngineWS.IEngineWcfGlobalFunction")]
    public interface IEngineWcfGlobalFunction {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/AddTask", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/AddTaskResponse")]
        System.IAsyncResult BeginAddTask(SMT.Saas.Tools.EngineWS.T_WF_DOTASK dask, System.AsyncCallback callback, object asyncState);
        
        string EndAddTask(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/GetDoTaskEntity", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/GetDoTaskEntityResponse")]
        System.IAsyncResult BeginGetDoTaskEntity(string orderID, string receiveUserID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.EngineWS.T_WF_DOTASK EndGetDoTaskEntity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/DeleteTrigger", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/DeleteTriggerResponse")]
        System.IAsyncResult BeginDeleteTrigger(string orderID, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteTrigger(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/AddDoDask", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/AddDoDaskResponse")]
        System.IAsyncResult BeginAddDoDask(string companyID, string orderID, string systemCode, string modelCode, string modelName, string strXML, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState);
        
        void EndAddDoDask(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/ReturnUserInfoDask", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/ReturnUserInfoDaskResponse")]
        System.IAsyncResult BeginReturnUserInfoDask(string companyID, string orderID, string systemCode, string modelCode, string modelName, string strXML, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.UserInfo> EndReturnUserInfoDask(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/ApplicationMsgTriggerNew")]
        System.IAsyncResult BeginApplicationMsgTriggerNew(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string companyID, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState);
        
        void EndApplicationMsgTriggerNew(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/GetDoTaskNumber", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/GetDoTaskNumberResponse")]
        System.IAsyncResult BeginGetDoTaskNumber(string userid, System.AsyncCallback callback, object asyncState);
        
        int EndGetDoTaskNumber(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/GetDoTaskNumberByIM", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/GetDoTaskNumberByIMResponse")]
        System.IAsyncResult BeginGetDoTaskNumberByIM(string userid, System.AsyncCallback callback, object asyncState);
        
        int EndGetDoTaskNumberByIM(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/GetForwardHistory", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/GetForwardHistoryResponse")]
        System.IAsyncResult BeginGetForwardHistory(string modelCode, string formID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_WF_FORWARDHISTORY> EndGetForwardHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/TaskCacheReflesh", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/TaskCacheRefleshResponse")]
        System.IAsyncResult BeginTaskCacheReflesh(string userID, System.AsyncCallback callback, object asyncState);
        
        void EndTaskCacheReflesh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/CacheReflesh", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/CacheRefleshResponse")]
        System.IAsyncResult BeginCacheReflesh(string userID, bool isHasNewBill, bool isHasNewTask, string remark, System.AsyncCallback callback, object asyncState);
        
        void EndCacheReflesh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/RemoveCachUser", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/RemoveCachUserResponse")]
        System.IAsyncResult BeginRemoveCachUser(string userId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveCachUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/RemoveCache", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/RemoveCacheResponse")]
        System.IAsyncResult BeginRemoveCache(string userID, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveCache(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/SaveFlowTriggerData", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/SaveFlowTriggerDataResponse")]
        System.IAsyncResult BeginSaveFlowTriggerData(string strFlowMessage, string strBOObject, System.AsyncCallback callback, object asyncState);
        
        bool EndSaveFlowTriggerData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/PendingTasksParmsPageIndex", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/PendingTasksParmsPageIndexResponse")]
        System.IAsyncResult BeginPendingTasksParmsPageIndex(SMT.Saas.Tools.EngineWS.MsgParms msgParams, ref int rowCount, ref int pageCount, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> EndPendingTasksParmsPageIndex(ref int rowCount, ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/PendingTasksParmsPageIndexForMobile", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/PendingTasksParmsPageIndexForMobileRe" +
            "sponse")]
        System.IAsyncResult BeginPendingTasksParmsPageIndexForMobile(SMT.Saas.Tools.EngineWS.MsgParms msgParams, ref int rowCount, ref int pageCount, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> EndPendingTasksParmsPageIndexForMobile(ref int rowCount, ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/GetPendingTaskPrevNext", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/GetPendingTaskPrevNextResponse")]
        System.IAsyncResult BeginGetPendingTaskPrevNext(SMT.Saas.Tools.EngineWS.MsgParms msgParms, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> EndGetPendingTaskPrevNext(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/PendingCacheTasksParmsPageIndex", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/PendingCacheTasksParmsPageIndexRespon" +
            "se")]
        System.IAsyncResult BeginPendingCacheTasksParmsPageIndex(SMT.Saas.Tools.EngineWS.MsgParms msgParams, ref bool IsAutofresh, ref bool HaveNewTask, ref int rowCount, ref int pageCount, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> EndPendingCacheTasksParmsPageIndex(ref bool IsAutofresh, ref bool HaveNewTask, ref int rowCount, ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/PendingMainTasksParms", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/PendingMainTasksParmsResponse")]
        System.IAsyncResult BeginPendingMainTasksParms(SMT.Saas.Tools.EngineWS.MsgParms msgParams, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> EndPendingMainTasksParms(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/PendingCacheMainTasksParms", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/PendingCacheMainTasksParmsResponse")]
        System.IAsyncResult BeginPendingCacheMainTasksParms(SMT.Saas.Tools.EngineWS.MsgParms msgParams, ref bool IsAutofresh, ref bool HaveNewTask, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> EndPendingCacheMainTasksParms(ref bool IsAutofresh, ref bool HaveNewTask, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/PendingDetailByID", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/PendingDetailByIDResponse")]
        System.IAsyncResult BeginPendingDetailByID(string strMsgID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST EndPendingDetailByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/PendingDetailTasks", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/PendingDetailTasksResponse")]
        System.IAsyncResult BeginPendingDetailTasks(string strMsgID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST EndPendingDetailTasks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/PendingDetailTasksByPhone", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/PendingDetailTasksByPhoneResponse")]
        System.IAsyncResult BeginPendingDetailTasksByPhone(string strMsgID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST EndPendingDetailTasksByPhone(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/PendingDetailTasksByOrderNodeCodeForM" +
            "obile", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/PendingDetailTasksByOrderNodeCodeForM" +
            "obileResponse")]
        System.IAsyncResult BeginPendingDetailTasksByOrderNodeCodeForMobile(string orderNodeCode, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST EndPendingDetailTasksByOrderNodeCodeForMobile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/EngineNotes", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/EngineNotesResponse")]
        System.IAsyncResult BeginEngineNotes(string strUserID, string strStatus, int iTop, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINENOTES> EndEngineNotes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/CancelEventTriggerData", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/CancelEventTriggerDataResponse")]
        System.IAsyncResult BeginCancelEventTriggerData(string strApplicationOrderCode, System.AsyncCallback callback, object asyncState);
        
        bool EndCancelEventTriggerData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/SaveEventData")]
        System.IAsyncResult BeginSaveEventData(string strEventXml, System.AsyncCallback callback, object asyncState);
        
        void EndSaveEventData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/MsgTrigger")]
        System.IAsyncResult BeginMsgTrigger(System.Collections.ObjectModel.ObservableCollection<string> recevieUser, string SystemCode, string MsgKey, string ID, string strXml, System.AsyncCallback callback, object asyncState);
        
        void EndMsgTrigger(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/NotesSend")]
        System.IAsyncResult BeginNotesSend(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserAndContent> List, string SystemCode, string strFormID, System.AsyncCallback callback, object asyncState);
        
        void EndNotesSend(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/TaskMsgClose")]
        System.IAsyncResult BeginTaskMsgClose(string strSystemCode, string strFormID, string strReceiveUser, System.AsyncCallback callback, object asyncState);
        
        void EndTaskMsgClose(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/CloseDoTask", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/CloseDoTaskResponse")]
        System.IAsyncResult BeginCloseDoTask(System.Collections.ObjectModel.ObservableCollection<string> listOrderID, string strModelCode, string strReceiveUser, System.AsyncCallback callback, object asyncState);
        
        void EndCloseDoTask(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/MsgListClose")]
        System.IAsyncResult BeginMsgListClose(string strSystemCode, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserForm> List, System.AsyncCallback callback, object asyncState);
        
        void EndMsgListClose(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/ModelMsgClose")]
        System.IAsyncResult BeginModelMsgClose(string strModelCode, string strReceiveUser, System.AsyncCallback callback, object asyncState);
        
        void EndModelMsgClose(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/ClosedDoTaskFromID", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/ClosedDoTaskFromIDResponse")]
        System.IAsyncResult BeginClosedDoTaskFromID(string strModelCode, string fromID, System.AsyncCallback callback, object asyncState);
        
        void EndClosedDoTaskFromID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/MsgClose")]
        System.IAsyncResult BeginMsgClose(string strMessageID, string strEventID, System.AsyncCallback callback, object asyncState);
        
        void EndMsgClose(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/ApplicationMsgTrigger")]
        System.IAsyncResult BeginApplicationMsgTrigger(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState);
        
        void EndApplicationMsgTrigger(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/ApplicationMsgTriggerCustom")]
        System.IAsyncResult BeginApplicationMsgTriggerCustom(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, string messageBody, System.AsyncCallback callback, object asyncState);
        
        void EndApplicationMsgTriggerCustom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/ApplicationEngineTrigger")]
        System.IAsyncResult BeginApplicationEngineTrigger(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strCompanyID, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState);
        
        void EndApplicationEngineTrigger(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/AppMsgTrigger", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/AppMsgTriggerResponse")]
        System.IAsyncResult BeginAppMsgTrigger(string ReceiveUserID, string strFormID, string MsgContent, string ModelCode, string strXml, string strNewGuid, System.AsyncCallback callback, object asyncState);
        
        void EndAppMsgTrigger(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/ApplicationNotesTrigger")]
        System.IAsyncResult BeginApplicationNotesTrigger(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string Content, System.AsyncCallback callback, object asyncState);
        
        void EndApplicationNotesTrigger(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/CustomFlowDefineList", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/CustomFlowDefineListResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.UserInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.UserInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_WF_FORWARDHISTORY>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.T_WF_FORWARDHISTORY))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.T_WF_DOTASK))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.CustomUserMsg))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINENOTES>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.T_FLOW_ENGINENOTES))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.MailParams))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.T_WF_TIMINGTRIGGERACTIVITY))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.MsgType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.MsgParms))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserAndContent>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.ReceiveUserAndContent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserForm>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.EngineWS.ReceiveUserForm))]
        System.IAsyncResult BeginCustomFlowDefineList(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, ref int pageCount, string strCompanyID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE> EndCustomFlowDefineList(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/CallCustomFlowTrigger")]
        System.IAsyncResult BeginCallCustomFlowTrigger(SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE define, System.AsyncCallback callback, object asyncState);
        
        void EndCallCustomFlowTrigger(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/SendMail")]
        System.IAsyncResult BeginSendMail(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams> mailParams, System.AsyncCallback callback, object asyncState);
        
        void EndSendMail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/SendMailParam", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/SendMailParamResponse")]
        System.IAsyncResult BeginSendMailParam(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams> mailParams, string mailType, string mailParameter, System.AsyncCallback callback, object asyncState);
        
        bool EndSendMailParam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/FlowCancel", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/FlowCancelResponse")]
        System.IAsyncResult BeginFlowCancel(string strFlowXML, string strAppXml, System.AsyncCallback callback, object asyncState);
        
        bool EndFlowCancel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/FlowConsultati", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/FlowConsultatiResponse")]
        System.IAsyncResult BeginFlowConsultati(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string strTitle, string strFlowXML, string strAppXml, System.AsyncCallback callback, object asyncState);
        
        bool EndFlowConsultati(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/FlowConsultatiClose")]
        System.IAsyncResult BeginFlowConsultatiClose(string strSystemCode, string strFormID, string strReceiveUser, System.AsyncCallback callback, object asyncState);
        
        void EndFlowConsultatiClose(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/TaskDelete")]
        System.IAsyncResult BeginTaskDelete(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string strSystemCode, System.AsyncCallback callback, object asyncState);
        
        void EndTaskDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/TaskDeleteALL")]
        System.IAsyncResult BeginTaskDeleteALL(string strSystemCode, string strFormID, string strReceiveID, System.AsyncCallback callback, object asyncState);
        
        void EndTaskDeleteALL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/SendTaskMessage", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/SendTaskMessageResponse")]
        System.IAsyncResult BeginSendTaskMessage(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> list, string SystemCode, string ModelCode, System.AsyncCallback callback, object asyncState);
        
        string EndSendTaskMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEngineWcfGlobalFunction/WFAddTimingTrigger", ReplyAction="http://tempuri.org/IEngineWcfGlobalFunction/WFAddTimingTriggerResponse")]
        System.IAsyncResult BeginWFAddTimingTrigger(SMT.Saas.Tools.EngineWS.T_WF_TIMINGTRIGGERACTIVITY entity, System.AsyncCallback callback, object asyncState);
        
        string EndWFAddTimingTrigger(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEngineWcfGlobalFunctionChannel : SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDoTaskEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDoTaskEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.EngineWS.T_WF_DOTASK Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.EngineWS.T_WF_DOTASK)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReturnUserInfoDaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnUserInfoDaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.UserInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.UserInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDoTaskNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDoTaskNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDoTaskNumberByIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDoTaskNumberByIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetForwardHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetForwardHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_WF_FORWARDHISTORY> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_WF_FORWARDHISTORY>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveFlowTriggerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveFlowTriggerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PendingTasksParmsPageIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PendingTasksParmsPageIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int rowCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PendingTasksParmsPageIndexForMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PendingTasksParmsPageIndexForMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int rowCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPendingTaskPrevNextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPendingTaskPrevNextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PendingCacheTasksParmsPageIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PendingCacheTasksParmsPageIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool IsAutofresh {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public bool HaveNewTask {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        public int rowCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>)(this.results[4]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PendingMainTasksParmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PendingMainTasksParmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PendingCacheMainTasksParmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PendingCacheMainTasksParmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool IsAutofresh {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public bool HaveNewTask {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PendingDetailByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PendingDetailByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PendingDetailTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PendingDetailTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PendingDetailTasksByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PendingDetailTasksByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PendingDetailTasksByOrderNodeCodeForMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PendingDetailTasksByOrderNodeCodeForMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EngineNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EngineNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINENOTES> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINENOTES>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CancelEventTriggerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CancelEventTriggerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomFlowDefineListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CustomFlowDefineListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendMailParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendMailParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlowCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FlowCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlowConsultatiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FlowConsultatiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendTaskMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendTaskMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WFAddTimingTriggerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WFAddTimingTriggerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EngineWcfGlobalFunctionClient : System.ServiceModel.ClientBase<SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction>, SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction {
        
        private BeginOperationDelegate onBeginAddTaskDelegate;
        
        private EndOperationDelegate onEndAddTaskDelegate;
        
        private System.Threading.SendOrPostCallback onAddTaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDoTaskEntityDelegate;
        
        private EndOperationDelegate onEndGetDoTaskEntityDelegate;
        
        private System.Threading.SendOrPostCallback onGetDoTaskEntityCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTriggerDelegate;
        
        private EndOperationDelegate onEndDeleteTriggerDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTriggerCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddDoDaskDelegate;
        
        private EndOperationDelegate onEndAddDoDaskDelegate;
        
        private System.Threading.SendOrPostCallback onAddDoDaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnUserInfoDaskDelegate;
        
        private EndOperationDelegate onEndReturnUserInfoDaskDelegate;
        
        private System.Threading.SendOrPostCallback onReturnUserInfoDaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplicationMsgTriggerNewDelegate;
        
        private EndOperationDelegate onEndApplicationMsgTriggerNewDelegate;
        
        private System.Threading.SendOrPostCallback onApplicationMsgTriggerNewCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDoTaskNumberDelegate;
        
        private EndOperationDelegate onEndGetDoTaskNumberDelegate;
        
        private System.Threading.SendOrPostCallback onGetDoTaskNumberCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDoTaskNumberByIMDelegate;
        
        private EndOperationDelegate onEndGetDoTaskNumberByIMDelegate;
        
        private System.Threading.SendOrPostCallback onGetDoTaskNumberByIMCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetForwardHistoryDelegate;
        
        private EndOperationDelegate onEndGetForwardHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetForwardHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginTaskCacheRefleshDelegate;
        
        private EndOperationDelegate onEndTaskCacheRefleshDelegate;
        
        private System.Threading.SendOrPostCallback onTaskCacheRefleshCompletedDelegate;
        
        private BeginOperationDelegate onBeginCacheRefleshDelegate;
        
        private EndOperationDelegate onEndCacheRefleshDelegate;
        
        private System.Threading.SendOrPostCallback onCacheRefleshCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveCachUserDelegate;
        
        private EndOperationDelegate onEndRemoveCachUserDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveCachUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveCacheDelegate;
        
        private EndOperationDelegate onEndRemoveCacheDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveCacheCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveFlowTriggerDataDelegate;
        
        private EndOperationDelegate onEndSaveFlowTriggerDataDelegate;
        
        private System.Threading.SendOrPostCallback onSaveFlowTriggerDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginPendingTasksParmsPageIndexDelegate;
        
        private EndOperationDelegate onEndPendingTasksParmsPageIndexDelegate;
        
        private System.Threading.SendOrPostCallback onPendingTasksParmsPageIndexCompletedDelegate;
        
        private BeginOperationDelegate onBeginPendingTasksParmsPageIndexForMobileDelegate;
        
        private EndOperationDelegate onEndPendingTasksParmsPageIndexForMobileDelegate;
        
        private System.Threading.SendOrPostCallback onPendingTasksParmsPageIndexForMobileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPendingTaskPrevNextDelegate;
        
        private EndOperationDelegate onEndGetPendingTaskPrevNextDelegate;
        
        private System.Threading.SendOrPostCallback onGetPendingTaskPrevNextCompletedDelegate;
        
        private BeginOperationDelegate onBeginPendingCacheTasksParmsPageIndexDelegate;
        
        private EndOperationDelegate onEndPendingCacheTasksParmsPageIndexDelegate;
        
        private System.Threading.SendOrPostCallback onPendingCacheTasksParmsPageIndexCompletedDelegate;
        
        private BeginOperationDelegate onBeginPendingMainTasksParmsDelegate;
        
        private EndOperationDelegate onEndPendingMainTasksParmsDelegate;
        
        private System.Threading.SendOrPostCallback onPendingMainTasksParmsCompletedDelegate;
        
        private BeginOperationDelegate onBeginPendingCacheMainTasksParmsDelegate;
        
        private EndOperationDelegate onEndPendingCacheMainTasksParmsDelegate;
        
        private System.Threading.SendOrPostCallback onPendingCacheMainTasksParmsCompletedDelegate;
        
        private BeginOperationDelegate onBeginPendingDetailByIDDelegate;
        
        private EndOperationDelegate onEndPendingDetailByIDDelegate;
        
        private System.Threading.SendOrPostCallback onPendingDetailByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginPendingDetailTasksDelegate;
        
        private EndOperationDelegate onEndPendingDetailTasksDelegate;
        
        private System.Threading.SendOrPostCallback onPendingDetailTasksCompletedDelegate;
        
        private BeginOperationDelegate onBeginPendingDetailTasksByPhoneDelegate;
        
        private EndOperationDelegate onEndPendingDetailTasksByPhoneDelegate;
        
        private System.Threading.SendOrPostCallback onPendingDetailTasksByPhoneCompletedDelegate;
        
        private BeginOperationDelegate onBeginPendingDetailTasksByOrderNodeCodeForMobileDelegate;
        
        private EndOperationDelegate onEndPendingDetailTasksByOrderNodeCodeForMobileDelegate;
        
        private System.Threading.SendOrPostCallback onPendingDetailTasksByOrderNodeCodeForMobileCompletedDelegate;
        
        private BeginOperationDelegate onBeginEngineNotesDelegate;
        
        private EndOperationDelegate onEndEngineNotesDelegate;
        
        private System.Threading.SendOrPostCallback onEngineNotesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelEventTriggerDataDelegate;
        
        private EndOperationDelegate onEndCancelEventTriggerDataDelegate;
        
        private System.Threading.SendOrPostCallback onCancelEventTriggerDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEventDataDelegate;
        
        private EndOperationDelegate onEndSaveEventDataDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEventDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginMsgTriggerDelegate;
        
        private EndOperationDelegate onEndMsgTriggerDelegate;
        
        private System.Threading.SendOrPostCallback onMsgTriggerCompletedDelegate;
        
        private BeginOperationDelegate onBeginNotesSendDelegate;
        
        private EndOperationDelegate onEndNotesSendDelegate;
        
        private System.Threading.SendOrPostCallback onNotesSendCompletedDelegate;
        
        private BeginOperationDelegate onBeginTaskMsgCloseDelegate;
        
        private EndOperationDelegate onEndTaskMsgCloseDelegate;
        
        private System.Threading.SendOrPostCallback onTaskMsgCloseCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDoTaskDelegate;
        
        private EndOperationDelegate onEndCloseDoTaskDelegate;
        
        private System.Threading.SendOrPostCallback onCloseDoTaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginMsgListCloseDelegate;
        
        private EndOperationDelegate onEndMsgListCloseDelegate;
        
        private System.Threading.SendOrPostCallback onMsgListCloseCompletedDelegate;
        
        private BeginOperationDelegate onBeginModelMsgCloseDelegate;
        
        private EndOperationDelegate onEndModelMsgCloseDelegate;
        
        private System.Threading.SendOrPostCallback onModelMsgCloseCompletedDelegate;
        
        private BeginOperationDelegate onBeginClosedDoTaskFromIDDelegate;
        
        private EndOperationDelegate onEndClosedDoTaskFromIDDelegate;
        
        private System.Threading.SendOrPostCallback onClosedDoTaskFromIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginMsgCloseDelegate;
        
        private EndOperationDelegate onEndMsgCloseDelegate;
        
        private System.Threading.SendOrPostCallback onMsgCloseCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplicationMsgTriggerDelegate;
        
        private EndOperationDelegate onEndApplicationMsgTriggerDelegate;
        
        private System.Threading.SendOrPostCallback onApplicationMsgTriggerCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplicationMsgTriggerCustomDelegate;
        
        private EndOperationDelegate onEndApplicationMsgTriggerCustomDelegate;
        
        private System.Threading.SendOrPostCallback onApplicationMsgTriggerCustomCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplicationEngineTriggerDelegate;
        
        private EndOperationDelegate onEndApplicationEngineTriggerDelegate;
        
        private System.Threading.SendOrPostCallback onApplicationEngineTriggerCompletedDelegate;
        
        private BeginOperationDelegate onBeginAppMsgTriggerDelegate;
        
        private EndOperationDelegate onEndAppMsgTriggerDelegate;
        
        private System.Threading.SendOrPostCallback onAppMsgTriggerCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplicationNotesTriggerDelegate;
        
        private EndOperationDelegate onEndApplicationNotesTriggerDelegate;
        
        private System.Threading.SendOrPostCallback onApplicationNotesTriggerCompletedDelegate;
        
        private BeginOperationDelegate onBeginCustomFlowDefineListDelegate;
        
        private EndOperationDelegate onEndCustomFlowDefineListDelegate;
        
        private System.Threading.SendOrPostCallback onCustomFlowDefineListCompletedDelegate;
        
        private BeginOperationDelegate onBeginCallCustomFlowTriggerDelegate;
        
        private EndOperationDelegate onEndCallCustomFlowTriggerDelegate;
        
        private System.Threading.SendOrPostCallback onCallCustomFlowTriggerCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendMailDelegate;
        
        private EndOperationDelegate onEndSendMailDelegate;
        
        private System.Threading.SendOrPostCallback onSendMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendMailParamDelegate;
        
        private EndOperationDelegate onEndSendMailParamDelegate;
        
        private System.Threading.SendOrPostCallback onSendMailParamCompletedDelegate;
        
        private BeginOperationDelegate onBeginFlowCancelDelegate;
        
        private EndOperationDelegate onEndFlowCancelDelegate;
        
        private System.Threading.SendOrPostCallback onFlowCancelCompletedDelegate;
        
        private BeginOperationDelegate onBeginFlowConsultatiDelegate;
        
        private EndOperationDelegate onEndFlowConsultatiDelegate;
        
        private System.Threading.SendOrPostCallback onFlowConsultatiCompletedDelegate;
        
        private BeginOperationDelegate onBeginFlowConsultatiCloseDelegate;
        
        private EndOperationDelegate onEndFlowConsultatiCloseDelegate;
        
        private System.Threading.SendOrPostCallback onFlowConsultatiCloseCompletedDelegate;
        
        private BeginOperationDelegate onBeginTaskDeleteDelegate;
        
        private EndOperationDelegate onEndTaskDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onTaskDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginTaskDeleteALLDelegate;
        
        private EndOperationDelegate onEndTaskDeleteALLDelegate;
        
        private System.Threading.SendOrPostCallback onTaskDeleteALLCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendTaskMessageDelegate;
        
        private EndOperationDelegate onEndSendTaskMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendTaskMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginWFAddTimingTriggerDelegate;
        
        private EndOperationDelegate onEndWFAddTimingTriggerDelegate;
        
        private System.Threading.SendOrPostCallback onWFAddTimingTriggerCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public EngineWcfGlobalFunctionClient() {
        }
        
        public EngineWcfGlobalFunctionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EngineWcfGlobalFunctionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EngineWcfGlobalFunctionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EngineWcfGlobalFunctionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<AddTaskCompletedEventArgs> AddTaskCompleted;
        
        public event System.EventHandler<GetDoTaskEntityCompletedEventArgs> GetDoTaskEntityCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteTriggerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddDoDaskCompleted;
        
        public event System.EventHandler<ReturnUserInfoDaskCompletedEventArgs> ReturnUserInfoDaskCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ApplicationMsgTriggerNewCompleted;
        
        public event System.EventHandler<GetDoTaskNumberCompletedEventArgs> GetDoTaskNumberCompleted;
        
        public event System.EventHandler<GetDoTaskNumberByIMCompletedEventArgs> GetDoTaskNumberByIMCompleted;
        
        public event System.EventHandler<GetForwardHistoryCompletedEventArgs> GetForwardHistoryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TaskCacheRefleshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CacheRefleshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveCachUserCompleted;
        
        public event System.EventHandler<RemoveCacheCompletedEventArgs> RemoveCacheCompleted;
        
        public event System.EventHandler<SaveFlowTriggerDataCompletedEventArgs> SaveFlowTriggerDataCompleted;
        
        public event System.EventHandler<PendingTasksParmsPageIndexCompletedEventArgs> PendingTasksParmsPageIndexCompleted;
        
        public event System.EventHandler<PendingTasksParmsPageIndexForMobileCompletedEventArgs> PendingTasksParmsPageIndexForMobileCompleted;
        
        public event System.EventHandler<GetPendingTaskPrevNextCompletedEventArgs> GetPendingTaskPrevNextCompleted;
        
        public event System.EventHandler<PendingCacheTasksParmsPageIndexCompletedEventArgs> PendingCacheTasksParmsPageIndexCompleted;
        
        public event System.EventHandler<PendingMainTasksParmsCompletedEventArgs> PendingMainTasksParmsCompleted;
        
        public event System.EventHandler<PendingCacheMainTasksParmsCompletedEventArgs> PendingCacheMainTasksParmsCompleted;
        
        public event System.EventHandler<PendingDetailByIDCompletedEventArgs> PendingDetailByIDCompleted;
        
        public event System.EventHandler<PendingDetailTasksCompletedEventArgs> PendingDetailTasksCompleted;
        
        public event System.EventHandler<PendingDetailTasksByPhoneCompletedEventArgs> PendingDetailTasksByPhoneCompleted;
        
        public event System.EventHandler<PendingDetailTasksByOrderNodeCodeForMobileCompletedEventArgs> PendingDetailTasksByOrderNodeCodeForMobileCompleted;
        
        public event System.EventHandler<EngineNotesCompletedEventArgs> EngineNotesCompleted;
        
        public event System.EventHandler<CancelEventTriggerDataCompletedEventArgs> CancelEventTriggerDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveEventDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MsgTriggerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> NotesSendCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TaskMsgCloseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseDoTaskCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MsgListCloseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ModelMsgCloseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ClosedDoTaskFromIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MsgCloseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ApplicationMsgTriggerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ApplicationMsgTriggerCustomCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ApplicationEngineTriggerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AppMsgTriggerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ApplicationNotesTriggerCompleted;
        
        public event System.EventHandler<CustomFlowDefineListCompletedEventArgs> CustomFlowDefineListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CallCustomFlowTriggerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendMailCompleted;
        
        public event System.EventHandler<SendMailParamCompletedEventArgs> SendMailParamCompleted;
        
        public event System.EventHandler<FlowCancelCompletedEventArgs> FlowCancelCompleted;
        
        public event System.EventHandler<FlowConsultatiCompletedEventArgs> FlowConsultatiCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> FlowConsultatiCloseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TaskDeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TaskDeleteALLCompleted;
        
        public event System.EventHandler<SendTaskMessageCompletedEventArgs> SendTaskMessageCompleted;
        
        public event System.EventHandler<WFAddTimingTriggerCompletedEventArgs> WFAddTimingTriggerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginAddTask(SMT.Saas.Tools.EngineWS.T_WF_DOTASK dask, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddTask(dask, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndAddTask(System.IAsyncResult result) {
            return base.Channel.EndAddTask(result);
        }
        
        private System.IAsyncResult OnBeginAddTask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.EngineWS.T_WF_DOTASK dask = ((SMT.Saas.Tools.EngineWS.T_WF_DOTASK)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginAddTask(dask, callback, asyncState);
        }
        
        private object[] OnEndAddTask(System.IAsyncResult result) {
            string retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndAddTask(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddTaskCompleted(object state) {
            if ((this.AddTaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddTaskCompleted(this, new AddTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddTaskAsync(SMT.Saas.Tools.EngineWS.T_WF_DOTASK dask) {
            this.AddTaskAsync(dask, null);
        }
        
        public void AddTaskAsync(SMT.Saas.Tools.EngineWS.T_WF_DOTASK dask, object userState) {
            if ((this.onBeginAddTaskDelegate == null)) {
                this.onBeginAddTaskDelegate = new BeginOperationDelegate(this.OnBeginAddTask);
            }
            if ((this.onEndAddTaskDelegate == null)) {
                this.onEndAddTaskDelegate = new EndOperationDelegate(this.OnEndAddTask);
            }
            if ((this.onAddTaskCompletedDelegate == null)) {
                this.onAddTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddTaskCompleted);
            }
            base.InvokeAsync(this.onBeginAddTaskDelegate, new object[] {
                        dask}, this.onEndAddTaskDelegate, this.onAddTaskCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginGetDoTaskEntity(string orderID, string receiveUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDoTaskEntity(orderID, receiveUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.EngineWS.T_WF_DOTASK SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndGetDoTaskEntity(System.IAsyncResult result) {
            return base.Channel.EndGetDoTaskEntity(result);
        }
        
        private System.IAsyncResult OnBeginGetDoTaskEntity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string orderID = ((string)(inValues[0]));
            string receiveUserID = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginGetDoTaskEntity(orderID, receiveUserID, callback, asyncState);
        }
        
        private object[] OnEndGetDoTaskEntity(System.IAsyncResult result) {
            SMT.Saas.Tools.EngineWS.T_WF_DOTASK retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndGetDoTaskEntity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDoTaskEntityCompleted(object state) {
            if ((this.GetDoTaskEntityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDoTaskEntityCompleted(this, new GetDoTaskEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDoTaskEntityAsync(string orderID, string receiveUserID) {
            this.GetDoTaskEntityAsync(orderID, receiveUserID, null);
        }
        
        public void GetDoTaskEntityAsync(string orderID, string receiveUserID, object userState) {
            if ((this.onBeginGetDoTaskEntityDelegate == null)) {
                this.onBeginGetDoTaskEntityDelegate = new BeginOperationDelegate(this.OnBeginGetDoTaskEntity);
            }
            if ((this.onEndGetDoTaskEntityDelegate == null)) {
                this.onEndGetDoTaskEntityDelegate = new EndOperationDelegate(this.OnEndGetDoTaskEntity);
            }
            if ((this.onGetDoTaskEntityCompletedDelegate == null)) {
                this.onGetDoTaskEntityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDoTaskEntityCompleted);
            }
            base.InvokeAsync(this.onBeginGetDoTaskEntityDelegate, new object[] {
                        orderID,
                        receiveUserID}, this.onEndGetDoTaskEntityDelegate, this.onGetDoTaskEntityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginDeleteTrigger(string orderID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTrigger(orderID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndDeleteTrigger(System.IAsyncResult result) {
            base.Channel.EndDeleteTrigger(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTrigger(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string orderID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginDeleteTrigger(orderID, callback, asyncState);
        }
        
        private object[] OnEndDeleteTrigger(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndDeleteTrigger(result);
            return null;
        }
        
        private void OnDeleteTriggerCompleted(object state) {
            if ((this.DeleteTriggerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTriggerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTriggerAsync(string orderID) {
            this.DeleteTriggerAsync(orderID, null);
        }
        
        public void DeleteTriggerAsync(string orderID, object userState) {
            if ((this.onBeginDeleteTriggerDelegate == null)) {
                this.onBeginDeleteTriggerDelegate = new BeginOperationDelegate(this.OnBeginDeleteTrigger);
            }
            if ((this.onEndDeleteTriggerDelegate == null)) {
                this.onEndDeleteTriggerDelegate = new EndOperationDelegate(this.OnEndDeleteTrigger);
            }
            if ((this.onDeleteTriggerCompletedDelegate == null)) {
                this.onDeleteTriggerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTriggerCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTriggerDelegate, new object[] {
                        orderID}, this.onEndDeleteTriggerDelegate, this.onDeleteTriggerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginAddDoDask(string companyID, string orderID, string systemCode, string modelCode, string modelName, string strXML, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddDoDask(companyID, orderID, systemCode, modelCode, modelName, strXML, msgType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndAddDoDask(System.IAsyncResult result) {
            base.Channel.EndAddDoDask(result);
        }
        
        private System.IAsyncResult OnBeginAddDoDask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string companyID = ((string)(inValues[0]));
            string orderID = ((string)(inValues[1]));
            string systemCode = ((string)(inValues[2]));
            string modelCode = ((string)(inValues[3]));
            string modelName = ((string)(inValues[4]));
            string strXML = ((string)(inValues[5]));
            SMT.Saas.Tools.EngineWS.MsgType msgType = ((SMT.Saas.Tools.EngineWS.MsgType)(inValues[6]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginAddDoDask(companyID, orderID, systemCode, modelCode, modelName, strXML, msgType, callback, asyncState);
        }
        
        private object[] OnEndAddDoDask(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndAddDoDask(result);
            return null;
        }
        
        private void OnAddDoDaskCompleted(object state) {
            if ((this.AddDoDaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddDoDaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddDoDaskAsync(string companyID, string orderID, string systemCode, string modelCode, string modelName, string strXML, SMT.Saas.Tools.EngineWS.MsgType msgType) {
            this.AddDoDaskAsync(companyID, orderID, systemCode, modelCode, modelName, strXML, msgType, null);
        }
        
        public void AddDoDaskAsync(string companyID, string orderID, string systemCode, string modelCode, string modelName, string strXML, SMT.Saas.Tools.EngineWS.MsgType msgType, object userState) {
            if ((this.onBeginAddDoDaskDelegate == null)) {
                this.onBeginAddDoDaskDelegate = new BeginOperationDelegate(this.OnBeginAddDoDask);
            }
            if ((this.onEndAddDoDaskDelegate == null)) {
                this.onEndAddDoDaskDelegate = new EndOperationDelegate(this.OnEndAddDoDask);
            }
            if ((this.onAddDoDaskCompletedDelegate == null)) {
                this.onAddDoDaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddDoDaskCompleted);
            }
            base.InvokeAsync(this.onBeginAddDoDaskDelegate, new object[] {
                        companyID,
                        orderID,
                        systemCode,
                        modelCode,
                        modelName,
                        strXML,
                        msgType}, this.onEndAddDoDaskDelegate, this.onAddDoDaskCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginReturnUserInfoDask(string companyID, string orderID, string systemCode, string modelCode, string modelName, string strXML, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnUserInfoDask(companyID, orderID, systemCode, modelCode, modelName, strXML, msgType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.UserInfo> SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndReturnUserInfoDask(System.IAsyncResult result) {
            return base.Channel.EndReturnUserInfoDask(result);
        }
        
        private System.IAsyncResult OnBeginReturnUserInfoDask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string companyID = ((string)(inValues[0]));
            string orderID = ((string)(inValues[1]));
            string systemCode = ((string)(inValues[2]));
            string modelCode = ((string)(inValues[3]));
            string modelName = ((string)(inValues[4]));
            string strXML = ((string)(inValues[5]));
            SMT.Saas.Tools.EngineWS.MsgType msgType = ((SMT.Saas.Tools.EngineWS.MsgType)(inValues[6]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginReturnUserInfoDask(companyID, orderID, systemCode, modelCode, modelName, strXML, msgType, callback, asyncState);
        }
        
        private object[] OnEndReturnUserInfoDask(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.UserInfo> retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndReturnUserInfoDask(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnUserInfoDaskCompleted(object state) {
            if ((this.ReturnUserInfoDaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnUserInfoDaskCompleted(this, new ReturnUserInfoDaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnUserInfoDaskAsync(string companyID, string orderID, string systemCode, string modelCode, string modelName, string strXML, SMT.Saas.Tools.EngineWS.MsgType msgType) {
            this.ReturnUserInfoDaskAsync(companyID, orderID, systemCode, modelCode, modelName, strXML, msgType, null);
        }
        
        public void ReturnUserInfoDaskAsync(string companyID, string orderID, string systemCode, string modelCode, string modelName, string strXML, SMT.Saas.Tools.EngineWS.MsgType msgType, object userState) {
            if ((this.onBeginReturnUserInfoDaskDelegate == null)) {
                this.onBeginReturnUserInfoDaskDelegate = new BeginOperationDelegate(this.OnBeginReturnUserInfoDask);
            }
            if ((this.onEndReturnUserInfoDaskDelegate == null)) {
                this.onEndReturnUserInfoDaskDelegate = new EndOperationDelegate(this.OnEndReturnUserInfoDask);
            }
            if ((this.onReturnUserInfoDaskCompletedDelegate == null)) {
                this.onReturnUserInfoDaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnUserInfoDaskCompleted);
            }
            base.InvokeAsync(this.onBeginReturnUserInfoDaskDelegate, new object[] {
                        companyID,
                        orderID,
                        systemCode,
                        modelCode,
                        modelName,
                        strXML,
                        msgType}, this.onEndReturnUserInfoDaskDelegate, this.onReturnUserInfoDaskCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginApplicationMsgTriggerNew(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string companyID, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplicationMsgTriggerNew(UserAndForm, companyID, SystemCode, ModelCode, strXml, msgType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndApplicationMsgTriggerNew(System.IAsyncResult result) {
            base.Channel.EndApplicationMsgTriggerNew(result);
        }
        
        private System.IAsyncResult OnBeginApplicationMsgTriggerNew(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg>)(inValues[0]));
            string companyID = ((string)(inValues[1]));
            string SystemCode = ((string)(inValues[2]));
            string ModelCode = ((string)(inValues[3]));
            string strXml = ((string)(inValues[4]));
            SMT.Saas.Tools.EngineWS.MsgType msgType = ((SMT.Saas.Tools.EngineWS.MsgType)(inValues[5]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginApplicationMsgTriggerNew(UserAndForm, companyID, SystemCode, ModelCode, strXml, msgType, callback, asyncState);
        }
        
        private object[] OnEndApplicationMsgTriggerNew(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndApplicationMsgTriggerNew(result);
            return null;
        }
        
        private void OnApplicationMsgTriggerNewCompleted(object state) {
            if ((this.ApplicationMsgTriggerNewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplicationMsgTriggerNewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplicationMsgTriggerNewAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string companyID, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType) {
            this.ApplicationMsgTriggerNewAsync(UserAndForm, companyID, SystemCode, ModelCode, strXml, msgType, null);
        }
        
        public void ApplicationMsgTriggerNewAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string companyID, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, object userState) {
            if ((this.onBeginApplicationMsgTriggerNewDelegate == null)) {
                this.onBeginApplicationMsgTriggerNewDelegate = new BeginOperationDelegate(this.OnBeginApplicationMsgTriggerNew);
            }
            if ((this.onEndApplicationMsgTriggerNewDelegate == null)) {
                this.onEndApplicationMsgTriggerNewDelegate = new EndOperationDelegate(this.OnEndApplicationMsgTriggerNew);
            }
            if ((this.onApplicationMsgTriggerNewCompletedDelegate == null)) {
                this.onApplicationMsgTriggerNewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplicationMsgTriggerNewCompleted);
            }
            base.InvokeAsync(this.onBeginApplicationMsgTriggerNewDelegate, new object[] {
                        UserAndForm,
                        companyID,
                        SystemCode,
                        ModelCode,
                        strXml,
                        msgType}, this.onEndApplicationMsgTriggerNewDelegate, this.onApplicationMsgTriggerNewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginGetDoTaskNumber(string userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDoTaskNumber(userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndGetDoTaskNumber(System.IAsyncResult result) {
            return base.Channel.EndGetDoTaskNumber(result);
        }
        
        private System.IAsyncResult OnBeginGetDoTaskNumber(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginGetDoTaskNumber(userid, callback, asyncState);
        }
        
        private object[] OnEndGetDoTaskNumber(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndGetDoTaskNumber(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDoTaskNumberCompleted(object state) {
            if ((this.GetDoTaskNumberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDoTaskNumberCompleted(this, new GetDoTaskNumberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDoTaskNumberAsync(string userid) {
            this.GetDoTaskNumberAsync(userid, null);
        }
        
        public void GetDoTaskNumberAsync(string userid, object userState) {
            if ((this.onBeginGetDoTaskNumberDelegate == null)) {
                this.onBeginGetDoTaskNumberDelegate = new BeginOperationDelegate(this.OnBeginGetDoTaskNumber);
            }
            if ((this.onEndGetDoTaskNumberDelegate == null)) {
                this.onEndGetDoTaskNumberDelegate = new EndOperationDelegate(this.OnEndGetDoTaskNumber);
            }
            if ((this.onGetDoTaskNumberCompletedDelegate == null)) {
                this.onGetDoTaskNumberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDoTaskNumberCompleted);
            }
            base.InvokeAsync(this.onBeginGetDoTaskNumberDelegate, new object[] {
                        userid}, this.onEndGetDoTaskNumberDelegate, this.onGetDoTaskNumberCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginGetDoTaskNumberByIM(string userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDoTaskNumberByIM(userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndGetDoTaskNumberByIM(System.IAsyncResult result) {
            return base.Channel.EndGetDoTaskNumberByIM(result);
        }
        
        private System.IAsyncResult OnBeginGetDoTaskNumberByIM(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginGetDoTaskNumberByIM(userid, callback, asyncState);
        }
        
        private object[] OnEndGetDoTaskNumberByIM(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndGetDoTaskNumberByIM(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDoTaskNumberByIMCompleted(object state) {
            if ((this.GetDoTaskNumberByIMCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDoTaskNumberByIMCompleted(this, new GetDoTaskNumberByIMCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDoTaskNumberByIMAsync(string userid) {
            this.GetDoTaskNumberByIMAsync(userid, null);
        }
        
        public void GetDoTaskNumberByIMAsync(string userid, object userState) {
            if ((this.onBeginGetDoTaskNumberByIMDelegate == null)) {
                this.onBeginGetDoTaskNumberByIMDelegate = new BeginOperationDelegate(this.OnBeginGetDoTaskNumberByIM);
            }
            if ((this.onEndGetDoTaskNumberByIMDelegate == null)) {
                this.onEndGetDoTaskNumberByIMDelegate = new EndOperationDelegate(this.OnEndGetDoTaskNumberByIM);
            }
            if ((this.onGetDoTaskNumberByIMCompletedDelegate == null)) {
                this.onGetDoTaskNumberByIMCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDoTaskNumberByIMCompleted);
            }
            base.InvokeAsync(this.onBeginGetDoTaskNumberByIMDelegate, new object[] {
                        userid}, this.onEndGetDoTaskNumberByIMDelegate, this.onGetDoTaskNumberByIMCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginGetForwardHistory(string modelCode, string formID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetForwardHistory(modelCode, formID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_WF_FORWARDHISTORY> SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndGetForwardHistory(System.IAsyncResult result) {
            return base.Channel.EndGetForwardHistory(result);
        }
        
        private System.IAsyncResult OnBeginGetForwardHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string modelCode = ((string)(inValues[0]));
            string formID = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginGetForwardHistory(modelCode, formID, callback, asyncState);
        }
        
        private object[] OnEndGetForwardHistory(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_WF_FORWARDHISTORY> retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndGetForwardHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetForwardHistoryCompleted(object state) {
            if ((this.GetForwardHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetForwardHistoryCompleted(this, new GetForwardHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetForwardHistoryAsync(string modelCode, string formID) {
            this.GetForwardHistoryAsync(modelCode, formID, null);
        }
        
        public void GetForwardHistoryAsync(string modelCode, string formID, object userState) {
            if ((this.onBeginGetForwardHistoryDelegate == null)) {
                this.onBeginGetForwardHistoryDelegate = new BeginOperationDelegate(this.OnBeginGetForwardHistory);
            }
            if ((this.onEndGetForwardHistoryDelegate == null)) {
                this.onEndGetForwardHistoryDelegate = new EndOperationDelegate(this.OnEndGetForwardHistory);
            }
            if ((this.onGetForwardHistoryCompletedDelegate == null)) {
                this.onGetForwardHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetForwardHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetForwardHistoryDelegate, new object[] {
                        modelCode,
                        formID}, this.onEndGetForwardHistoryDelegate, this.onGetForwardHistoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginTaskCacheReflesh(string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTaskCacheReflesh(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndTaskCacheReflesh(System.IAsyncResult result) {
            base.Channel.EndTaskCacheReflesh(result);
        }
        
        private System.IAsyncResult OnBeginTaskCacheReflesh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginTaskCacheReflesh(userID, callback, asyncState);
        }
        
        private object[] OnEndTaskCacheReflesh(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndTaskCacheReflesh(result);
            return null;
        }
        
        private void OnTaskCacheRefleshCompleted(object state) {
            if ((this.TaskCacheRefleshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TaskCacheRefleshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TaskCacheRefleshAsync(string userID) {
            this.TaskCacheRefleshAsync(userID, null);
        }
        
        public void TaskCacheRefleshAsync(string userID, object userState) {
            if ((this.onBeginTaskCacheRefleshDelegate == null)) {
                this.onBeginTaskCacheRefleshDelegate = new BeginOperationDelegate(this.OnBeginTaskCacheReflesh);
            }
            if ((this.onEndTaskCacheRefleshDelegate == null)) {
                this.onEndTaskCacheRefleshDelegate = new EndOperationDelegate(this.OnEndTaskCacheReflesh);
            }
            if ((this.onTaskCacheRefleshCompletedDelegate == null)) {
                this.onTaskCacheRefleshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTaskCacheRefleshCompleted);
            }
            base.InvokeAsync(this.onBeginTaskCacheRefleshDelegate, new object[] {
                        userID}, this.onEndTaskCacheRefleshDelegate, this.onTaskCacheRefleshCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginCacheReflesh(string userID, bool isHasNewBill, bool isHasNewTask, string remark, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCacheReflesh(userID, isHasNewBill, isHasNewTask, remark, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndCacheReflesh(System.IAsyncResult result) {
            base.Channel.EndCacheReflesh(result);
        }
        
        private System.IAsyncResult OnBeginCacheReflesh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            bool isHasNewBill = ((bool)(inValues[1]));
            bool isHasNewTask = ((bool)(inValues[2]));
            string remark = ((string)(inValues[3]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginCacheReflesh(userID, isHasNewBill, isHasNewTask, remark, callback, asyncState);
        }
        
        private object[] OnEndCacheReflesh(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndCacheReflesh(result);
            return null;
        }
        
        private void OnCacheRefleshCompleted(object state) {
            if ((this.CacheRefleshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CacheRefleshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CacheRefleshAsync(string userID, bool isHasNewBill, bool isHasNewTask, string remark) {
            this.CacheRefleshAsync(userID, isHasNewBill, isHasNewTask, remark, null);
        }
        
        public void CacheRefleshAsync(string userID, bool isHasNewBill, bool isHasNewTask, string remark, object userState) {
            if ((this.onBeginCacheRefleshDelegate == null)) {
                this.onBeginCacheRefleshDelegate = new BeginOperationDelegate(this.OnBeginCacheReflesh);
            }
            if ((this.onEndCacheRefleshDelegate == null)) {
                this.onEndCacheRefleshDelegate = new EndOperationDelegate(this.OnEndCacheReflesh);
            }
            if ((this.onCacheRefleshCompletedDelegate == null)) {
                this.onCacheRefleshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCacheRefleshCompleted);
            }
            base.InvokeAsync(this.onBeginCacheRefleshDelegate, new object[] {
                        userID,
                        isHasNewBill,
                        isHasNewTask,
                        remark}, this.onEndCacheRefleshDelegate, this.onCacheRefleshCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginRemoveCachUser(string userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveCachUser(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndRemoveCachUser(System.IAsyncResult result) {
            base.Channel.EndRemoveCachUser(result);
        }
        
        private System.IAsyncResult OnBeginRemoveCachUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginRemoveCachUser(userId, callback, asyncState);
        }
        
        private object[] OnEndRemoveCachUser(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndRemoveCachUser(result);
            return null;
        }
        
        private void OnRemoveCachUserCompleted(object state) {
            if ((this.RemoveCachUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveCachUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveCachUserAsync(string userId) {
            this.RemoveCachUserAsync(userId, null);
        }
        
        public void RemoveCachUserAsync(string userId, object userState) {
            if ((this.onBeginRemoveCachUserDelegate == null)) {
                this.onBeginRemoveCachUserDelegate = new BeginOperationDelegate(this.OnBeginRemoveCachUser);
            }
            if ((this.onEndRemoveCachUserDelegate == null)) {
                this.onEndRemoveCachUserDelegate = new EndOperationDelegate(this.OnEndRemoveCachUser);
            }
            if ((this.onRemoveCachUserCompletedDelegate == null)) {
                this.onRemoveCachUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveCachUserCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveCachUserDelegate, new object[] {
                        userId}, this.onEndRemoveCachUserDelegate, this.onRemoveCachUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginRemoveCache(string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveCache(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndRemoveCache(System.IAsyncResult result) {
            return base.Channel.EndRemoveCache(result);
        }
        
        private System.IAsyncResult OnBeginRemoveCache(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginRemoveCache(userID, callback, asyncState);
        }
        
        private object[] OnEndRemoveCache(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndRemoveCache(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveCacheCompleted(object state) {
            if ((this.RemoveCacheCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveCacheCompleted(this, new RemoveCacheCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveCacheAsync(string userID) {
            this.RemoveCacheAsync(userID, null);
        }
        
        public void RemoveCacheAsync(string userID, object userState) {
            if ((this.onBeginRemoveCacheDelegate == null)) {
                this.onBeginRemoveCacheDelegate = new BeginOperationDelegate(this.OnBeginRemoveCache);
            }
            if ((this.onEndRemoveCacheDelegate == null)) {
                this.onEndRemoveCacheDelegate = new EndOperationDelegate(this.OnEndRemoveCache);
            }
            if ((this.onRemoveCacheCompletedDelegate == null)) {
                this.onRemoveCacheCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveCacheCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveCacheDelegate, new object[] {
                        userID}, this.onEndRemoveCacheDelegate, this.onRemoveCacheCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginSaveFlowTriggerData(string strFlowMessage, string strBOObject, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveFlowTriggerData(strFlowMessage, strBOObject, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndSaveFlowTriggerData(System.IAsyncResult result) {
            return base.Channel.EndSaveFlowTriggerData(result);
        }
        
        private System.IAsyncResult OnBeginSaveFlowTriggerData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strFlowMessage = ((string)(inValues[0]));
            string strBOObject = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginSaveFlowTriggerData(strFlowMessage, strBOObject, callback, asyncState);
        }
        
        private object[] OnEndSaveFlowTriggerData(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndSaveFlowTriggerData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveFlowTriggerDataCompleted(object state) {
            if ((this.SaveFlowTriggerDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveFlowTriggerDataCompleted(this, new SaveFlowTriggerDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveFlowTriggerDataAsync(string strFlowMessage, string strBOObject) {
            this.SaveFlowTriggerDataAsync(strFlowMessage, strBOObject, null);
        }
        
        public void SaveFlowTriggerDataAsync(string strFlowMessage, string strBOObject, object userState) {
            if ((this.onBeginSaveFlowTriggerDataDelegate == null)) {
                this.onBeginSaveFlowTriggerDataDelegate = new BeginOperationDelegate(this.OnBeginSaveFlowTriggerData);
            }
            if ((this.onEndSaveFlowTriggerDataDelegate == null)) {
                this.onEndSaveFlowTriggerDataDelegate = new EndOperationDelegate(this.OnEndSaveFlowTriggerData);
            }
            if ((this.onSaveFlowTriggerDataCompletedDelegate == null)) {
                this.onSaveFlowTriggerDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveFlowTriggerDataCompleted);
            }
            base.InvokeAsync(this.onBeginSaveFlowTriggerDataDelegate, new object[] {
                        strFlowMessage,
                        strBOObject}, this.onEndSaveFlowTriggerDataDelegate, this.onSaveFlowTriggerDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginPendingTasksParmsPageIndex(SMT.Saas.Tools.EngineWS.MsgParms msgParams, ref int rowCount, ref int pageCount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPendingTasksParmsPageIndex(msgParams, ref rowCount, ref pageCount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndPendingTasksParmsPageIndex(ref int rowCount, ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndPendingTasksParmsPageIndex(ref rowCount, ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginPendingTasksParmsPageIndex(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.EngineWS.MsgParms msgParams = ((SMT.Saas.Tools.EngineWS.MsgParms)(inValues[0]));
            int rowCount = ((int)(inValues[1]));
            int pageCount = ((int)(inValues[2]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginPendingTasksParmsPageIndex(msgParams, ref rowCount, ref pageCount, callback, asyncState);
        }
        
        private object[] OnEndPendingTasksParmsPageIndex(System.IAsyncResult result) {
            int rowCount = this.GetDefaultValueForInitialization<int>();
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndPendingTasksParmsPageIndex(ref rowCount, ref pageCount, result);
            return new object[] {
                    rowCount,
                    pageCount,
                    retVal};
        }
        
        private void OnPendingTasksParmsPageIndexCompleted(object state) {
            if ((this.PendingTasksParmsPageIndexCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PendingTasksParmsPageIndexCompleted(this, new PendingTasksParmsPageIndexCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PendingTasksParmsPageIndexAsync(SMT.Saas.Tools.EngineWS.MsgParms msgParams, int rowCount, int pageCount) {
            this.PendingTasksParmsPageIndexAsync(msgParams, rowCount, pageCount, null);
        }
        
        public void PendingTasksParmsPageIndexAsync(SMT.Saas.Tools.EngineWS.MsgParms msgParams, int rowCount, int pageCount, object userState) {
            if ((this.onBeginPendingTasksParmsPageIndexDelegate == null)) {
                this.onBeginPendingTasksParmsPageIndexDelegate = new BeginOperationDelegate(this.OnBeginPendingTasksParmsPageIndex);
            }
            if ((this.onEndPendingTasksParmsPageIndexDelegate == null)) {
                this.onEndPendingTasksParmsPageIndexDelegate = new EndOperationDelegate(this.OnEndPendingTasksParmsPageIndex);
            }
            if ((this.onPendingTasksParmsPageIndexCompletedDelegate == null)) {
                this.onPendingTasksParmsPageIndexCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPendingTasksParmsPageIndexCompleted);
            }
            base.InvokeAsync(this.onBeginPendingTasksParmsPageIndexDelegate, new object[] {
                        msgParams,
                        rowCount,
                        pageCount}, this.onEndPendingTasksParmsPageIndexDelegate, this.onPendingTasksParmsPageIndexCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginPendingTasksParmsPageIndexForMobile(SMT.Saas.Tools.EngineWS.MsgParms msgParams, ref int rowCount, ref int pageCount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPendingTasksParmsPageIndexForMobile(msgParams, ref rowCount, ref pageCount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndPendingTasksParmsPageIndexForMobile(ref int rowCount, ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndPendingTasksParmsPageIndexForMobile(ref rowCount, ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginPendingTasksParmsPageIndexForMobile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.EngineWS.MsgParms msgParams = ((SMT.Saas.Tools.EngineWS.MsgParms)(inValues[0]));
            int rowCount = ((int)(inValues[1]));
            int pageCount = ((int)(inValues[2]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginPendingTasksParmsPageIndexForMobile(msgParams, ref rowCount, ref pageCount, callback, asyncState);
        }
        
        private object[] OnEndPendingTasksParmsPageIndexForMobile(System.IAsyncResult result) {
            int rowCount = this.GetDefaultValueForInitialization<int>();
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndPendingTasksParmsPageIndexForMobile(ref rowCount, ref pageCount, result);
            return new object[] {
                    rowCount,
                    pageCount,
                    retVal};
        }
        
        private void OnPendingTasksParmsPageIndexForMobileCompleted(object state) {
            if ((this.PendingTasksParmsPageIndexForMobileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PendingTasksParmsPageIndexForMobileCompleted(this, new PendingTasksParmsPageIndexForMobileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PendingTasksParmsPageIndexForMobileAsync(SMT.Saas.Tools.EngineWS.MsgParms msgParams, int rowCount, int pageCount) {
            this.PendingTasksParmsPageIndexForMobileAsync(msgParams, rowCount, pageCount, null);
        }
        
        public void PendingTasksParmsPageIndexForMobileAsync(SMT.Saas.Tools.EngineWS.MsgParms msgParams, int rowCount, int pageCount, object userState) {
            if ((this.onBeginPendingTasksParmsPageIndexForMobileDelegate == null)) {
                this.onBeginPendingTasksParmsPageIndexForMobileDelegate = new BeginOperationDelegate(this.OnBeginPendingTasksParmsPageIndexForMobile);
            }
            if ((this.onEndPendingTasksParmsPageIndexForMobileDelegate == null)) {
                this.onEndPendingTasksParmsPageIndexForMobileDelegate = new EndOperationDelegate(this.OnEndPendingTasksParmsPageIndexForMobile);
            }
            if ((this.onPendingTasksParmsPageIndexForMobileCompletedDelegate == null)) {
                this.onPendingTasksParmsPageIndexForMobileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPendingTasksParmsPageIndexForMobileCompleted);
            }
            base.InvokeAsync(this.onBeginPendingTasksParmsPageIndexForMobileDelegate, new object[] {
                        msgParams,
                        rowCount,
                        pageCount}, this.onEndPendingTasksParmsPageIndexForMobileDelegate, this.onPendingTasksParmsPageIndexForMobileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginGetPendingTaskPrevNext(SMT.Saas.Tools.EngineWS.MsgParms msgParms, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPendingTaskPrevNext(msgParms, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndGetPendingTaskPrevNext(System.IAsyncResult result) {
            return base.Channel.EndGetPendingTaskPrevNext(result);
        }
        
        private System.IAsyncResult OnBeginGetPendingTaskPrevNext(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.EngineWS.MsgParms msgParms = ((SMT.Saas.Tools.EngineWS.MsgParms)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginGetPendingTaskPrevNext(msgParms, callback, asyncState);
        }
        
        private object[] OnEndGetPendingTaskPrevNext(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndGetPendingTaskPrevNext(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPendingTaskPrevNextCompleted(object state) {
            if ((this.GetPendingTaskPrevNextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPendingTaskPrevNextCompleted(this, new GetPendingTaskPrevNextCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPendingTaskPrevNextAsync(SMT.Saas.Tools.EngineWS.MsgParms msgParms) {
            this.GetPendingTaskPrevNextAsync(msgParms, null);
        }
        
        public void GetPendingTaskPrevNextAsync(SMT.Saas.Tools.EngineWS.MsgParms msgParms, object userState) {
            if ((this.onBeginGetPendingTaskPrevNextDelegate == null)) {
                this.onBeginGetPendingTaskPrevNextDelegate = new BeginOperationDelegate(this.OnBeginGetPendingTaskPrevNext);
            }
            if ((this.onEndGetPendingTaskPrevNextDelegate == null)) {
                this.onEndGetPendingTaskPrevNextDelegate = new EndOperationDelegate(this.OnEndGetPendingTaskPrevNext);
            }
            if ((this.onGetPendingTaskPrevNextCompletedDelegate == null)) {
                this.onGetPendingTaskPrevNextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPendingTaskPrevNextCompleted);
            }
            base.InvokeAsync(this.onBeginGetPendingTaskPrevNextDelegate, new object[] {
                        msgParms}, this.onEndGetPendingTaskPrevNextDelegate, this.onGetPendingTaskPrevNextCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginPendingCacheTasksParmsPageIndex(SMT.Saas.Tools.EngineWS.MsgParms msgParams, ref bool IsAutofresh, ref bool HaveNewTask, ref int rowCount, ref int pageCount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPendingCacheTasksParmsPageIndex(msgParams, ref IsAutofresh, ref HaveNewTask, ref rowCount, ref pageCount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndPendingCacheTasksParmsPageIndex(ref bool IsAutofresh, ref bool HaveNewTask, ref int rowCount, ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndPendingCacheTasksParmsPageIndex(ref IsAutofresh, ref HaveNewTask, ref rowCount, ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginPendingCacheTasksParmsPageIndex(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.EngineWS.MsgParms msgParams = ((SMT.Saas.Tools.EngineWS.MsgParms)(inValues[0]));
            bool IsAutofresh = ((bool)(inValues[1]));
            bool HaveNewTask = ((bool)(inValues[2]));
            int rowCount = ((int)(inValues[3]));
            int pageCount = ((int)(inValues[4]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginPendingCacheTasksParmsPageIndex(msgParams, ref IsAutofresh, ref HaveNewTask, ref rowCount, ref pageCount, callback, asyncState);
        }
        
        private object[] OnEndPendingCacheTasksParmsPageIndex(System.IAsyncResult result) {
            bool IsAutofresh = this.GetDefaultValueForInitialization<bool>();
            bool HaveNewTask = this.GetDefaultValueForInitialization<bool>();
            int rowCount = this.GetDefaultValueForInitialization<int>();
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndPendingCacheTasksParmsPageIndex(ref IsAutofresh, ref HaveNewTask, ref rowCount, ref pageCount, result);
            return new object[] {
                    IsAutofresh,
                    HaveNewTask,
                    rowCount,
                    pageCount,
                    retVal};
        }
        
        private void OnPendingCacheTasksParmsPageIndexCompleted(object state) {
            if ((this.PendingCacheTasksParmsPageIndexCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PendingCacheTasksParmsPageIndexCompleted(this, new PendingCacheTasksParmsPageIndexCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PendingCacheTasksParmsPageIndexAsync(SMT.Saas.Tools.EngineWS.MsgParms msgParams, bool IsAutofresh, bool HaveNewTask, int rowCount, int pageCount) {
            this.PendingCacheTasksParmsPageIndexAsync(msgParams, IsAutofresh, HaveNewTask, rowCount, pageCount, null);
        }
        
        public void PendingCacheTasksParmsPageIndexAsync(SMT.Saas.Tools.EngineWS.MsgParms msgParams, bool IsAutofresh, bool HaveNewTask, int rowCount, int pageCount, object userState) {
            if ((this.onBeginPendingCacheTasksParmsPageIndexDelegate == null)) {
                this.onBeginPendingCacheTasksParmsPageIndexDelegate = new BeginOperationDelegate(this.OnBeginPendingCacheTasksParmsPageIndex);
            }
            if ((this.onEndPendingCacheTasksParmsPageIndexDelegate == null)) {
                this.onEndPendingCacheTasksParmsPageIndexDelegate = new EndOperationDelegate(this.OnEndPendingCacheTasksParmsPageIndex);
            }
            if ((this.onPendingCacheTasksParmsPageIndexCompletedDelegate == null)) {
                this.onPendingCacheTasksParmsPageIndexCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPendingCacheTasksParmsPageIndexCompleted);
            }
            base.InvokeAsync(this.onBeginPendingCacheTasksParmsPageIndexDelegate, new object[] {
                        msgParams,
                        IsAutofresh,
                        HaveNewTask,
                        rowCount,
                        pageCount}, this.onEndPendingCacheTasksParmsPageIndexDelegate, this.onPendingCacheTasksParmsPageIndexCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginPendingMainTasksParms(SMT.Saas.Tools.EngineWS.MsgParms msgParams, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPendingMainTasksParms(msgParams, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndPendingMainTasksParms(System.IAsyncResult result) {
            return base.Channel.EndPendingMainTasksParms(result);
        }
        
        private System.IAsyncResult OnBeginPendingMainTasksParms(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.EngineWS.MsgParms msgParams = ((SMT.Saas.Tools.EngineWS.MsgParms)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginPendingMainTasksParms(msgParams, callback, asyncState);
        }
        
        private object[] OnEndPendingMainTasksParms(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndPendingMainTasksParms(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPendingMainTasksParmsCompleted(object state) {
            if ((this.PendingMainTasksParmsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PendingMainTasksParmsCompleted(this, new PendingMainTasksParmsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PendingMainTasksParmsAsync(SMT.Saas.Tools.EngineWS.MsgParms msgParams) {
            this.PendingMainTasksParmsAsync(msgParams, null);
        }
        
        public void PendingMainTasksParmsAsync(SMT.Saas.Tools.EngineWS.MsgParms msgParams, object userState) {
            if ((this.onBeginPendingMainTasksParmsDelegate == null)) {
                this.onBeginPendingMainTasksParmsDelegate = new BeginOperationDelegate(this.OnBeginPendingMainTasksParms);
            }
            if ((this.onEndPendingMainTasksParmsDelegate == null)) {
                this.onEndPendingMainTasksParmsDelegate = new EndOperationDelegate(this.OnEndPendingMainTasksParms);
            }
            if ((this.onPendingMainTasksParmsCompletedDelegate == null)) {
                this.onPendingMainTasksParmsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPendingMainTasksParmsCompleted);
            }
            base.InvokeAsync(this.onBeginPendingMainTasksParmsDelegate, new object[] {
                        msgParams}, this.onEndPendingMainTasksParmsDelegate, this.onPendingMainTasksParmsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginPendingCacheMainTasksParms(SMT.Saas.Tools.EngineWS.MsgParms msgParams, ref bool IsAutofresh, ref bool HaveNewTask, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPendingCacheMainTasksParms(msgParams, ref IsAutofresh, ref HaveNewTask, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndPendingCacheMainTasksParms(ref bool IsAutofresh, ref bool HaveNewTask, System.IAsyncResult result) {
            return base.Channel.EndPendingCacheMainTasksParms(ref IsAutofresh, ref HaveNewTask, result);
        }
        
        private System.IAsyncResult OnBeginPendingCacheMainTasksParms(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.EngineWS.MsgParms msgParams = ((SMT.Saas.Tools.EngineWS.MsgParms)(inValues[0]));
            bool IsAutofresh = ((bool)(inValues[1]));
            bool HaveNewTask = ((bool)(inValues[2]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginPendingCacheMainTasksParms(msgParams, ref IsAutofresh, ref HaveNewTask, callback, asyncState);
        }
        
        private object[] OnEndPendingCacheMainTasksParms(System.IAsyncResult result) {
            bool IsAutofresh = this.GetDefaultValueForInitialization<bool>();
            bool HaveNewTask = this.GetDefaultValueForInitialization<bool>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndPendingCacheMainTasksParms(ref IsAutofresh, ref HaveNewTask, result);
            return new object[] {
                    IsAutofresh,
                    HaveNewTask,
                    retVal};
        }
        
        private void OnPendingCacheMainTasksParmsCompleted(object state) {
            if ((this.PendingCacheMainTasksParmsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PendingCacheMainTasksParmsCompleted(this, new PendingCacheMainTasksParmsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PendingCacheMainTasksParmsAsync(SMT.Saas.Tools.EngineWS.MsgParms msgParams, bool IsAutofresh, bool HaveNewTask) {
            this.PendingCacheMainTasksParmsAsync(msgParams, IsAutofresh, HaveNewTask, null);
        }
        
        public void PendingCacheMainTasksParmsAsync(SMT.Saas.Tools.EngineWS.MsgParms msgParams, bool IsAutofresh, bool HaveNewTask, object userState) {
            if ((this.onBeginPendingCacheMainTasksParmsDelegate == null)) {
                this.onBeginPendingCacheMainTasksParmsDelegate = new BeginOperationDelegate(this.OnBeginPendingCacheMainTasksParms);
            }
            if ((this.onEndPendingCacheMainTasksParmsDelegate == null)) {
                this.onEndPendingCacheMainTasksParmsDelegate = new EndOperationDelegate(this.OnEndPendingCacheMainTasksParms);
            }
            if ((this.onPendingCacheMainTasksParmsCompletedDelegate == null)) {
                this.onPendingCacheMainTasksParmsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPendingCacheMainTasksParmsCompleted);
            }
            base.InvokeAsync(this.onBeginPendingCacheMainTasksParmsDelegate, new object[] {
                        msgParams,
                        IsAutofresh,
                        HaveNewTask}, this.onEndPendingCacheMainTasksParmsDelegate, this.onPendingCacheMainTasksParmsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginPendingDetailByID(string strMsgID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPendingDetailByID(strMsgID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndPendingDetailByID(System.IAsyncResult result) {
            return base.Channel.EndPendingDetailByID(result);
        }
        
        private System.IAsyncResult OnBeginPendingDetailByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strMsgID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginPendingDetailByID(strMsgID, callback, asyncState);
        }
        
        private object[] OnEndPendingDetailByID(System.IAsyncResult result) {
            SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndPendingDetailByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPendingDetailByIDCompleted(object state) {
            if ((this.PendingDetailByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PendingDetailByIDCompleted(this, new PendingDetailByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PendingDetailByIDAsync(string strMsgID) {
            this.PendingDetailByIDAsync(strMsgID, null);
        }
        
        public void PendingDetailByIDAsync(string strMsgID, object userState) {
            if ((this.onBeginPendingDetailByIDDelegate == null)) {
                this.onBeginPendingDetailByIDDelegate = new BeginOperationDelegate(this.OnBeginPendingDetailByID);
            }
            if ((this.onEndPendingDetailByIDDelegate == null)) {
                this.onEndPendingDetailByIDDelegate = new EndOperationDelegate(this.OnEndPendingDetailByID);
            }
            if ((this.onPendingDetailByIDCompletedDelegate == null)) {
                this.onPendingDetailByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPendingDetailByIDCompleted);
            }
            base.InvokeAsync(this.onBeginPendingDetailByIDDelegate, new object[] {
                        strMsgID}, this.onEndPendingDetailByIDDelegate, this.onPendingDetailByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginPendingDetailTasks(string strMsgID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPendingDetailTasks(strMsgID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndPendingDetailTasks(System.IAsyncResult result) {
            return base.Channel.EndPendingDetailTasks(result);
        }
        
        private System.IAsyncResult OnBeginPendingDetailTasks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strMsgID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginPendingDetailTasks(strMsgID, callback, asyncState);
        }
        
        private object[] OnEndPendingDetailTasks(System.IAsyncResult result) {
            SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndPendingDetailTasks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPendingDetailTasksCompleted(object state) {
            if ((this.PendingDetailTasksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PendingDetailTasksCompleted(this, new PendingDetailTasksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PendingDetailTasksAsync(string strMsgID) {
            this.PendingDetailTasksAsync(strMsgID, null);
        }
        
        public void PendingDetailTasksAsync(string strMsgID, object userState) {
            if ((this.onBeginPendingDetailTasksDelegate == null)) {
                this.onBeginPendingDetailTasksDelegate = new BeginOperationDelegate(this.OnBeginPendingDetailTasks);
            }
            if ((this.onEndPendingDetailTasksDelegate == null)) {
                this.onEndPendingDetailTasksDelegate = new EndOperationDelegate(this.OnEndPendingDetailTasks);
            }
            if ((this.onPendingDetailTasksCompletedDelegate == null)) {
                this.onPendingDetailTasksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPendingDetailTasksCompleted);
            }
            base.InvokeAsync(this.onBeginPendingDetailTasksDelegate, new object[] {
                        strMsgID}, this.onEndPendingDetailTasksDelegate, this.onPendingDetailTasksCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginPendingDetailTasksByPhone(string strMsgID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPendingDetailTasksByPhone(strMsgID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndPendingDetailTasksByPhone(System.IAsyncResult result) {
            return base.Channel.EndPendingDetailTasksByPhone(result);
        }
        
        private System.IAsyncResult OnBeginPendingDetailTasksByPhone(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strMsgID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginPendingDetailTasksByPhone(strMsgID, callback, asyncState);
        }
        
        private object[] OnEndPendingDetailTasksByPhone(System.IAsyncResult result) {
            SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndPendingDetailTasksByPhone(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPendingDetailTasksByPhoneCompleted(object state) {
            if ((this.PendingDetailTasksByPhoneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PendingDetailTasksByPhoneCompleted(this, new PendingDetailTasksByPhoneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PendingDetailTasksByPhoneAsync(string strMsgID) {
            this.PendingDetailTasksByPhoneAsync(strMsgID, null);
        }
        
        public void PendingDetailTasksByPhoneAsync(string strMsgID, object userState) {
            if ((this.onBeginPendingDetailTasksByPhoneDelegate == null)) {
                this.onBeginPendingDetailTasksByPhoneDelegate = new BeginOperationDelegate(this.OnBeginPendingDetailTasksByPhone);
            }
            if ((this.onEndPendingDetailTasksByPhoneDelegate == null)) {
                this.onEndPendingDetailTasksByPhoneDelegate = new EndOperationDelegate(this.OnEndPendingDetailTasksByPhone);
            }
            if ((this.onPendingDetailTasksByPhoneCompletedDelegate == null)) {
                this.onPendingDetailTasksByPhoneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPendingDetailTasksByPhoneCompleted);
            }
            base.InvokeAsync(this.onBeginPendingDetailTasksByPhoneDelegate, new object[] {
                        strMsgID}, this.onEndPendingDetailTasksByPhoneDelegate, this.onPendingDetailTasksByPhoneCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginPendingDetailTasksByOrderNodeCodeForMobile(string orderNodeCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPendingDetailTasksByOrderNodeCodeForMobile(orderNodeCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndPendingDetailTasksByOrderNodeCodeForMobile(System.IAsyncResult result) {
            return base.Channel.EndPendingDetailTasksByOrderNodeCodeForMobile(result);
        }
        
        private System.IAsyncResult OnBeginPendingDetailTasksByOrderNodeCodeForMobile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string orderNodeCode = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginPendingDetailTasksByOrderNodeCodeForMobile(orderNodeCode, callback, asyncState);
        }
        
        private object[] OnEndPendingDetailTasksByOrderNodeCodeForMobile(System.IAsyncResult result) {
            SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndPendingDetailTasksByOrderNodeCodeForMobile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPendingDetailTasksByOrderNodeCodeForMobileCompleted(object state) {
            if ((this.PendingDetailTasksByOrderNodeCodeForMobileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PendingDetailTasksByOrderNodeCodeForMobileCompleted(this, new PendingDetailTasksByOrderNodeCodeForMobileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PendingDetailTasksByOrderNodeCodeForMobileAsync(string orderNodeCode) {
            this.PendingDetailTasksByOrderNodeCodeForMobileAsync(orderNodeCode, null);
        }
        
        public void PendingDetailTasksByOrderNodeCodeForMobileAsync(string orderNodeCode, object userState) {
            if ((this.onBeginPendingDetailTasksByOrderNodeCodeForMobileDelegate == null)) {
                this.onBeginPendingDetailTasksByOrderNodeCodeForMobileDelegate = new BeginOperationDelegate(this.OnBeginPendingDetailTasksByOrderNodeCodeForMobile);
            }
            if ((this.onEndPendingDetailTasksByOrderNodeCodeForMobileDelegate == null)) {
                this.onEndPendingDetailTasksByOrderNodeCodeForMobileDelegate = new EndOperationDelegate(this.OnEndPendingDetailTasksByOrderNodeCodeForMobile);
            }
            if ((this.onPendingDetailTasksByOrderNodeCodeForMobileCompletedDelegate == null)) {
                this.onPendingDetailTasksByOrderNodeCodeForMobileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPendingDetailTasksByOrderNodeCodeForMobileCompleted);
            }
            base.InvokeAsync(this.onBeginPendingDetailTasksByOrderNodeCodeForMobileDelegate, new object[] {
                        orderNodeCode}, this.onEndPendingDetailTasksByOrderNodeCodeForMobileDelegate, this.onPendingDetailTasksByOrderNodeCodeForMobileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginEngineNotes(string strUserID, string strStatus, int iTop, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEngineNotes(strUserID, strStatus, iTop, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINENOTES> SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndEngineNotes(System.IAsyncResult result) {
            return base.Channel.EndEngineNotes(result);
        }
        
        private System.IAsyncResult OnBeginEngineNotes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strUserID = ((string)(inValues[0]));
            string strStatus = ((string)(inValues[1]));
            int iTop = ((int)(inValues[2]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginEngineNotes(strUserID, strStatus, iTop, callback, asyncState);
        }
        
        private object[] OnEndEngineNotes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINENOTES> retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndEngineNotes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEngineNotesCompleted(object state) {
            if ((this.EngineNotesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EngineNotesCompleted(this, new EngineNotesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EngineNotesAsync(string strUserID, string strStatus, int iTop) {
            this.EngineNotesAsync(strUserID, strStatus, iTop, null);
        }
        
        public void EngineNotesAsync(string strUserID, string strStatus, int iTop, object userState) {
            if ((this.onBeginEngineNotesDelegate == null)) {
                this.onBeginEngineNotesDelegate = new BeginOperationDelegate(this.OnBeginEngineNotes);
            }
            if ((this.onEndEngineNotesDelegate == null)) {
                this.onEndEngineNotesDelegate = new EndOperationDelegate(this.OnEndEngineNotes);
            }
            if ((this.onEngineNotesCompletedDelegate == null)) {
                this.onEngineNotesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEngineNotesCompleted);
            }
            base.InvokeAsync(this.onBeginEngineNotesDelegate, new object[] {
                        strUserID,
                        strStatus,
                        iTop}, this.onEndEngineNotesDelegate, this.onEngineNotesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginCancelEventTriggerData(string strApplicationOrderCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelEventTriggerData(strApplicationOrderCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndCancelEventTriggerData(System.IAsyncResult result) {
            return base.Channel.EndCancelEventTriggerData(result);
        }
        
        private System.IAsyncResult OnBeginCancelEventTriggerData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strApplicationOrderCode = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginCancelEventTriggerData(strApplicationOrderCode, callback, asyncState);
        }
        
        private object[] OnEndCancelEventTriggerData(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndCancelEventTriggerData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCancelEventTriggerDataCompleted(object state) {
            if ((this.CancelEventTriggerDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelEventTriggerDataCompleted(this, new CancelEventTriggerDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelEventTriggerDataAsync(string strApplicationOrderCode) {
            this.CancelEventTriggerDataAsync(strApplicationOrderCode, null);
        }
        
        public void CancelEventTriggerDataAsync(string strApplicationOrderCode, object userState) {
            if ((this.onBeginCancelEventTriggerDataDelegate == null)) {
                this.onBeginCancelEventTriggerDataDelegate = new BeginOperationDelegate(this.OnBeginCancelEventTriggerData);
            }
            if ((this.onEndCancelEventTriggerDataDelegate == null)) {
                this.onEndCancelEventTriggerDataDelegate = new EndOperationDelegate(this.OnEndCancelEventTriggerData);
            }
            if ((this.onCancelEventTriggerDataCompletedDelegate == null)) {
                this.onCancelEventTriggerDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelEventTriggerDataCompleted);
            }
            base.InvokeAsync(this.onBeginCancelEventTriggerDataDelegate, new object[] {
                        strApplicationOrderCode}, this.onEndCancelEventTriggerDataDelegate, this.onCancelEventTriggerDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginSaveEventData(string strEventXml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEventData(strEventXml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndSaveEventData(System.IAsyncResult result) {
            base.Channel.EndSaveEventData(result);
        }
        
        private System.IAsyncResult OnBeginSaveEventData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strEventXml = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginSaveEventData(strEventXml, callback, asyncState);
        }
        
        private object[] OnEndSaveEventData(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndSaveEventData(result);
            return null;
        }
        
        private void OnSaveEventDataCompleted(object state) {
            if ((this.SaveEventDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEventDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEventDataAsync(string strEventXml) {
            this.SaveEventDataAsync(strEventXml, null);
        }
        
        public void SaveEventDataAsync(string strEventXml, object userState) {
            if ((this.onBeginSaveEventDataDelegate == null)) {
                this.onBeginSaveEventDataDelegate = new BeginOperationDelegate(this.OnBeginSaveEventData);
            }
            if ((this.onEndSaveEventDataDelegate == null)) {
                this.onEndSaveEventDataDelegate = new EndOperationDelegate(this.OnEndSaveEventData);
            }
            if ((this.onSaveEventDataCompletedDelegate == null)) {
                this.onSaveEventDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEventDataCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEventDataDelegate, new object[] {
                        strEventXml}, this.onEndSaveEventDataDelegate, this.onSaveEventDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginMsgTrigger(System.Collections.ObjectModel.ObservableCollection<string> recevieUser, string SystemCode, string MsgKey, string ID, string strXml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMsgTrigger(recevieUser, SystemCode, MsgKey, ID, strXml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndMsgTrigger(System.IAsyncResult result) {
            base.Channel.EndMsgTrigger(result);
        }
        
        private System.IAsyncResult OnBeginMsgTrigger(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> recevieUser = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            string SystemCode = ((string)(inValues[1]));
            string MsgKey = ((string)(inValues[2]));
            string ID = ((string)(inValues[3]));
            string strXml = ((string)(inValues[4]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginMsgTrigger(recevieUser, SystemCode, MsgKey, ID, strXml, callback, asyncState);
        }
        
        private object[] OnEndMsgTrigger(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndMsgTrigger(result);
            return null;
        }
        
        private void OnMsgTriggerCompleted(object state) {
            if ((this.MsgTriggerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MsgTriggerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MsgTriggerAsync(System.Collections.ObjectModel.ObservableCollection<string> recevieUser, string SystemCode, string MsgKey, string ID, string strXml) {
            this.MsgTriggerAsync(recevieUser, SystemCode, MsgKey, ID, strXml, null);
        }
        
        public void MsgTriggerAsync(System.Collections.ObjectModel.ObservableCollection<string> recevieUser, string SystemCode, string MsgKey, string ID, string strXml, object userState) {
            if ((this.onBeginMsgTriggerDelegate == null)) {
                this.onBeginMsgTriggerDelegate = new BeginOperationDelegate(this.OnBeginMsgTrigger);
            }
            if ((this.onEndMsgTriggerDelegate == null)) {
                this.onEndMsgTriggerDelegate = new EndOperationDelegate(this.OnEndMsgTrigger);
            }
            if ((this.onMsgTriggerCompletedDelegate == null)) {
                this.onMsgTriggerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMsgTriggerCompleted);
            }
            base.InvokeAsync(this.onBeginMsgTriggerDelegate, new object[] {
                        recevieUser,
                        SystemCode,
                        MsgKey,
                        ID,
                        strXml}, this.onEndMsgTriggerDelegate, this.onMsgTriggerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginNotesSend(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserAndContent> List, string SystemCode, string strFormID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNotesSend(List, SystemCode, strFormID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndNotesSend(System.IAsyncResult result) {
            base.Channel.EndNotesSend(result);
        }
        
        private System.IAsyncResult OnBeginNotesSend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserAndContent> List = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserAndContent>)(inValues[0]));
            string SystemCode = ((string)(inValues[1]));
            string strFormID = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginNotesSend(List, SystemCode, strFormID, callback, asyncState);
        }
        
        private object[] OnEndNotesSend(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndNotesSend(result);
            return null;
        }
        
        private void OnNotesSendCompleted(object state) {
            if ((this.NotesSendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NotesSendCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NotesSendAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserAndContent> List, string SystemCode, string strFormID) {
            this.NotesSendAsync(List, SystemCode, strFormID, null);
        }
        
        public void NotesSendAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserAndContent> List, string SystemCode, string strFormID, object userState) {
            if ((this.onBeginNotesSendDelegate == null)) {
                this.onBeginNotesSendDelegate = new BeginOperationDelegate(this.OnBeginNotesSend);
            }
            if ((this.onEndNotesSendDelegate == null)) {
                this.onEndNotesSendDelegate = new EndOperationDelegate(this.OnEndNotesSend);
            }
            if ((this.onNotesSendCompletedDelegate == null)) {
                this.onNotesSendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNotesSendCompleted);
            }
            base.InvokeAsync(this.onBeginNotesSendDelegate, new object[] {
                        List,
                        SystemCode,
                        strFormID}, this.onEndNotesSendDelegate, this.onNotesSendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginTaskMsgClose(string strSystemCode, string strFormID, string strReceiveUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTaskMsgClose(strSystemCode, strFormID, strReceiveUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndTaskMsgClose(System.IAsyncResult result) {
            base.Channel.EndTaskMsgClose(result);
        }
        
        private System.IAsyncResult OnBeginTaskMsgClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strSystemCode = ((string)(inValues[0]));
            string strFormID = ((string)(inValues[1]));
            string strReceiveUser = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginTaskMsgClose(strSystemCode, strFormID, strReceiveUser, callback, asyncState);
        }
        
        private object[] OnEndTaskMsgClose(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndTaskMsgClose(result);
            return null;
        }
        
        private void OnTaskMsgCloseCompleted(object state) {
            if ((this.TaskMsgCloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TaskMsgCloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TaskMsgCloseAsync(string strSystemCode, string strFormID, string strReceiveUser) {
            this.TaskMsgCloseAsync(strSystemCode, strFormID, strReceiveUser, null);
        }
        
        public void TaskMsgCloseAsync(string strSystemCode, string strFormID, string strReceiveUser, object userState) {
            if ((this.onBeginTaskMsgCloseDelegate == null)) {
                this.onBeginTaskMsgCloseDelegate = new BeginOperationDelegate(this.OnBeginTaskMsgClose);
            }
            if ((this.onEndTaskMsgCloseDelegate == null)) {
                this.onEndTaskMsgCloseDelegate = new EndOperationDelegate(this.OnEndTaskMsgClose);
            }
            if ((this.onTaskMsgCloseCompletedDelegate == null)) {
                this.onTaskMsgCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTaskMsgCloseCompleted);
            }
            base.InvokeAsync(this.onBeginTaskMsgCloseDelegate, new object[] {
                        strSystemCode,
                        strFormID,
                        strReceiveUser}, this.onEndTaskMsgCloseDelegate, this.onTaskMsgCloseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginCloseDoTask(System.Collections.ObjectModel.ObservableCollection<string> listOrderID, string strModelCode, string strReceiveUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCloseDoTask(listOrderID, strModelCode, strReceiveUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndCloseDoTask(System.IAsyncResult result) {
            base.Channel.EndCloseDoTask(result);
        }
        
        private System.IAsyncResult OnBeginCloseDoTask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> listOrderID = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            string strModelCode = ((string)(inValues[1]));
            string strReceiveUser = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginCloseDoTask(listOrderID, strModelCode, strReceiveUser, callback, asyncState);
        }
        
        private object[] OnEndCloseDoTask(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndCloseDoTask(result);
            return null;
        }
        
        private void OnCloseDoTaskCompleted(object state) {
            if ((this.CloseDoTaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseDoTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseDoTaskAsync(System.Collections.ObjectModel.ObservableCollection<string> listOrderID, string strModelCode, string strReceiveUser) {
            this.CloseDoTaskAsync(listOrderID, strModelCode, strReceiveUser, null);
        }
        
        public void CloseDoTaskAsync(System.Collections.ObjectModel.ObservableCollection<string> listOrderID, string strModelCode, string strReceiveUser, object userState) {
            if ((this.onBeginCloseDoTaskDelegate == null)) {
                this.onBeginCloseDoTaskDelegate = new BeginOperationDelegate(this.OnBeginCloseDoTask);
            }
            if ((this.onEndCloseDoTaskDelegate == null)) {
                this.onEndCloseDoTaskDelegate = new EndOperationDelegate(this.OnEndCloseDoTask);
            }
            if ((this.onCloseDoTaskCompletedDelegate == null)) {
                this.onCloseDoTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseDoTaskCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDoTaskDelegate, new object[] {
                        listOrderID,
                        strModelCode,
                        strReceiveUser}, this.onEndCloseDoTaskDelegate, this.onCloseDoTaskCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginMsgListClose(string strSystemCode, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserForm> List, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMsgListClose(strSystemCode, List, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndMsgListClose(System.IAsyncResult result) {
            base.Channel.EndMsgListClose(result);
        }
        
        private System.IAsyncResult OnBeginMsgListClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strSystemCode = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserForm> List = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserForm>)(inValues[1]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginMsgListClose(strSystemCode, List, callback, asyncState);
        }
        
        private object[] OnEndMsgListClose(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndMsgListClose(result);
            return null;
        }
        
        private void OnMsgListCloseCompleted(object state) {
            if ((this.MsgListCloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MsgListCloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MsgListCloseAsync(string strSystemCode, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserForm> List) {
            this.MsgListCloseAsync(strSystemCode, List, null);
        }
        
        public void MsgListCloseAsync(string strSystemCode, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserForm> List, object userState) {
            if ((this.onBeginMsgListCloseDelegate == null)) {
                this.onBeginMsgListCloseDelegate = new BeginOperationDelegate(this.OnBeginMsgListClose);
            }
            if ((this.onEndMsgListCloseDelegate == null)) {
                this.onEndMsgListCloseDelegate = new EndOperationDelegate(this.OnEndMsgListClose);
            }
            if ((this.onMsgListCloseCompletedDelegate == null)) {
                this.onMsgListCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMsgListCloseCompleted);
            }
            base.InvokeAsync(this.onBeginMsgListCloseDelegate, new object[] {
                        strSystemCode,
                        List}, this.onEndMsgListCloseDelegate, this.onMsgListCloseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginModelMsgClose(string strModelCode, string strReceiveUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModelMsgClose(strModelCode, strReceiveUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndModelMsgClose(System.IAsyncResult result) {
            base.Channel.EndModelMsgClose(result);
        }
        
        private System.IAsyncResult OnBeginModelMsgClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strModelCode = ((string)(inValues[0]));
            string strReceiveUser = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginModelMsgClose(strModelCode, strReceiveUser, callback, asyncState);
        }
        
        private object[] OnEndModelMsgClose(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndModelMsgClose(result);
            return null;
        }
        
        private void OnModelMsgCloseCompleted(object state) {
            if ((this.ModelMsgCloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModelMsgCloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModelMsgCloseAsync(string strModelCode, string strReceiveUser) {
            this.ModelMsgCloseAsync(strModelCode, strReceiveUser, null);
        }
        
        public void ModelMsgCloseAsync(string strModelCode, string strReceiveUser, object userState) {
            if ((this.onBeginModelMsgCloseDelegate == null)) {
                this.onBeginModelMsgCloseDelegate = new BeginOperationDelegate(this.OnBeginModelMsgClose);
            }
            if ((this.onEndModelMsgCloseDelegate == null)) {
                this.onEndModelMsgCloseDelegate = new EndOperationDelegate(this.OnEndModelMsgClose);
            }
            if ((this.onModelMsgCloseCompletedDelegate == null)) {
                this.onModelMsgCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModelMsgCloseCompleted);
            }
            base.InvokeAsync(this.onBeginModelMsgCloseDelegate, new object[] {
                        strModelCode,
                        strReceiveUser}, this.onEndModelMsgCloseDelegate, this.onModelMsgCloseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginClosedDoTaskFromID(string strModelCode, string fromID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClosedDoTaskFromID(strModelCode, fromID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndClosedDoTaskFromID(System.IAsyncResult result) {
            base.Channel.EndClosedDoTaskFromID(result);
        }
        
        private System.IAsyncResult OnBeginClosedDoTaskFromID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strModelCode = ((string)(inValues[0]));
            string fromID = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginClosedDoTaskFromID(strModelCode, fromID, callback, asyncState);
        }
        
        private object[] OnEndClosedDoTaskFromID(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndClosedDoTaskFromID(result);
            return null;
        }
        
        private void OnClosedDoTaskFromIDCompleted(object state) {
            if ((this.ClosedDoTaskFromIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClosedDoTaskFromIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClosedDoTaskFromIDAsync(string strModelCode, string fromID) {
            this.ClosedDoTaskFromIDAsync(strModelCode, fromID, null);
        }
        
        public void ClosedDoTaskFromIDAsync(string strModelCode, string fromID, object userState) {
            if ((this.onBeginClosedDoTaskFromIDDelegate == null)) {
                this.onBeginClosedDoTaskFromIDDelegate = new BeginOperationDelegate(this.OnBeginClosedDoTaskFromID);
            }
            if ((this.onEndClosedDoTaskFromIDDelegate == null)) {
                this.onEndClosedDoTaskFromIDDelegate = new EndOperationDelegate(this.OnEndClosedDoTaskFromID);
            }
            if ((this.onClosedDoTaskFromIDCompletedDelegate == null)) {
                this.onClosedDoTaskFromIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClosedDoTaskFromIDCompleted);
            }
            base.InvokeAsync(this.onBeginClosedDoTaskFromIDDelegate, new object[] {
                        strModelCode,
                        fromID}, this.onEndClosedDoTaskFromIDDelegate, this.onClosedDoTaskFromIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginMsgClose(string strMessageID, string strEventID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMsgClose(strMessageID, strEventID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndMsgClose(System.IAsyncResult result) {
            base.Channel.EndMsgClose(result);
        }
        
        private System.IAsyncResult OnBeginMsgClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strMessageID = ((string)(inValues[0]));
            string strEventID = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginMsgClose(strMessageID, strEventID, callback, asyncState);
        }
        
        private object[] OnEndMsgClose(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndMsgClose(result);
            return null;
        }
        
        private void OnMsgCloseCompleted(object state) {
            if ((this.MsgCloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MsgCloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MsgCloseAsync(string strMessageID, string strEventID) {
            this.MsgCloseAsync(strMessageID, strEventID, null);
        }
        
        public void MsgCloseAsync(string strMessageID, string strEventID, object userState) {
            if ((this.onBeginMsgCloseDelegate == null)) {
                this.onBeginMsgCloseDelegate = new BeginOperationDelegate(this.OnBeginMsgClose);
            }
            if ((this.onEndMsgCloseDelegate == null)) {
                this.onEndMsgCloseDelegate = new EndOperationDelegate(this.OnEndMsgClose);
            }
            if ((this.onMsgCloseCompletedDelegate == null)) {
                this.onMsgCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMsgCloseCompleted);
            }
            base.InvokeAsync(this.onBeginMsgCloseDelegate, new object[] {
                        strMessageID,
                        strEventID}, this.onEndMsgCloseDelegate, this.onMsgCloseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginApplicationMsgTrigger(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplicationMsgTrigger(UserAndForm, SystemCode, ModelCode, strXml, msgType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndApplicationMsgTrigger(System.IAsyncResult result) {
            base.Channel.EndApplicationMsgTrigger(result);
        }
        
        private System.IAsyncResult OnBeginApplicationMsgTrigger(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg>)(inValues[0]));
            string SystemCode = ((string)(inValues[1]));
            string ModelCode = ((string)(inValues[2]));
            string strXml = ((string)(inValues[3]));
            SMT.Saas.Tools.EngineWS.MsgType msgType = ((SMT.Saas.Tools.EngineWS.MsgType)(inValues[4]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginApplicationMsgTrigger(UserAndForm, SystemCode, ModelCode, strXml, msgType, callback, asyncState);
        }
        
        private object[] OnEndApplicationMsgTrigger(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndApplicationMsgTrigger(result);
            return null;
        }
        
        private void OnApplicationMsgTriggerCompleted(object state) {
            if ((this.ApplicationMsgTriggerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplicationMsgTriggerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplicationMsgTriggerAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType) {
            this.ApplicationMsgTriggerAsync(UserAndForm, SystemCode, ModelCode, strXml, msgType, null);
        }
        
        public void ApplicationMsgTriggerAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, object userState) {
            if ((this.onBeginApplicationMsgTriggerDelegate == null)) {
                this.onBeginApplicationMsgTriggerDelegate = new BeginOperationDelegate(this.OnBeginApplicationMsgTrigger);
            }
            if ((this.onEndApplicationMsgTriggerDelegate == null)) {
                this.onEndApplicationMsgTriggerDelegate = new EndOperationDelegate(this.OnEndApplicationMsgTrigger);
            }
            if ((this.onApplicationMsgTriggerCompletedDelegate == null)) {
                this.onApplicationMsgTriggerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplicationMsgTriggerCompleted);
            }
            base.InvokeAsync(this.onBeginApplicationMsgTriggerDelegate, new object[] {
                        UserAndForm,
                        SystemCode,
                        ModelCode,
                        strXml,
                        msgType}, this.onEndApplicationMsgTriggerDelegate, this.onApplicationMsgTriggerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginApplicationMsgTriggerCustom(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, string messageBody, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplicationMsgTriggerCustom(UserAndForm, SystemCode, ModelCode, strXml, msgType, messageBody, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndApplicationMsgTriggerCustom(System.IAsyncResult result) {
            base.Channel.EndApplicationMsgTriggerCustom(result);
        }
        
        private System.IAsyncResult OnBeginApplicationMsgTriggerCustom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg>)(inValues[0]));
            string SystemCode = ((string)(inValues[1]));
            string ModelCode = ((string)(inValues[2]));
            string strXml = ((string)(inValues[3]));
            SMT.Saas.Tools.EngineWS.MsgType msgType = ((SMT.Saas.Tools.EngineWS.MsgType)(inValues[4]));
            string messageBody = ((string)(inValues[5]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginApplicationMsgTriggerCustom(UserAndForm, SystemCode, ModelCode, strXml, msgType, messageBody, callback, asyncState);
        }
        
        private object[] OnEndApplicationMsgTriggerCustom(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndApplicationMsgTriggerCustom(result);
            return null;
        }
        
        private void OnApplicationMsgTriggerCustomCompleted(object state) {
            if ((this.ApplicationMsgTriggerCustomCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplicationMsgTriggerCustomCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplicationMsgTriggerCustomAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, string messageBody) {
            this.ApplicationMsgTriggerCustomAsync(UserAndForm, SystemCode, ModelCode, strXml, msgType, messageBody, null);
        }
        
        public void ApplicationMsgTriggerCustomAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, string messageBody, object userState) {
            if ((this.onBeginApplicationMsgTriggerCustomDelegate == null)) {
                this.onBeginApplicationMsgTriggerCustomDelegate = new BeginOperationDelegate(this.OnBeginApplicationMsgTriggerCustom);
            }
            if ((this.onEndApplicationMsgTriggerCustomDelegate == null)) {
                this.onEndApplicationMsgTriggerCustomDelegate = new EndOperationDelegate(this.OnEndApplicationMsgTriggerCustom);
            }
            if ((this.onApplicationMsgTriggerCustomCompletedDelegate == null)) {
                this.onApplicationMsgTriggerCustomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplicationMsgTriggerCustomCompleted);
            }
            base.InvokeAsync(this.onBeginApplicationMsgTriggerCustomDelegate, new object[] {
                        UserAndForm,
                        SystemCode,
                        ModelCode,
                        strXml,
                        msgType,
                        messageBody}, this.onEndApplicationMsgTriggerCustomDelegate, this.onApplicationMsgTriggerCustomCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginApplicationEngineTrigger(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strCompanyID, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplicationEngineTrigger(UserAndForm, SystemCode, ModelCode, strCompanyID, strXml, msgType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndApplicationEngineTrigger(System.IAsyncResult result) {
            base.Channel.EndApplicationEngineTrigger(result);
        }
        
        private System.IAsyncResult OnBeginApplicationEngineTrigger(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg>)(inValues[0]));
            string SystemCode = ((string)(inValues[1]));
            string ModelCode = ((string)(inValues[2]));
            string strCompanyID = ((string)(inValues[3]));
            string strXml = ((string)(inValues[4]));
            SMT.Saas.Tools.EngineWS.MsgType msgType = ((SMT.Saas.Tools.EngineWS.MsgType)(inValues[5]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginApplicationEngineTrigger(UserAndForm, SystemCode, ModelCode, strCompanyID, strXml, msgType, callback, asyncState);
        }
        
        private object[] OnEndApplicationEngineTrigger(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndApplicationEngineTrigger(result);
            return null;
        }
        
        private void OnApplicationEngineTriggerCompleted(object state) {
            if ((this.ApplicationEngineTriggerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplicationEngineTriggerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplicationEngineTriggerAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strCompanyID, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType) {
            this.ApplicationEngineTriggerAsync(UserAndForm, SystemCode, ModelCode, strCompanyID, strXml, msgType, null);
        }
        
        public void ApplicationEngineTriggerAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strCompanyID, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, object userState) {
            if ((this.onBeginApplicationEngineTriggerDelegate == null)) {
                this.onBeginApplicationEngineTriggerDelegate = new BeginOperationDelegate(this.OnBeginApplicationEngineTrigger);
            }
            if ((this.onEndApplicationEngineTriggerDelegate == null)) {
                this.onEndApplicationEngineTriggerDelegate = new EndOperationDelegate(this.OnEndApplicationEngineTrigger);
            }
            if ((this.onApplicationEngineTriggerCompletedDelegate == null)) {
                this.onApplicationEngineTriggerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplicationEngineTriggerCompleted);
            }
            base.InvokeAsync(this.onBeginApplicationEngineTriggerDelegate, new object[] {
                        UserAndForm,
                        SystemCode,
                        ModelCode,
                        strCompanyID,
                        strXml,
                        msgType}, this.onEndApplicationEngineTriggerDelegate, this.onApplicationEngineTriggerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginAppMsgTrigger(string ReceiveUserID, string strFormID, string MsgContent, string ModelCode, string strXml, string strNewGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAppMsgTrigger(ReceiveUserID, strFormID, MsgContent, ModelCode, strXml, strNewGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndAppMsgTrigger(System.IAsyncResult result) {
            base.Channel.EndAppMsgTrigger(result);
        }
        
        private System.IAsyncResult OnBeginAppMsgTrigger(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ReceiveUserID = ((string)(inValues[0]));
            string strFormID = ((string)(inValues[1]));
            string MsgContent = ((string)(inValues[2]));
            string ModelCode = ((string)(inValues[3]));
            string strXml = ((string)(inValues[4]));
            string strNewGuid = ((string)(inValues[5]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginAppMsgTrigger(ReceiveUserID, strFormID, MsgContent, ModelCode, strXml, strNewGuid, callback, asyncState);
        }
        
        private object[] OnEndAppMsgTrigger(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndAppMsgTrigger(result);
            return null;
        }
        
        private void OnAppMsgTriggerCompleted(object state) {
            if ((this.AppMsgTriggerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AppMsgTriggerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AppMsgTriggerAsync(string ReceiveUserID, string strFormID, string MsgContent, string ModelCode, string strXml, string strNewGuid) {
            this.AppMsgTriggerAsync(ReceiveUserID, strFormID, MsgContent, ModelCode, strXml, strNewGuid, null);
        }
        
        public void AppMsgTriggerAsync(string ReceiveUserID, string strFormID, string MsgContent, string ModelCode, string strXml, string strNewGuid, object userState) {
            if ((this.onBeginAppMsgTriggerDelegate == null)) {
                this.onBeginAppMsgTriggerDelegate = new BeginOperationDelegate(this.OnBeginAppMsgTrigger);
            }
            if ((this.onEndAppMsgTriggerDelegate == null)) {
                this.onEndAppMsgTriggerDelegate = new EndOperationDelegate(this.OnEndAppMsgTrigger);
            }
            if ((this.onAppMsgTriggerCompletedDelegate == null)) {
                this.onAppMsgTriggerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAppMsgTriggerCompleted);
            }
            base.InvokeAsync(this.onBeginAppMsgTriggerDelegate, new object[] {
                        ReceiveUserID,
                        strFormID,
                        MsgContent,
                        ModelCode,
                        strXml,
                        strNewGuid}, this.onEndAppMsgTriggerDelegate, this.onAppMsgTriggerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginApplicationNotesTrigger(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string Content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplicationNotesTrigger(UserAndForm, SystemCode, Content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndApplicationNotesTrigger(System.IAsyncResult result) {
            base.Channel.EndApplicationNotesTrigger(result);
        }
        
        private System.IAsyncResult OnBeginApplicationNotesTrigger(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg>)(inValues[0]));
            string SystemCode = ((string)(inValues[1]));
            string Content = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginApplicationNotesTrigger(UserAndForm, SystemCode, Content, callback, asyncState);
        }
        
        private object[] OnEndApplicationNotesTrigger(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndApplicationNotesTrigger(result);
            return null;
        }
        
        private void OnApplicationNotesTriggerCompleted(object state) {
            if ((this.ApplicationNotesTriggerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplicationNotesTriggerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplicationNotesTriggerAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string Content) {
            this.ApplicationNotesTriggerAsync(UserAndForm, SystemCode, Content, null);
        }
        
        public void ApplicationNotesTriggerAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string Content, object userState) {
            if ((this.onBeginApplicationNotesTriggerDelegate == null)) {
                this.onBeginApplicationNotesTriggerDelegate = new BeginOperationDelegate(this.OnBeginApplicationNotesTrigger);
            }
            if ((this.onEndApplicationNotesTriggerDelegate == null)) {
                this.onEndApplicationNotesTriggerDelegate = new EndOperationDelegate(this.OnEndApplicationNotesTrigger);
            }
            if ((this.onApplicationNotesTriggerCompletedDelegate == null)) {
                this.onApplicationNotesTriggerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplicationNotesTriggerCompleted);
            }
            base.InvokeAsync(this.onBeginApplicationNotesTriggerDelegate, new object[] {
                        UserAndForm,
                        SystemCode,
                        Content}, this.onEndApplicationNotesTriggerDelegate, this.onApplicationNotesTriggerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginCustomFlowDefineList(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, ref int pageCount, string strCompanyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCustomFlowDefineList(pageIndex, pageSize, sort, filterString, paras, ref pageCount, strCompanyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE> SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndCustomFlowDefineList(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndCustomFlowDefineList(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginCustomFlowDefineList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<object> paras = ((System.Collections.ObjectModel.ObservableCollection<object>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            string strCompanyID = ((string)(inValues[6]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginCustomFlowDefineList(pageIndex, pageSize, sort, filterString, paras, ref pageCount, strCompanyID, callback, asyncState);
        }
        
        private object[] OnEndCustomFlowDefineList(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE> retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndCustomFlowDefineList(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnCustomFlowDefineListCompleted(object state) {
            if ((this.CustomFlowDefineListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CustomFlowDefineListCompleted(this, new CustomFlowDefineListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CustomFlowDefineListAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, int pageCount, string strCompanyID) {
            this.CustomFlowDefineListAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, strCompanyID, null);
        }
        
        public void CustomFlowDefineListAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, int pageCount, string strCompanyID, object userState) {
            if ((this.onBeginCustomFlowDefineListDelegate == null)) {
                this.onBeginCustomFlowDefineListDelegate = new BeginOperationDelegate(this.OnBeginCustomFlowDefineList);
            }
            if ((this.onEndCustomFlowDefineListDelegate == null)) {
                this.onEndCustomFlowDefineListDelegate = new EndOperationDelegate(this.OnEndCustomFlowDefineList);
            }
            if ((this.onCustomFlowDefineListCompletedDelegate == null)) {
                this.onCustomFlowDefineListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCustomFlowDefineListCompleted);
            }
            base.InvokeAsync(this.onBeginCustomFlowDefineListDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount,
                        strCompanyID}, this.onEndCustomFlowDefineListDelegate, this.onCustomFlowDefineListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginCallCustomFlowTrigger(SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE define, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCallCustomFlowTrigger(define, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndCallCustomFlowTrigger(System.IAsyncResult result) {
            base.Channel.EndCallCustomFlowTrigger(result);
        }
        
        private System.IAsyncResult OnBeginCallCustomFlowTrigger(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE define = ((SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginCallCustomFlowTrigger(define, callback, asyncState);
        }
        
        private object[] OnEndCallCustomFlowTrigger(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndCallCustomFlowTrigger(result);
            return null;
        }
        
        private void OnCallCustomFlowTriggerCompleted(object state) {
            if ((this.CallCustomFlowTriggerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CallCustomFlowTriggerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CallCustomFlowTriggerAsync(SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE define) {
            this.CallCustomFlowTriggerAsync(define, null);
        }
        
        public void CallCustomFlowTriggerAsync(SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE define, object userState) {
            if ((this.onBeginCallCustomFlowTriggerDelegate == null)) {
                this.onBeginCallCustomFlowTriggerDelegate = new BeginOperationDelegate(this.OnBeginCallCustomFlowTrigger);
            }
            if ((this.onEndCallCustomFlowTriggerDelegate == null)) {
                this.onEndCallCustomFlowTriggerDelegate = new EndOperationDelegate(this.OnEndCallCustomFlowTrigger);
            }
            if ((this.onCallCustomFlowTriggerCompletedDelegate == null)) {
                this.onCallCustomFlowTriggerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCallCustomFlowTriggerCompleted);
            }
            base.InvokeAsync(this.onBeginCallCustomFlowTriggerDelegate, new object[] {
                        define}, this.onEndCallCustomFlowTriggerDelegate, this.onCallCustomFlowTriggerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginSendMail(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams> mailParams, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendMail(mailParams, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndSendMail(System.IAsyncResult result) {
            base.Channel.EndSendMail(result);
        }
        
        private System.IAsyncResult OnBeginSendMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams> mailParams = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams>)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginSendMail(mailParams, callback, asyncState);
        }
        
        private object[] OnEndSendMail(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndSendMail(result);
            return null;
        }
        
        private void OnSendMailCompleted(object state) {
            if ((this.SendMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendMailAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams> mailParams) {
            this.SendMailAsync(mailParams, null);
        }
        
        public void SendMailAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams> mailParams, object userState) {
            if ((this.onBeginSendMailDelegate == null)) {
                this.onBeginSendMailDelegate = new BeginOperationDelegate(this.OnBeginSendMail);
            }
            if ((this.onEndSendMailDelegate == null)) {
                this.onEndSendMailDelegate = new EndOperationDelegate(this.OnEndSendMail);
            }
            if ((this.onSendMailCompletedDelegate == null)) {
                this.onSendMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMailCompleted);
            }
            base.InvokeAsync(this.onBeginSendMailDelegate, new object[] {
                        mailParams}, this.onEndSendMailDelegate, this.onSendMailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginSendMailParam(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams> mailParams, string mailType, string mailParameter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendMailParam(mailParams, mailType, mailParameter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndSendMailParam(System.IAsyncResult result) {
            return base.Channel.EndSendMailParam(result);
        }
        
        private System.IAsyncResult OnBeginSendMailParam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams> mailParams = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams>)(inValues[0]));
            string mailType = ((string)(inValues[1]));
            string mailParameter = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginSendMailParam(mailParams, mailType, mailParameter, callback, asyncState);
        }
        
        private object[] OnEndSendMailParam(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndSendMailParam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendMailParamCompleted(object state) {
            if ((this.SendMailParamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendMailParamCompleted(this, new SendMailParamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendMailParamAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams> mailParams, string mailType, string mailParameter) {
            this.SendMailParamAsync(mailParams, mailType, mailParameter, null);
        }
        
        public void SendMailParamAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams> mailParams, string mailType, string mailParameter, object userState) {
            if ((this.onBeginSendMailParamDelegate == null)) {
                this.onBeginSendMailParamDelegate = new BeginOperationDelegate(this.OnBeginSendMailParam);
            }
            if ((this.onEndSendMailParamDelegate == null)) {
                this.onEndSendMailParamDelegate = new EndOperationDelegate(this.OnEndSendMailParam);
            }
            if ((this.onSendMailParamCompletedDelegate == null)) {
                this.onSendMailParamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMailParamCompleted);
            }
            base.InvokeAsync(this.onBeginSendMailParamDelegate, new object[] {
                        mailParams,
                        mailType,
                        mailParameter}, this.onEndSendMailParamDelegate, this.onSendMailParamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginFlowCancel(string strFlowXML, string strAppXml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFlowCancel(strFlowXML, strAppXml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndFlowCancel(System.IAsyncResult result) {
            return base.Channel.EndFlowCancel(result);
        }
        
        private System.IAsyncResult OnBeginFlowCancel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strFlowXML = ((string)(inValues[0]));
            string strAppXml = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginFlowCancel(strFlowXML, strAppXml, callback, asyncState);
        }
        
        private object[] OnEndFlowCancel(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndFlowCancel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFlowCancelCompleted(object state) {
            if ((this.FlowCancelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FlowCancelCompleted(this, new FlowCancelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FlowCancelAsync(string strFlowXML, string strAppXml) {
            this.FlowCancelAsync(strFlowXML, strAppXml, null);
        }
        
        public void FlowCancelAsync(string strFlowXML, string strAppXml, object userState) {
            if ((this.onBeginFlowCancelDelegate == null)) {
                this.onBeginFlowCancelDelegate = new BeginOperationDelegate(this.OnBeginFlowCancel);
            }
            if ((this.onEndFlowCancelDelegate == null)) {
                this.onEndFlowCancelDelegate = new EndOperationDelegate(this.OnEndFlowCancel);
            }
            if ((this.onFlowCancelCompletedDelegate == null)) {
                this.onFlowCancelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFlowCancelCompleted);
            }
            base.InvokeAsync(this.onBeginFlowCancelDelegate, new object[] {
                        strFlowXML,
                        strAppXml}, this.onEndFlowCancelDelegate, this.onFlowCancelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginFlowConsultati(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string strTitle, string strFlowXML, string strAppXml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFlowConsultati(UserAndForm, strTitle, strFlowXML, strAppXml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndFlowConsultati(System.IAsyncResult result) {
            return base.Channel.EndFlowConsultati(result);
        }
        
        private System.IAsyncResult OnBeginFlowConsultati(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg>)(inValues[0]));
            string strTitle = ((string)(inValues[1]));
            string strFlowXML = ((string)(inValues[2]));
            string strAppXml = ((string)(inValues[3]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginFlowConsultati(UserAndForm, strTitle, strFlowXML, strAppXml, callback, asyncState);
        }
        
        private object[] OnEndFlowConsultati(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndFlowConsultati(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFlowConsultatiCompleted(object state) {
            if ((this.FlowConsultatiCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FlowConsultatiCompleted(this, new FlowConsultatiCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FlowConsultatiAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string strTitle, string strFlowXML, string strAppXml) {
            this.FlowConsultatiAsync(UserAndForm, strTitle, strFlowXML, strAppXml, null);
        }
        
        public void FlowConsultatiAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string strTitle, string strFlowXML, string strAppXml, object userState) {
            if ((this.onBeginFlowConsultatiDelegate == null)) {
                this.onBeginFlowConsultatiDelegate = new BeginOperationDelegate(this.OnBeginFlowConsultati);
            }
            if ((this.onEndFlowConsultatiDelegate == null)) {
                this.onEndFlowConsultatiDelegate = new EndOperationDelegate(this.OnEndFlowConsultati);
            }
            if ((this.onFlowConsultatiCompletedDelegate == null)) {
                this.onFlowConsultatiCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFlowConsultatiCompleted);
            }
            base.InvokeAsync(this.onBeginFlowConsultatiDelegate, new object[] {
                        UserAndForm,
                        strTitle,
                        strFlowXML,
                        strAppXml}, this.onEndFlowConsultatiDelegate, this.onFlowConsultatiCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginFlowConsultatiClose(string strSystemCode, string strFormID, string strReceiveUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFlowConsultatiClose(strSystemCode, strFormID, strReceiveUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndFlowConsultatiClose(System.IAsyncResult result) {
            base.Channel.EndFlowConsultatiClose(result);
        }
        
        private System.IAsyncResult OnBeginFlowConsultatiClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strSystemCode = ((string)(inValues[0]));
            string strFormID = ((string)(inValues[1]));
            string strReceiveUser = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginFlowConsultatiClose(strSystemCode, strFormID, strReceiveUser, callback, asyncState);
        }
        
        private object[] OnEndFlowConsultatiClose(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndFlowConsultatiClose(result);
            return null;
        }
        
        private void OnFlowConsultatiCloseCompleted(object state) {
            if ((this.FlowConsultatiCloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FlowConsultatiCloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FlowConsultatiCloseAsync(string strSystemCode, string strFormID, string strReceiveUser) {
            this.FlowConsultatiCloseAsync(strSystemCode, strFormID, strReceiveUser, null);
        }
        
        public void FlowConsultatiCloseAsync(string strSystemCode, string strFormID, string strReceiveUser, object userState) {
            if ((this.onBeginFlowConsultatiCloseDelegate == null)) {
                this.onBeginFlowConsultatiCloseDelegate = new BeginOperationDelegate(this.OnBeginFlowConsultatiClose);
            }
            if ((this.onEndFlowConsultatiCloseDelegate == null)) {
                this.onEndFlowConsultatiCloseDelegate = new EndOperationDelegate(this.OnEndFlowConsultatiClose);
            }
            if ((this.onFlowConsultatiCloseCompletedDelegate == null)) {
                this.onFlowConsultatiCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFlowConsultatiCloseCompleted);
            }
            base.InvokeAsync(this.onBeginFlowConsultatiCloseDelegate, new object[] {
                        strSystemCode,
                        strFormID,
                        strReceiveUser}, this.onEndFlowConsultatiCloseDelegate, this.onFlowConsultatiCloseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginTaskDelete(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string strSystemCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTaskDelete(UserAndForm, strSystemCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndTaskDelete(System.IAsyncResult result) {
            base.Channel.EndTaskDelete(result);
        }
        
        private System.IAsyncResult OnBeginTaskDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg>)(inValues[0]));
            string strSystemCode = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginTaskDelete(UserAndForm, strSystemCode, callback, asyncState);
        }
        
        private object[] OnEndTaskDelete(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndTaskDelete(result);
            return null;
        }
        
        private void OnTaskDeleteCompleted(object state) {
            if ((this.TaskDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TaskDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TaskDeleteAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string strSystemCode) {
            this.TaskDeleteAsync(UserAndForm, strSystemCode, null);
        }
        
        public void TaskDeleteAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string strSystemCode, object userState) {
            if ((this.onBeginTaskDeleteDelegate == null)) {
                this.onBeginTaskDeleteDelegate = new BeginOperationDelegate(this.OnBeginTaskDelete);
            }
            if ((this.onEndTaskDeleteDelegate == null)) {
                this.onEndTaskDeleteDelegate = new EndOperationDelegate(this.OnEndTaskDelete);
            }
            if ((this.onTaskDeleteCompletedDelegate == null)) {
                this.onTaskDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTaskDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginTaskDeleteDelegate, new object[] {
                        UserAndForm,
                        strSystemCode}, this.onEndTaskDeleteDelegate, this.onTaskDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginTaskDeleteALL(string strSystemCode, string strFormID, string strReceiveID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTaskDeleteALL(strSystemCode, strFormID, strReceiveID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndTaskDeleteALL(System.IAsyncResult result) {
            base.Channel.EndTaskDeleteALL(result);
        }
        
        private System.IAsyncResult OnBeginTaskDeleteALL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strSystemCode = ((string)(inValues[0]));
            string strFormID = ((string)(inValues[1]));
            string strReceiveID = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginTaskDeleteALL(strSystemCode, strFormID, strReceiveID, callback, asyncState);
        }
        
        private object[] OnEndTaskDeleteALL(System.IAsyncResult result) {
            ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndTaskDeleteALL(result);
            return null;
        }
        
        private void OnTaskDeleteALLCompleted(object state) {
            if ((this.TaskDeleteALLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TaskDeleteALLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TaskDeleteALLAsync(string strSystemCode, string strFormID, string strReceiveID) {
            this.TaskDeleteALLAsync(strSystemCode, strFormID, strReceiveID, null);
        }
        
        public void TaskDeleteALLAsync(string strSystemCode, string strFormID, string strReceiveID, object userState) {
            if ((this.onBeginTaskDeleteALLDelegate == null)) {
                this.onBeginTaskDeleteALLDelegate = new BeginOperationDelegate(this.OnBeginTaskDeleteALL);
            }
            if ((this.onEndTaskDeleteALLDelegate == null)) {
                this.onEndTaskDeleteALLDelegate = new EndOperationDelegate(this.OnEndTaskDeleteALL);
            }
            if ((this.onTaskDeleteALLCompletedDelegate == null)) {
                this.onTaskDeleteALLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTaskDeleteALLCompleted);
            }
            base.InvokeAsync(this.onBeginTaskDeleteALLDelegate, new object[] {
                        strSystemCode,
                        strFormID,
                        strReceiveID}, this.onEndTaskDeleteALLDelegate, this.onTaskDeleteALLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginSendTaskMessage(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> list, string SystemCode, string ModelCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendTaskMessage(list, SystemCode, ModelCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndSendTaskMessage(System.IAsyncResult result) {
            return base.Channel.EndSendTaskMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendTaskMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> list = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg>)(inValues[0]));
            string SystemCode = ((string)(inValues[1]));
            string ModelCode = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginSendTaskMessage(list, SystemCode, ModelCode, callback, asyncState);
        }
        
        private object[] OnEndSendTaskMessage(System.IAsyncResult result) {
            string retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndSendTaskMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendTaskMessageCompleted(object state) {
            if ((this.SendTaskMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendTaskMessageCompleted(this, new SendTaskMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendTaskMessageAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> list, string SystemCode, string ModelCode) {
            this.SendTaskMessageAsync(list, SystemCode, ModelCode, null);
        }
        
        public void SendTaskMessageAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> list, string SystemCode, string ModelCode, object userState) {
            if ((this.onBeginSendTaskMessageDelegate == null)) {
                this.onBeginSendTaskMessageDelegate = new BeginOperationDelegate(this.OnBeginSendTaskMessage);
            }
            if ((this.onEndSendTaskMessageDelegate == null)) {
                this.onEndSendTaskMessageDelegate = new EndOperationDelegate(this.OnEndSendTaskMessage);
            }
            if ((this.onSendTaskMessageCompletedDelegate == null)) {
                this.onSendTaskMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendTaskMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendTaskMessageDelegate, new object[] {
                        list,
                        SystemCode,
                        ModelCode}, this.onEndSendTaskMessageDelegate, this.onSendTaskMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.BeginWFAddTimingTrigger(SMT.Saas.Tools.EngineWS.T_WF_TIMINGTRIGGERACTIVITY entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWFAddTimingTrigger(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction.EndWFAddTimingTrigger(System.IAsyncResult result) {
            return base.Channel.EndWFAddTimingTrigger(result);
        }
        
        private System.IAsyncResult OnBeginWFAddTimingTrigger(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.EngineWS.T_WF_TIMINGTRIGGERACTIVITY entity = ((SMT.Saas.Tools.EngineWS.T_WF_TIMINGTRIGGERACTIVITY)(inValues[0]));
            return ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).BeginWFAddTimingTrigger(entity, callback, asyncState);
        }
        
        private object[] OnEndWFAddTimingTrigger(System.IAsyncResult result) {
            string retVal = ((SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction)(this)).EndWFAddTimingTrigger(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWFAddTimingTriggerCompleted(object state) {
            if ((this.WFAddTimingTriggerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WFAddTimingTriggerCompleted(this, new WFAddTimingTriggerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WFAddTimingTriggerAsync(SMT.Saas.Tools.EngineWS.T_WF_TIMINGTRIGGERACTIVITY entity) {
            this.WFAddTimingTriggerAsync(entity, null);
        }
        
        public void WFAddTimingTriggerAsync(SMT.Saas.Tools.EngineWS.T_WF_TIMINGTRIGGERACTIVITY entity, object userState) {
            if ((this.onBeginWFAddTimingTriggerDelegate == null)) {
                this.onBeginWFAddTimingTriggerDelegate = new BeginOperationDelegate(this.OnBeginWFAddTimingTrigger);
            }
            if ((this.onEndWFAddTimingTriggerDelegate == null)) {
                this.onEndWFAddTimingTriggerDelegate = new EndOperationDelegate(this.OnEndWFAddTimingTrigger);
            }
            if ((this.onWFAddTimingTriggerCompletedDelegate == null)) {
                this.onWFAddTimingTriggerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWFAddTimingTriggerCompleted);
            }
            base.InvokeAsync(this.onBeginWFAddTimingTriggerDelegate, new object[] {
                        entity}, this.onEndWFAddTimingTriggerDelegate, this.onWFAddTimingTriggerCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction CreateChannel() {
            return new EngineWcfGlobalFunctionClientChannel(this);
        }
        
        private class EngineWcfGlobalFunctionClientChannel : ChannelBase<SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction>, SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction {
            
            public EngineWcfGlobalFunctionClientChannel(System.ServiceModel.ClientBase<SMT.Saas.Tools.EngineWS.IEngineWcfGlobalFunction> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddTask(SMT.Saas.Tools.EngineWS.T_WF_DOTASK dask, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = dask;
                System.IAsyncResult _result = base.BeginInvoke("AddTask", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAddTask(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AddTask", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDoTaskEntity(string orderID, string receiveUserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = orderID;
                _args[1] = receiveUserID;
                System.IAsyncResult _result = base.BeginInvoke("GetDoTaskEntity", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.EngineWS.T_WF_DOTASK EndGetDoTaskEntity(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.EngineWS.T_WF_DOTASK _result = ((SMT.Saas.Tools.EngineWS.T_WF_DOTASK)(base.EndInvoke("GetDoTaskEntity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteTrigger(string orderID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = orderID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteTrigger", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteTrigger(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteTrigger", _args, result);
            }
            
            public System.IAsyncResult BeginAddDoDask(string companyID, string orderID, string systemCode, string modelCode, string modelName, string strXML, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = companyID;
                _args[1] = orderID;
                _args[2] = systemCode;
                _args[3] = modelCode;
                _args[4] = modelName;
                _args[5] = strXML;
                _args[6] = msgType;
                System.IAsyncResult _result = base.BeginInvoke("AddDoDask", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddDoDask(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddDoDask", _args, result);
            }
            
            public System.IAsyncResult BeginReturnUserInfoDask(string companyID, string orderID, string systemCode, string modelCode, string modelName, string strXML, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = companyID;
                _args[1] = orderID;
                _args[2] = systemCode;
                _args[3] = modelCode;
                _args[4] = modelName;
                _args[5] = strXML;
                _args[6] = msgType;
                System.IAsyncResult _result = base.BeginInvoke("ReturnUserInfoDask", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.UserInfo> EndReturnUserInfoDask(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.UserInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.UserInfo>)(base.EndInvoke("ReturnUserInfoDask", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginApplicationMsgTriggerNew(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string companyID, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = UserAndForm;
                _args[1] = companyID;
                _args[2] = SystemCode;
                _args[3] = ModelCode;
                _args[4] = strXml;
                _args[5] = msgType;
                System.IAsyncResult _result = base.BeginInvoke("ApplicationMsgTriggerNew", _args, callback, asyncState);
                return _result;
            }
            
            public void EndApplicationMsgTriggerNew(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ApplicationMsgTriggerNew", _args, result);
            }
            
            public System.IAsyncResult BeginGetDoTaskNumber(string userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userid;
                System.IAsyncResult _result = base.BeginInvoke("GetDoTaskNumber", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetDoTaskNumber(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetDoTaskNumber", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDoTaskNumberByIM(string userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userid;
                System.IAsyncResult _result = base.BeginInvoke("GetDoTaskNumberByIM", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetDoTaskNumberByIM(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetDoTaskNumberByIM", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetForwardHistory(string modelCode, string formID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = modelCode;
                _args[1] = formID;
                System.IAsyncResult _result = base.BeginInvoke("GetForwardHistory", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_WF_FORWARDHISTORY> EndGetForwardHistory(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_WF_FORWARDHISTORY> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_WF_FORWARDHISTORY>)(base.EndInvoke("GetForwardHistory", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTaskCacheReflesh(string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("TaskCacheReflesh", _args, callback, asyncState);
                return _result;
            }
            
            public void EndTaskCacheReflesh(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("TaskCacheReflesh", _args, result);
            }
            
            public System.IAsyncResult BeginCacheReflesh(string userID, bool isHasNewBill, bool isHasNewTask, string remark, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = userID;
                _args[1] = isHasNewBill;
                _args[2] = isHasNewTask;
                _args[3] = remark;
                System.IAsyncResult _result = base.BeginInvoke("CacheReflesh", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCacheReflesh(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CacheReflesh", _args, result);
            }
            
            public System.IAsyncResult BeginRemoveCachUser(string userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("RemoveCachUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveCachUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RemoveCachUser", _args, result);
            }
            
            public System.IAsyncResult BeginRemoveCache(string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("RemoveCache", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveCache(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveCache", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveFlowTriggerData(string strFlowMessage, string strBOObject, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = strFlowMessage;
                _args[1] = strBOObject;
                System.IAsyncResult _result = base.BeginInvoke("SaveFlowTriggerData", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSaveFlowTriggerData(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SaveFlowTriggerData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPendingTasksParmsPageIndex(SMT.Saas.Tools.EngineWS.MsgParms msgParams, ref int rowCount, ref int pageCount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = msgParams;
                _args[1] = rowCount;
                _args[2] = pageCount;
                System.IAsyncResult _result = base.BeginInvoke("PendingTasksParmsPageIndex", _args, callback, asyncState);
                rowCount = ((int)(_args[1]));
                pageCount = ((int)(_args[2]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> EndPendingTasksParmsPageIndex(ref int rowCount, ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[2];
                _args[0] = rowCount;
                _args[1] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>)(base.EndInvoke("PendingTasksParmsPageIndex", _args, result)));
                rowCount = ((int)(_args[0]));
                pageCount = ((int)(_args[1]));
                return _result;
            }
            
            public System.IAsyncResult BeginPendingTasksParmsPageIndexForMobile(SMT.Saas.Tools.EngineWS.MsgParms msgParams, ref int rowCount, ref int pageCount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = msgParams;
                _args[1] = rowCount;
                _args[2] = pageCount;
                System.IAsyncResult _result = base.BeginInvoke("PendingTasksParmsPageIndexForMobile", _args, callback, asyncState);
                rowCount = ((int)(_args[1]));
                pageCount = ((int)(_args[2]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> EndPendingTasksParmsPageIndexForMobile(ref int rowCount, ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[2];
                _args[0] = rowCount;
                _args[1] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>)(base.EndInvoke("PendingTasksParmsPageIndexForMobile", _args, result)));
                rowCount = ((int)(_args[0]));
                pageCount = ((int)(_args[1]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPendingTaskPrevNext(SMT.Saas.Tools.EngineWS.MsgParms msgParms, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = msgParms;
                System.IAsyncResult _result = base.BeginInvoke("GetPendingTaskPrevNext", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> EndGetPendingTaskPrevNext(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> _result = ((System.Collections.Generic.Dictionary<string, SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>)(base.EndInvoke("GetPendingTaskPrevNext", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPendingCacheTasksParmsPageIndex(SMT.Saas.Tools.EngineWS.MsgParms msgParams, ref bool IsAutofresh, ref bool HaveNewTask, ref int rowCount, ref int pageCount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = msgParams;
                _args[1] = IsAutofresh;
                _args[2] = HaveNewTask;
                _args[3] = rowCount;
                _args[4] = pageCount;
                System.IAsyncResult _result = base.BeginInvoke("PendingCacheTasksParmsPageIndex", _args, callback, asyncState);
                IsAutofresh = ((bool)(_args[1]));
                HaveNewTask = ((bool)(_args[2]));
                rowCount = ((int)(_args[3]));
                pageCount = ((int)(_args[4]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> EndPendingCacheTasksParmsPageIndex(ref bool IsAutofresh, ref bool HaveNewTask, ref int rowCount, ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[4];
                _args[0] = IsAutofresh;
                _args[1] = HaveNewTask;
                _args[2] = rowCount;
                _args[3] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>)(base.EndInvoke("PendingCacheTasksParmsPageIndex", _args, result)));
                IsAutofresh = ((bool)(_args[0]));
                HaveNewTask = ((bool)(_args[1]));
                rowCount = ((int)(_args[2]));
                pageCount = ((int)(_args[3]));
                return _result;
            }
            
            public System.IAsyncResult BeginPendingMainTasksParms(SMT.Saas.Tools.EngineWS.MsgParms msgParams, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = msgParams;
                System.IAsyncResult _result = base.BeginInvoke("PendingMainTasksParms", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> EndPendingMainTasksParms(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>)(base.EndInvoke("PendingMainTasksParms", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPendingCacheMainTasksParms(SMT.Saas.Tools.EngineWS.MsgParms msgParams, ref bool IsAutofresh, ref bool HaveNewTask, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = msgParams;
                _args[1] = IsAutofresh;
                _args[2] = HaveNewTask;
                System.IAsyncResult _result = base.BeginInvoke("PendingCacheMainTasksParms", _args, callback, asyncState);
                IsAutofresh = ((bool)(_args[1]));
                HaveNewTask = ((bool)(_args[2]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> EndPendingCacheMainTasksParms(ref bool IsAutofresh, ref bool HaveNewTask, System.IAsyncResult result) {
                object[] _args = new object[2];
                _args[0] = IsAutofresh;
                _args[1] = HaveNewTask;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST>)(base.EndInvoke("PendingCacheMainTasksParms", _args, result)));
                IsAutofresh = ((bool)(_args[0]));
                HaveNewTask = ((bool)(_args[1]));
                return _result;
            }
            
            public System.IAsyncResult BeginPendingDetailByID(string strMsgID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = strMsgID;
                System.IAsyncResult _result = base.BeginInvoke("PendingDetailByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST EndPendingDetailByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST _result = ((SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST)(base.EndInvoke("PendingDetailByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPendingDetailTasks(string strMsgID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = strMsgID;
                System.IAsyncResult _result = base.BeginInvoke("PendingDetailTasks", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST EndPendingDetailTasks(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST _result = ((SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST)(base.EndInvoke("PendingDetailTasks", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPendingDetailTasksByPhone(string strMsgID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = strMsgID;
                System.IAsyncResult _result = base.BeginInvoke("PendingDetailTasksByPhone", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST EndPendingDetailTasksByPhone(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST _result = ((SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST)(base.EndInvoke("PendingDetailTasksByPhone", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPendingDetailTasksByOrderNodeCodeForMobile(string orderNodeCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = orderNodeCode;
                System.IAsyncResult _result = base.BeginInvoke("PendingDetailTasksByOrderNodeCodeForMobile", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST EndPendingDetailTasksByOrderNodeCodeForMobile(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST _result = ((SMT.Saas.Tools.EngineWS.T_FLOW_ENGINEMSGLIST)(base.EndInvoke("PendingDetailTasksByOrderNodeCodeForMobile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEngineNotes(string strUserID, string strStatus, int iTop, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = strUserID;
                _args[1] = strStatus;
                _args[2] = iTop;
                System.IAsyncResult _result = base.BeginInvoke("EngineNotes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINENOTES> EndEngineNotes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINENOTES> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_ENGINENOTES>)(base.EndInvoke("EngineNotes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCancelEventTriggerData(string strApplicationOrderCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = strApplicationOrderCode;
                System.IAsyncResult _result = base.BeginInvoke("CancelEventTriggerData", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCancelEventTriggerData(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CancelEventTriggerData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveEventData(string strEventXml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = strEventXml;
                System.IAsyncResult _result = base.BeginInvoke("SaveEventData", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveEventData(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveEventData", _args, result);
            }
            
            public System.IAsyncResult BeginMsgTrigger(System.Collections.ObjectModel.ObservableCollection<string> recevieUser, string SystemCode, string MsgKey, string ID, string strXml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = recevieUser;
                _args[1] = SystemCode;
                _args[2] = MsgKey;
                _args[3] = ID;
                _args[4] = strXml;
                System.IAsyncResult _result = base.BeginInvoke("MsgTrigger", _args, callback, asyncState);
                return _result;
            }
            
            public void EndMsgTrigger(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("MsgTrigger", _args, result);
            }
            
            public System.IAsyncResult BeginNotesSend(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserAndContent> List, string SystemCode, string strFormID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = List;
                _args[1] = SystemCode;
                _args[2] = strFormID;
                System.IAsyncResult _result = base.BeginInvoke("NotesSend", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNotesSend(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("NotesSend", _args, result);
            }
            
            public System.IAsyncResult BeginTaskMsgClose(string strSystemCode, string strFormID, string strReceiveUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = strSystemCode;
                _args[1] = strFormID;
                _args[2] = strReceiveUser;
                System.IAsyncResult _result = base.BeginInvoke("TaskMsgClose", _args, callback, asyncState);
                return _result;
            }
            
            public void EndTaskMsgClose(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("TaskMsgClose", _args, result);
            }
            
            public System.IAsyncResult BeginCloseDoTask(System.Collections.ObjectModel.ObservableCollection<string> listOrderID, string strModelCode, string strReceiveUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = listOrderID;
                _args[1] = strModelCode;
                _args[2] = strReceiveUser;
                System.IAsyncResult _result = base.BeginInvoke("CloseDoTask", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCloseDoTask(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CloseDoTask", _args, result);
            }
            
            public System.IAsyncResult BeginMsgListClose(string strSystemCode, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.ReceiveUserForm> List, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = strSystemCode;
                _args[1] = List;
                System.IAsyncResult _result = base.BeginInvoke("MsgListClose", _args, callback, asyncState);
                return _result;
            }
            
            public void EndMsgListClose(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("MsgListClose", _args, result);
            }
            
            public System.IAsyncResult BeginModelMsgClose(string strModelCode, string strReceiveUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = strModelCode;
                _args[1] = strReceiveUser;
                System.IAsyncResult _result = base.BeginInvoke("ModelMsgClose", _args, callback, asyncState);
                return _result;
            }
            
            public void EndModelMsgClose(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ModelMsgClose", _args, result);
            }
            
            public System.IAsyncResult BeginClosedDoTaskFromID(string strModelCode, string fromID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = strModelCode;
                _args[1] = fromID;
                System.IAsyncResult _result = base.BeginInvoke("ClosedDoTaskFromID", _args, callback, asyncState);
                return _result;
            }
            
            public void EndClosedDoTaskFromID(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ClosedDoTaskFromID", _args, result);
            }
            
            public System.IAsyncResult BeginMsgClose(string strMessageID, string strEventID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = strMessageID;
                _args[1] = strEventID;
                System.IAsyncResult _result = base.BeginInvoke("MsgClose", _args, callback, asyncState);
                return _result;
            }
            
            public void EndMsgClose(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("MsgClose", _args, result);
            }
            
            public System.IAsyncResult BeginApplicationMsgTrigger(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = UserAndForm;
                _args[1] = SystemCode;
                _args[2] = ModelCode;
                _args[3] = strXml;
                _args[4] = msgType;
                System.IAsyncResult _result = base.BeginInvoke("ApplicationMsgTrigger", _args, callback, asyncState);
                return _result;
            }
            
            public void EndApplicationMsgTrigger(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ApplicationMsgTrigger", _args, result);
            }
            
            public System.IAsyncResult BeginApplicationMsgTriggerCustom(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, string messageBody, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = UserAndForm;
                _args[1] = SystemCode;
                _args[2] = ModelCode;
                _args[3] = strXml;
                _args[4] = msgType;
                _args[5] = messageBody;
                System.IAsyncResult _result = base.BeginInvoke("ApplicationMsgTriggerCustom", _args, callback, asyncState);
                return _result;
            }
            
            public void EndApplicationMsgTriggerCustom(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ApplicationMsgTriggerCustom", _args, result);
            }
            
            public System.IAsyncResult BeginApplicationEngineTrigger(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string ModelCode, string strCompanyID, string strXml, SMT.Saas.Tools.EngineWS.MsgType msgType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = UserAndForm;
                _args[1] = SystemCode;
                _args[2] = ModelCode;
                _args[3] = strCompanyID;
                _args[4] = strXml;
                _args[5] = msgType;
                System.IAsyncResult _result = base.BeginInvoke("ApplicationEngineTrigger", _args, callback, asyncState);
                return _result;
            }
            
            public void EndApplicationEngineTrigger(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ApplicationEngineTrigger", _args, result);
            }
            
            public System.IAsyncResult BeginAppMsgTrigger(string ReceiveUserID, string strFormID, string MsgContent, string ModelCode, string strXml, string strNewGuid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = ReceiveUserID;
                _args[1] = strFormID;
                _args[2] = MsgContent;
                _args[3] = ModelCode;
                _args[4] = strXml;
                _args[5] = strNewGuid;
                System.IAsyncResult _result = base.BeginInvoke("AppMsgTrigger", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAppMsgTrigger(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AppMsgTrigger", _args, result);
            }
            
            public System.IAsyncResult BeginApplicationNotesTrigger(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string SystemCode, string Content, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = UserAndForm;
                _args[1] = SystemCode;
                _args[2] = Content;
                System.IAsyncResult _result = base.BeginInvoke("ApplicationNotesTrigger", _args, callback, asyncState);
                return _result;
            }
            
            public void EndApplicationNotesTrigger(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ApplicationNotesTrigger", _args, result);
            }
            
            public System.IAsyncResult BeginCustomFlowDefineList(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, ref int pageCount, string strCompanyID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                _args[6] = strCompanyID;
                System.IAsyncResult _result = base.BeginInvoke("CustomFlowDefineList", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE> EndCustomFlowDefineList(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE>)(base.EndInvoke("CustomFlowDefineList", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginCallCustomFlowTrigger(SMT.Saas.Tools.EngineWS.T_FLOW_CUSTOMFLOWDEFINE define, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = define;
                System.IAsyncResult _result = base.BeginInvoke("CallCustomFlowTrigger", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCallCustomFlowTrigger(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CallCustomFlowTrigger", _args, result);
            }
            
            public System.IAsyncResult BeginSendMail(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams> mailParams, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = mailParams;
                System.IAsyncResult _result = base.BeginInvoke("SendMail", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendMail(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendMail", _args, result);
            }
            
            public System.IAsyncResult BeginSendMailParam(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.MailParams> mailParams, string mailType, string mailParameter, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = mailParams;
                _args[1] = mailType;
                _args[2] = mailParameter;
                System.IAsyncResult _result = base.BeginInvoke("SendMailParam", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSendMailParam(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SendMailParam", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFlowCancel(string strFlowXML, string strAppXml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = strFlowXML;
                _args[1] = strAppXml;
                System.IAsyncResult _result = base.BeginInvoke("FlowCancel", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndFlowCancel(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("FlowCancel", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFlowConsultati(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string strTitle, string strFlowXML, string strAppXml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = UserAndForm;
                _args[1] = strTitle;
                _args[2] = strFlowXML;
                _args[3] = strAppXml;
                System.IAsyncResult _result = base.BeginInvoke("FlowConsultati", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndFlowConsultati(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("FlowConsultati", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFlowConsultatiClose(string strSystemCode, string strFormID, string strReceiveUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = strSystemCode;
                _args[1] = strFormID;
                _args[2] = strReceiveUser;
                System.IAsyncResult _result = base.BeginInvoke("FlowConsultatiClose", _args, callback, asyncState);
                return _result;
            }
            
            public void EndFlowConsultatiClose(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("FlowConsultatiClose", _args, result);
            }
            
            public System.IAsyncResult BeginTaskDelete(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> UserAndForm, string strSystemCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UserAndForm;
                _args[1] = strSystemCode;
                System.IAsyncResult _result = base.BeginInvoke("TaskDelete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndTaskDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("TaskDelete", _args, result);
            }
            
            public System.IAsyncResult BeginTaskDeleteALL(string strSystemCode, string strFormID, string strReceiveID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = strSystemCode;
                _args[1] = strFormID;
                _args[2] = strReceiveID;
                System.IAsyncResult _result = base.BeginInvoke("TaskDeleteALL", _args, callback, asyncState);
                return _result;
            }
            
            public void EndTaskDeleteALL(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("TaskDeleteALL", _args, result);
            }
            
            public System.IAsyncResult BeginSendTaskMessage(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.EngineWS.CustomUserMsg> list, string SystemCode, string ModelCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = list;
                _args[1] = SystemCode;
                _args[2] = ModelCode;
                System.IAsyncResult _result = base.BeginInvoke("SendTaskMessage", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSendTaskMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SendTaskMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWFAddTimingTrigger(SMT.Saas.Tools.EngineWS.T_WF_TIMINGTRIGGERACTIVITY entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entity;
                System.IAsyncResult _result = base.BeginInvoke("WFAddTimingTrigger", _args, callback, asyncState);
                return _result;
            }
            
            public string EndWFAddTimingTrigger(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("WFAddTimingTrigger", _args, result)));
                return _result;
            }
        }
    }
}
