//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace SMT.Saas.Tools.PerformanceWS {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCEDETAIL))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCEDETAIL))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD))]
    public partial class EntityObject : SMT.Saas.Tools.PerformanceWS.StructuralObject {
        
        private SMT.Saas.Tools.PerformanceWS.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_HR_PERFORMANCEDETAIL", Namespace="http://schemas.datacontract.org/2004/07/SMT_HRM_EFModel", IsReference=true)]
    public partial class T_HR_PERFORMANCEDETAIL : SMT.Saas.Tools.PerformanceWS.EntityObject {
        
        private string PERFORMANCEDETAILIDField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD T_HR_KPIRECORDField;
        
        private SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIRECORDLmi1kWPo T_HR_KPIRECORDReferenceField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD T_HR_PERFORMANCERECORDField;
        
        private SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_PERFORMANCERECORDLmi1kWPo T_HR_PERFORMANCERECORDReferenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERFORMANCEDETAILID {
            get {
                return this.PERFORMANCEDETAILIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PERFORMANCEDETAILIDField, value) != true)) {
                    this.PERFORMANCEDETAILIDField = value;
                    this.RaisePropertyChanged("PERFORMANCEDETAILID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD T_HR_KPIRECORD {
            get {
                return this.T_HR_KPIRECORDField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIRECORDField, value) != true)) {
                    this.T_HR_KPIRECORDField = value;
                    this.RaisePropertyChanged("T_HR_KPIRECORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIRECORDLmi1kWPo T_HR_KPIRECORDReference {
            get {
                return this.T_HR_KPIRECORDReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIRECORDReferenceField, value) != true)) {
                    this.T_HR_KPIRECORDReferenceField = value;
                    this.RaisePropertyChanged("T_HR_KPIRECORDReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD T_HR_PERFORMANCERECORD {
            get {
                return this.T_HR_PERFORMANCERECORDField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_PERFORMANCERECORDField, value) != true)) {
                    this.T_HR_PERFORMANCERECORDField = value;
                    this.RaisePropertyChanged("T_HR_PERFORMANCERECORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_PERFORMANCERECORDLmi1kWPo T_HR_PERFORMANCERECORDReference {
            get {
                return this.T_HR_PERFORMANCERECORDReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_PERFORMANCERECORDReferenceField, value) != true)) {
                    this.T_HR_PERFORMANCERECORDReferenceField = value;
                    this.RaisePropertyChanged("T_HR_PERFORMANCERECORDReference");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_HR_KPIRECORD", Namespace="http://schemas.datacontract.org/2004/07/SMT_HRM_EFModel", IsReference=true)]
    public partial class T_HR_KPIRECORD : SMT.Saas.Tools.PerformanceWS.EntityObject {
        
        private string APPRAISEEIDField;
        
        private string APPRAISERIDField;
        
        private string BUSINESSCODEField;
        
        private string COMPLAINSTATUSField;
        
        private string CREATECOMPANYIDField;
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string FLOWDESCRIPTIONField;
        
        private string FLOWRECORDCODEField;
        
        private string KPICATEGORYField;
        
        private string KPIDESCRIPTIONField;
        
        private string KPIRECORDIDField;
        
        private System.Nullable<decimal> MANUALSCOREField;
        
        private System.Nullable<decimal> MANUALWEIGHTField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private string RANDOMPERSONIDField;
        
        private System.Nullable<decimal> RANDOMSCOREField;
        
        private System.Nullable<decimal> RANDOMWEIGHTField;
        
        private string REMARKField;
        
        private string STEPDETAILCODEField;
        
        private System.Nullable<decimal> SUMSCOREField;
        
        private System.Nullable<decimal> SYSTEMSCOREField;
        
        private System.Nullable<decimal> SYSTEMWEIGHTField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT T_HR_KPIPOINTField;
        
        private SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIPOINTLmi1kWPo T_HR_KPIPOINTReferenceField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN> T_HR_KPIRECORDCOMPLAINField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCEDETAIL> T_HR_PERFORMANCEDETAILField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPRAISEEID {
            get {
                return this.APPRAISEEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.APPRAISEEIDField, value) != true)) {
                    this.APPRAISEEIDField = value;
                    this.RaisePropertyChanged("APPRAISEEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPRAISERID {
            get {
                return this.APPRAISERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.APPRAISERIDField, value) != true)) {
                    this.APPRAISERIDField = value;
                    this.RaisePropertyChanged("APPRAISERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BUSINESSCODE {
            get {
                return this.BUSINESSCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.BUSINESSCODEField, value) != true)) {
                    this.BUSINESSCODEField = value;
                    this.RaisePropertyChanged("BUSINESSCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPLAINSTATUS {
            get {
                return this.COMPLAINSTATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPLAINSTATUSField, value) != true)) {
                    this.COMPLAINSTATUSField = value;
                    this.RaisePropertyChanged("COMPLAINSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWDESCRIPTION {
            get {
                return this.FLOWDESCRIPTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWDESCRIPTIONField, value) != true)) {
                    this.FLOWDESCRIPTIONField = value;
                    this.RaisePropertyChanged("FLOWDESCRIPTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWRECORDCODE {
            get {
                return this.FLOWRECORDCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWRECORDCODEField, value) != true)) {
                    this.FLOWRECORDCODEField = value;
                    this.RaisePropertyChanged("FLOWRECORDCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPICATEGORY {
            get {
                return this.KPICATEGORYField;
            }
            set {
                if ((object.ReferenceEquals(this.KPICATEGORYField, value) != true)) {
                    this.KPICATEGORYField = value;
                    this.RaisePropertyChanged("KPICATEGORY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPIDESCRIPTION {
            get {
                return this.KPIDESCRIPTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.KPIDESCRIPTIONField, value) != true)) {
                    this.KPIDESCRIPTIONField = value;
                    this.RaisePropertyChanged("KPIDESCRIPTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPIRECORDID {
            get {
                return this.KPIRECORDIDField;
            }
            set {
                if ((object.ReferenceEquals(this.KPIRECORDIDField, value) != true)) {
                    this.KPIRECORDIDField = value;
                    this.RaisePropertyChanged("KPIRECORDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MANUALSCORE {
            get {
                return this.MANUALSCOREField;
            }
            set {
                if ((this.MANUALSCOREField.Equals(value) != true)) {
                    this.MANUALSCOREField = value;
                    this.RaisePropertyChanged("MANUALSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MANUALWEIGHT {
            get {
                return this.MANUALWEIGHTField;
            }
            set {
                if ((this.MANUALWEIGHTField.Equals(value) != true)) {
                    this.MANUALWEIGHTField = value;
                    this.RaisePropertyChanged("MANUALWEIGHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RANDOMPERSONID {
            get {
                return this.RANDOMPERSONIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RANDOMPERSONIDField, value) != true)) {
                    this.RANDOMPERSONIDField = value;
                    this.RaisePropertyChanged("RANDOMPERSONID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RANDOMSCORE {
            get {
                return this.RANDOMSCOREField;
            }
            set {
                if ((this.RANDOMSCOREField.Equals(value) != true)) {
                    this.RANDOMSCOREField = value;
                    this.RaisePropertyChanged("RANDOMSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RANDOMWEIGHT {
            get {
                return this.RANDOMWEIGHTField;
            }
            set {
                if ((this.RANDOMWEIGHTField.Equals(value) != true)) {
                    this.RANDOMWEIGHTField = value;
                    this.RaisePropertyChanged("RANDOMWEIGHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STEPDETAILCODE {
            get {
                return this.STEPDETAILCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.STEPDETAILCODEField, value) != true)) {
                    this.STEPDETAILCODEField = value;
                    this.RaisePropertyChanged("STEPDETAILCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SUMSCORE {
            get {
                return this.SUMSCOREField;
            }
            set {
                if ((this.SUMSCOREField.Equals(value) != true)) {
                    this.SUMSCOREField = value;
                    this.RaisePropertyChanged("SUMSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SYSTEMSCORE {
            get {
                return this.SYSTEMSCOREField;
            }
            set {
                if ((this.SYSTEMSCOREField.Equals(value) != true)) {
                    this.SYSTEMSCOREField = value;
                    this.RaisePropertyChanged("SYSTEMSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SYSTEMWEIGHT {
            get {
                return this.SYSTEMWEIGHTField;
            }
            set {
                if ((this.SYSTEMWEIGHTField.Equals(value) != true)) {
                    this.SYSTEMWEIGHTField = value;
                    this.RaisePropertyChanged("SYSTEMWEIGHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT T_HR_KPIPOINT {
            get {
                return this.T_HR_KPIPOINTField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIPOINTField, value) != true)) {
                    this.T_HR_KPIPOINTField = value;
                    this.RaisePropertyChanged("T_HR_KPIPOINT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIPOINTLmi1kWPo T_HR_KPIPOINTReference {
            get {
                return this.T_HR_KPIPOINTReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIPOINTReferenceField, value) != true)) {
                    this.T_HR_KPIPOINTReferenceField = value;
                    this.RaisePropertyChanged("T_HR_KPIPOINTReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN> T_HR_KPIRECORDCOMPLAIN {
            get {
                return this.T_HR_KPIRECORDCOMPLAINField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIRECORDCOMPLAINField, value) != true)) {
                    this.T_HR_KPIRECORDCOMPLAINField = value;
                    this.RaisePropertyChanged("T_HR_KPIRECORDCOMPLAIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCEDETAIL> T_HR_PERFORMANCEDETAIL {
            get {
                return this.T_HR_PERFORMANCEDETAILField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_PERFORMANCEDETAILField, value) != true)) {
                    this.T_HR_PERFORMANCEDETAILField = value;
                    this.RaisePropertyChanged("T_HR_PERFORMANCEDETAIL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_HR_KPIPOINT", Namespace="http://schemas.datacontract.org/2004/07/SMT_HRM_EFModel", IsReference=true)]
    public partial class T_HR_KPIPOINT : SMT.Saas.Tools.PerformanceWS.EntityObject {
        
        private string BUSINESSIDField;
        
        private string CREATECOMPANYIDField;
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string FLOWIDField;
        
        private string KPIPOINTIDField;
        
        private string KPIPOINTNAMEField;
        
        private string KPIPOINTREMARKField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private string STEPIDField;
        
        private string SUMTYPEField;
        
        private string SYSTEMIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD> T_HR_KPIRECORDField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE T_HR_SCORETYPEField;
        
        private SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SCORETYPELmi1kWPo T_HR_SCORETYPEReferenceField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BUSINESSID {
            get {
                return this.BUSINESSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BUSINESSIDField, value) != true)) {
                    this.BUSINESSIDField = value;
                    this.RaisePropertyChanged("BUSINESSID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWID {
            get {
                return this.FLOWIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWIDField, value) != true)) {
                    this.FLOWIDField = value;
                    this.RaisePropertyChanged("FLOWID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPIPOINTID {
            get {
                return this.KPIPOINTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.KPIPOINTIDField, value) != true)) {
                    this.KPIPOINTIDField = value;
                    this.RaisePropertyChanged("KPIPOINTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPIPOINTNAME {
            get {
                return this.KPIPOINTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.KPIPOINTNAMEField, value) != true)) {
                    this.KPIPOINTNAMEField = value;
                    this.RaisePropertyChanged("KPIPOINTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPIPOINTREMARK {
            get {
                return this.KPIPOINTREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.KPIPOINTREMARKField, value) != true)) {
                    this.KPIPOINTREMARKField = value;
                    this.RaisePropertyChanged("KPIPOINTREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STEPID {
            get {
                return this.STEPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.STEPIDField, value) != true)) {
                    this.STEPIDField = value;
                    this.RaisePropertyChanged("STEPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUMTYPE {
            get {
                return this.SUMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.SUMTYPEField, value) != true)) {
                    this.SUMTYPEField = value;
                    this.RaisePropertyChanged("SUMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMID {
            get {
                return this.SYSTEMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMIDField, value) != true)) {
                    this.SYSTEMIDField = value;
                    this.RaisePropertyChanged("SYSTEMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD> T_HR_KPIRECORD {
            get {
                return this.T_HR_KPIRECORDField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIRECORDField, value) != true)) {
                    this.T_HR_KPIRECORDField = value;
                    this.RaisePropertyChanged("T_HR_KPIRECORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE T_HR_SCORETYPE {
            get {
                return this.T_HR_SCORETYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_SCORETYPEField, value) != true)) {
                    this.T_HR_SCORETYPEField = value;
                    this.RaisePropertyChanged("T_HR_SCORETYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SCORETYPELmi1kWPo T_HR_SCORETYPEReference {
            get {
                return this.T_HR_SCORETYPEReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_SCORETYPEReferenceField, value) != true)) {
                    this.T_HR_SCORETYPEReferenceField = value;
                    this.RaisePropertyChanged("T_HR_SCORETYPEReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_HR_SCORETYPE", Namespace="http://schemas.datacontract.org/2004/07/SMT_HRM_EFModel", IsReference=true)]
    public partial class T_HR_SCORETYPE : SMT.Saas.Tools.PerformanceWS.EntityObject {
        
        private System.Nullable<decimal> ADDSCOREField;
        
        private System.Nullable<decimal> COUNTUNITField;
        
        private System.Nullable<decimal> INITAILSCOREField;
        
        private System.Nullable<decimal> INITIALPOINTField;
        
        private System.Nullable<decimal> INITIALSCOREField;
        
        private string ISMANUALSCOREField;
        
        private string ISRANDOMSCOREField;
        
        private string ISSYSTEMSCOREField;
        
        private System.Nullable<decimal> LATERUNITField;
        
        private System.Nullable<decimal> MANUALWEIGHTField;
        
        private System.Nullable<decimal> MAXSCOREField;
        
        private System.Nullable<decimal> MINSCOREField;
        
        private System.Nullable<decimal> RANDOMWEIGHTField;
        
        private System.Nullable<decimal> REDUCESCOREField;
        
        private string SCORETYPEIDField;
        
        private System.Nullable<decimal> SYSTEMWEIGHTField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> T_HR_KPIPOINTField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> T_HR_KPIREMINDField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> T_HR_KPITYPEField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP T_HR_RANDOMGROUPField;
        
        private SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_RANDOMGROUPLmi1kWPo T_HR_RANDOMGROUPReferenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ADDSCORE {
            get {
                return this.ADDSCOREField;
            }
            set {
                if ((this.ADDSCOREField.Equals(value) != true)) {
                    this.ADDSCOREField = value;
                    this.RaisePropertyChanged("ADDSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> COUNTUNIT {
            get {
                return this.COUNTUNITField;
            }
            set {
                if ((this.COUNTUNITField.Equals(value) != true)) {
                    this.COUNTUNITField = value;
                    this.RaisePropertyChanged("COUNTUNIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> INITAILSCORE {
            get {
                return this.INITAILSCOREField;
            }
            set {
                if ((this.INITAILSCOREField.Equals(value) != true)) {
                    this.INITAILSCOREField = value;
                    this.RaisePropertyChanged("INITAILSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> INITIALPOINT {
            get {
                return this.INITIALPOINTField;
            }
            set {
                if ((this.INITIALPOINTField.Equals(value) != true)) {
                    this.INITIALPOINTField = value;
                    this.RaisePropertyChanged("INITIALPOINT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> INITIALSCORE {
            get {
                return this.INITIALSCOREField;
            }
            set {
                if ((this.INITIALSCOREField.Equals(value) != true)) {
                    this.INITIALSCOREField = value;
                    this.RaisePropertyChanged("INITIALSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISMANUALSCORE {
            get {
                return this.ISMANUALSCOREField;
            }
            set {
                if ((object.ReferenceEquals(this.ISMANUALSCOREField, value) != true)) {
                    this.ISMANUALSCOREField = value;
                    this.RaisePropertyChanged("ISMANUALSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISRANDOMSCORE {
            get {
                return this.ISRANDOMSCOREField;
            }
            set {
                if ((object.ReferenceEquals(this.ISRANDOMSCOREField, value) != true)) {
                    this.ISRANDOMSCOREField = value;
                    this.RaisePropertyChanged("ISRANDOMSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISSYSTEMSCORE {
            get {
                return this.ISSYSTEMSCOREField;
            }
            set {
                if ((object.ReferenceEquals(this.ISSYSTEMSCOREField, value) != true)) {
                    this.ISSYSTEMSCOREField = value;
                    this.RaisePropertyChanged("ISSYSTEMSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LATERUNIT {
            get {
                return this.LATERUNITField;
            }
            set {
                if ((this.LATERUNITField.Equals(value) != true)) {
                    this.LATERUNITField = value;
                    this.RaisePropertyChanged("LATERUNIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MANUALWEIGHT {
            get {
                return this.MANUALWEIGHTField;
            }
            set {
                if ((this.MANUALWEIGHTField.Equals(value) != true)) {
                    this.MANUALWEIGHTField = value;
                    this.RaisePropertyChanged("MANUALWEIGHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MAXSCORE {
            get {
                return this.MAXSCOREField;
            }
            set {
                if ((this.MAXSCOREField.Equals(value) != true)) {
                    this.MAXSCOREField = value;
                    this.RaisePropertyChanged("MAXSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MINSCORE {
            get {
                return this.MINSCOREField;
            }
            set {
                if ((this.MINSCOREField.Equals(value) != true)) {
                    this.MINSCOREField = value;
                    this.RaisePropertyChanged("MINSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RANDOMWEIGHT {
            get {
                return this.RANDOMWEIGHTField;
            }
            set {
                if ((this.RANDOMWEIGHTField.Equals(value) != true)) {
                    this.RANDOMWEIGHTField = value;
                    this.RaisePropertyChanged("RANDOMWEIGHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> REDUCESCORE {
            get {
                return this.REDUCESCOREField;
            }
            set {
                if ((this.REDUCESCOREField.Equals(value) != true)) {
                    this.REDUCESCOREField = value;
                    this.RaisePropertyChanged("REDUCESCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SCORETYPEID {
            get {
                return this.SCORETYPEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SCORETYPEIDField, value) != true)) {
                    this.SCORETYPEIDField = value;
                    this.RaisePropertyChanged("SCORETYPEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SYSTEMWEIGHT {
            get {
                return this.SYSTEMWEIGHTField;
            }
            set {
                if ((this.SYSTEMWEIGHTField.Equals(value) != true)) {
                    this.SYSTEMWEIGHTField = value;
                    this.RaisePropertyChanged("SYSTEMWEIGHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> T_HR_KPIPOINT {
            get {
                return this.T_HR_KPIPOINTField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIPOINTField, value) != true)) {
                    this.T_HR_KPIPOINTField = value;
                    this.RaisePropertyChanged("T_HR_KPIPOINT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> T_HR_KPIREMIND {
            get {
                return this.T_HR_KPIREMINDField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIREMINDField, value) != true)) {
                    this.T_HR_KPIREMINDField = value;
                    this.RaisePropertyChanged("T_HR_KPIREMIND");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> T_HR_KPITYPE {
            get {
                return this.T_HR_KPITYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPITYPEField, value) != true)) {
                    this.T_HR_KPITYPEField = value;
                    this.RaisePropertyChanged("T_HR_KPITYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP T_HR_RANDOMGROUP {
            get {
                return this.T_HR_RANDOMGROUPField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_RANDOMGROUPField, value) != true)) {
                    this.T_HR_RANDOMGROUPField = value;
                    this.RaisePropertyChanged("T_HR_RANDOMGROUP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_RANDOMGROUPLmi1kWPo T_HR_RANDOMGROUPReference {
            get {
                return this.T_HR_RANDOMGROUPReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_RANDOMGROUPReferenceField, value) != true)) {
                    this.T_HR_RANDOMGROUPReferenceField = value;
                    this.RaisePropertyChanged("T_HR_RANDOMGROUPReference");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_HR_KPIREMIND", Namespace="http://schemas.datacontract.org/2004/07/SMT_HRM_EFModel", IsReference=true)]
    public partial class T_HR_KPIREMIND : SMT.Saas.Tools.PerformanceWS.EntityObject {
        
        private System.Nullable<decimal> FORWARDHOURSField;
        
        private string REMINDIDField;
        
        private string REMINDTYPEField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE T_HR_SCORETYPEField;
        
        private SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SCORETYPELmi1kWPo T_HR_SCORETYPEReferenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FORWARDHOURS {
            get {
                return this.FORWARDHOURSField;
            }
            set {
                if ((this.FORWARDHOURSField.Equals(value) != true)) {
                    this.FORWARDHOURSField = value;
                    this.RaisePropertyChanged("FORWARDHOURS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMINDID {
            get {
                return this.REMINDIDField;
            }
            set {
                if ((object.ReferenceEquals(this.REMINDIDField, value) != true)) {
                    this.REMINDIDField = value;
                    this.RaisePropertyChanged("REMINDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMINDTYPE {
            get {
                return this.REMINDTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.REMINDTYPEField, value) != true)) {
                    this.REMINDTYPEField = value;
                    this.RaisePropertyChanged("REMINDTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE T_HR_SCORETYPE {
            get {
                return this.T_HR_SCORETYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_SCORETYPEField, value) != true)) {
                    this.T_HR_SCORETYPEField = value;
                    this.RaisePropertyChanged("T_HR_SCORETYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SCORETYPELmi1kWPo T_HR_SCORETYPEReference {
            get {
                return this.T_HR_SCORETYPEReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_SCORETYPEReferenceField, value) != true)) {
                    this.T_HR_SCORETYPEReferenceField = value;
                    this.RaisePropertyChanged("T_HR_SCORETYPEReference");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_HR_KPITYPE", Namespace="http://schemas.datacontract.org/2004/07/SMT_HRM_EFModel", IsReference=true)]
    public partial class T_HR_KPITYPE : SMT.Saas.Tools.PerformanceWS.EntityObject {
        
        private string CREATECOMPANYIDField;
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string KPITYPEIDField;
        
        private string KPITYPENAMEField;
        
        private string KPITYPEREMARKField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE T_HR_SCORETYPEField;
        
        private SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SCORETYPELmi1kWPo T_HR_SCORETYPEReferenceField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPITYPEID {
            get {
                return this.KPITYPEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.KPITYPEIDField, value) != true)) {
                    this.KPITYPEIDField = value;
                    this.RaisePropertyChanged("KPITYPEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPITYPENAME {
            get {
                return this.KPITYPENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.KPITYPENAMEField, value) != true)) {
                    this.KPITYPENAMEField = value;
                    this.RaisePropertyChanged("KPITYPENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPITYPEREMARK {
            get {
                return this.KPITYPEREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.KPITYPEREMARKField, value) != true)) {
                    this.KPITYPEREMARKField = value;
                    this.RaisePropertyChanged("KPITYPEREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE T_HR_SCORETYPE {
            get {
                return this.T_HR_SCORETYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_SCORETYPEField, value) != true)) {
                    this.T_HR_SCORETYPEField = value;
                    this.RaisePropertyChanged("T_HR_SCORETYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SCORETYPELmi1kWPo T_HR_SCORETYPEReference {
            get {
                return this.T_HR_SCORETYPEReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_SCORETYPEReferenceField, value) != true)) {
                    this.T_HR_SCORETYPEReferenceField = value;
                    this.RaisePropertyChanged("T_HR_SCORETYPEReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_HR_RANDOMGROUP", Namespace="http://schemas.datacontract.org/2004/07/SMT_HRM_EFModel", IsReference=true)]
    public partial class T_HR_RANDOMGROUP : SMT.Saas.Tools.PerformanceWS.EntityObject {
        
        private string CREATECOMPANYIDField;
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private System.Nullable<decimal> GROUPCOUNTField;
        
        private string GROUPREMARKField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private string RANDOMGROUPIDField;
        
        private string RANDOMGROUPNAMEField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> T_HR_RAMDONGROUPPERSONField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE> T_HR_SCORETYPEField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GROUPCOUNT {
            get {
                return this.GROUPCOUNTField;
            }
            set {
                if ((this.GROUPCOUNTField.Equals(value) != true)) {
                    this.GROUPCOUNTField = value;
                    this.RaisePropertyChanged("GROUPCOUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GROUPREMARK {
            get {
                return this.GROUPREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.GROUPREMARKField, value) != true)) {
                    this.GROUPREMARKField = value;
                    this.RaisePropertyChanged("GROUPREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RANDOMGROUPID {
            get {
                return this.RANDOMGROUPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RANDOMGROUPIDField, value) != true)) {
                    this.RANDOMGROUPIDField = value;
                    this.RaisePropertyChanged("RANDOMGROUPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RANDOMGROUPNAME {
            get {
                return this.RANDOMGROUPNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.RANDOMGROUPNAMEField, value) != true)) {
                    this.RANDOMGROUPNAMEField = value;
                    this.RaisePropertyChanged("RANDOMGROUPNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> T_HR_RAMDONGROUPPERSON {
            get {
                return this.T_HR_RAMDONGROUPPERSONField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_RAMDONGROUPPERSONField, value) != true)) {
                    this.T_HR_RAMDONGROUPPERSONField = value;
                    this.RaisePropertyChanged("T_HR_RAMDONGROUPPERSON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE> T_HR_SCORETYPE {
            get {
                return this.T_HR_SCORETYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_SCORETYPEField, value) != true)) {
                    this.T_HR_SCORETYPEField = value;
                    this.RaisePropertyChanged("T_HR_SCORETYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_HR_RAMDONGROUPPERSON", Namespace="http://schemas.datacontract.org/2004/07/SMT_HRM_EFModel", IsReference=true)]
    public partial class T_HR_RAMDONGROUPPERSON : SMT.Saas.Tools.PerformanceWS.EntityObject {
        
        private string GROUPPERSONIDField;
        
        private string PERSONIDField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP T_HR_RANDOMGROUPField;
        
        private SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_RANDOMGROUPLmi1kWPo T_HR_RANDOMGROUPReferenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GROUPPERSONID {
            get {
                return this.GROUPPERSONIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GROUPPERSONIDField, value) != true)) {
                    this.GROUPPERSONIDField = value;
                    this.RaisePropertyChanged("GROUPPERSONID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERSONID {
            get {
                return this.PERSONIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PERSONIDField, value) != true)) {
                    this.PERSONIDField = value;
                    this.RaisePropertyChanged("PERSONID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP T_HR_RANDOMGROUP {
            get {
                return this.T_HR_RANDOMGROUPField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_RANDOMGROUPField, value) != true)) {
                    this.T_HR_RANDOMGROUPField = value;
                    this.RaisePropertyChanged("T_HR_RANDOMGROUP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_RANDOMGROUPLmi1kWPo T_HR_RANDOMGROUPReference {
            get {
                return this.T_HR_RANDOMGROUPReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_RANDOMGROUPReferenceField, value) != true)) {
                    this.T_HR_RANDOMGROUPReferenceField = value;
                    this.RaisePropertyChanged("T_HR_RANDOMGROUPReference");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_HR_KPIRECORDCOMPLAIN", Namespace="http://schemas.datacontract.org/2004/07/SMT_HRM_EFModel", IsReference=true)]
    public partial class T_HR_KPIRECORDCOMPLAIN : SMT.Saas.Tools.PerformanceWS.EntityObject {
        
        private string CHECKSTATEField;
        
        private string COMPLAINANTIDField;
        
        private System.Nullable<System.DateTime> COMPLAINDATEField;
        
        private string COMPLAINIDField;
        
        private string COMPLAINREMARKField;
        
        private string CREATECOMPANYIDField;
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private System.Nullable<decimal> INITIALSCOREField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private System.Nullable<System.DateTime> REVIEWDATEField;
        
        private string REVIEWERIDField;
        
        private string REVIEWREMARKField;
        
        private System.Nullable<decimal> REVIEWSCOREField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD T_HR_KPIRECORDField;
        
        private SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIRECORDLmi1kWPo T_HR_KPIRECORDReferenceField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CHECKSTATE {
            get {
                return this.CHECKSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.CHECKSTATEField, value) != true)) {
                    this.CHECKSTATEField = value;
                    this.RaisePropertyChanged("CHECKSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPLAINANTID {
            get {
                return this.COMPLAINANTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPLAINANTIDField, value) != true)) {
                    this.COMPLAINANTIDField = value;
                    this.RaisePropertyChanged("COMPLAINANTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> COMPLAINDATE {
            get {
                return this.COMPLAINDATEField;
            }
            set {
                if ((this.COMPLAINDATEField.Equals(value) != true)) {
                    this.COMPLAINDATEField = value;
                    this.RaisePropertyChanged("COMPLAINDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPLAINID {
            get {
                return this.COMPLAINIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPLAINIDField, value) != true)) {
                    this.COMPLAINIDField = value;
                    this.RaisePropertyChanged("COMPLAINID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPLAINREMARK {
            get {
                return this.COMPLAINREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPLAINREMARKField, value) != true)) {
                    this.COMPLAINREMARKField = value;
                    this.RaisePropertyChanged("COMPLAINREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> INITIALSCORE {
            get {
                return this.INITIALSCOREField;
            }
            set {
                if ((this.INITIALSCOREField.Equals(value) != true)) {
                    this.INITIALSCOREField = value;
                    this.RaisePropertyChanged("INITIALSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> REVIEWDATE {
            get {
                return this.REVIEWDATEField;
            }
            set {
                if ((this.REVIEWDATEField.Equals(value) != true)) {
                    this.REVIEWDATEField = value;
                    this.RaisePropertyChanged("REVIEWDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REVIEWERID {
            get {
                return this.REVIEWERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.REVIEWERIDField, value) != true)) {
                    this.REVIEWERIDField = value;
                    this.RaisePropertyChanged("REVIEWERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REVIEWREMARK {
            get {
                return this.REVIEWREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REVIEWREMARKField, value) != true)) {
                    this.REVIEWREMARKField = value;
                    this.RaisePropertyChanged("REVIEWREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> REVIEWSCORE {
            get {
                return this.REVIEWSCOREField;
            }
            set {
                if ((this.REVIEWSCOREField.Equals(value) != true)) {
                    this.REVIEWSCOREField = value;
                    this.RaisePropertyChanged("REVIEWSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD T_HR_KPIRECORD {
            get {
                return this.T_HR_KPIRECORDField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIRECORDField, value) != true)) {
                    this.T_HR_KPIRECORDField = value;
                    this.RaisePropertyChanged("T_HR_KPIRECORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIRECORDLmi1kWPo T_HR_KPIRECORDReference {
            get {
                return this.T_HR_KPIRECORDReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIRECORDReferenceField, value) != true)) {
                    this.T_HR_KPIRECORDReferenceField = value;
                    this.RaisePropertyChanged("T_HR_KPIRECORDReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_HR_SUMPERFORMANCERECORD", Namespace="http://schemas.datacontract.org/2004/07/SMT_HRM_EFModel", IsReference=true)]
    public partial class T_HR_SUMPERFORMANCERECORD : SMT.Saas.Tools.PerformanceWS.EntityObject {
        
        private string AWARDTYPEField;
        
        private System.Nullable<decimal> BASEMONEYField;
        
        private string CHECKSTATEField;
        
        private string CREATECOMPANYIDField;
        
        private System.Nullable<System.DateTime> CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private string REVIEWERIDField;
        
        private string REVIEWREMARKField;
        
        private System.Nullable<decimal> SUMCOUNTField;
        
        private System.Nullable<System.DateTime> SUMDATEField;
        
        private string SUMDEPTIDField;
        
        private System.Nullable<System.DateTime> SUMENDField;
        
        private string SUMIDField;
        
        private string SUMNAMEField;
        
        private string SUMPERSONIDField;
        
        private string SUMREMARKField;
        
        private System.Nullable<decimal> SUMSCOREField;
        
        private System.Nullable<System.DateTime> SUMSTARTField;
        
        private string SUMTYPEField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> T_HR_PERFORMANCERECORDField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AWARDTYPE {
            get {
                return this.AWARDTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.AWARDTYPEField, value) != true)) {
                    this.AWARDTYPEField = value;
                    this.RaisePropertyChanged("AWARDTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> BASEMONEY {
            get {
                return this.BASEMONEYField;
            }
            set {
                if ((this.BASEMONEYField.Equals(value) != true)) {
                    this.BASEMONEYField = value;
                    this.RaisePropertyChanged("BASEMONEY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CHECKSTATE {
            get {
                return this.CHECKSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.CHECKSTATEField, value) != true)) {
                    this.CHECKSTATEField = value;
                    this.RaisePropertyChanged("CHECKSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REVIEWERID {
            get {
                return this.REVIEWERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.REVIEWERIDField, value) != true)) {
                    this.REVIEWERIDField = value;
                    this.RaisePropertyChanged("REVIEWERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REVIEWREMARK {
            get {
                return this.REVIEWREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REVIEWREMARKField, value) != true)) {
                    this.REVIEWREMARKField = value;
                    this.RaisePropertyChanged("REVIEWREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SUMCOUNT {
            get {
                return this.SUMCOUNTField;
            }
            set {
                if ((this.SUMCOUNTField.Equals(value) != true)) {
                    this.SUMCOUNTField = value;
                    this.RaisePropertyChanged("SUMCOUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SUMDATE {
            get {
                return this.SUMDATEField;
            }
            set {
                if ((this.SUMDATEField.Equals(value) != true)) {
                    this.SUMDATEField = value;
                    this.RaisePropertyChanged("SUMDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUMDEPTID {
            get {
                return this.SUMDEPTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SUMDEPTIDField, value) != true)) {
                    this.SUMDEPTIDField = value;
                    this.RaisePropertyChanged("SUMDEPTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SUMEND {
            get {
                return this.SUMENDField;
            }
            set {
                if ((this.SUMENDField.Equals(value) != true)) {
                    this.SUMENDField = value;
                    this.RaisePropertyChanged("SUMEND");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUMID {
            get {
                return this.SUMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SUMIDField, value) != true)) {
                    this.SUMIDField = value;
                    this.RaisePropertyChanged("SUMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUMNAME {
            get {
                return this.SUMNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.SUMNAMEField, value) != true)) {
                    this.SUMNAMEField = value;
                    this.RaisePropertyChanged("SUMNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUMPERSONID {
            get {
                return this.SUMPERSONIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SUMPERSONIDField, value) != true)) {
                    this.SUMPERSONIDField = value;
                    this.RaisePropertyChanged("SUMPERSONID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUMREMARK {
            get {
                return this.SUMREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.SUMREMARKField, value) != true)) {
                    this.SUMREMARKField = value;
                    this.RaisePropertyChanged("SUMREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SUMSCORE {
            get {
                return this.SUMSCOREField;
            }
            set {
                if ((this.SUMSCOREField.Equals(value) != true)) {
                    this.SUMSCOREField = value;
                    this.RaisePropertyChanged("SUMSCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SUMSTART {
            get {
                return this.SUMSTARTField;
            }
            set {
                if ((this.SUMSTARTField.Equals(value) != true)) {
                    this.SUMSTARTField = value;
                    this.RaisePropertyChanged("SUMSTART");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUMTYPE {
            get {
                return this.SUMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.SUMTYPEField, value) != true)) {
                    this.SUMTYPEField = value;
                    this.RaisePropertyChanged("SUMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> T_HR_PERFORMANCERECORD {
            get {
                return this.T_HR_PERFORMANCERECORDField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_PERFORMANCERECORDField, value) != true)) {
                    this.T_HR_PERFORMANCERECORDField = value;
                    this.RaisePropertyChanged("T_HR_PERFORMANCERECORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_HR_PERFORMANCERECORD", Namespace="http://schemas.datacontract.org/2004/07/SMT_HRM_EFModel", IsReference=true)]
    public partial class T_HR_PERFORMANCERECORD : SMT.Saas.Tools.PerformanceWS.EntityObject {
        
        private string APPRAISEEIDField;
        
        private string PERFORMANCEIDField;
        
        private string PERFORMANCEREMARKField;
        
        private System.Nullable<decimal> PERFORMANCESCOREField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCEDETAIL> T_HR_PERFORMANCEDETAILField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD T_HR_SUMPERFORMANCERECORDField;
        
        private SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SUMPERFORMANCERECORDLmi1kWPo T_HR_SUMPERFORMANCERECORDReferenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPRAISEEID {
            get {
                return this.APPRAISEEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.APPRAISEEIDField, value) != true)) {
                    this.APPRAISEEIDField = value;
                    this.RaisePropertyChanged("APPRAISEEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERFORMANCEID {
            get {
                return this.PERFORMANCEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PERFORMANCEIDField, value) != true)) {
                    this.PERFORMANCEIDField = value;
                    this.RaisePropertyChanged("PERFORMANCEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERFORMANCEREMARK {
            get {
                return this.PERFORMANCEREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.PERFORMANCEREMARKField, value) != true)) {
                    this.PERFORMANCEREMARKField = value;
                    this.RaisePropertyChanged("PERFORMANCEREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PERFORMANCESCORE {
            get {
                return this.PERFORMANCESCOREField;
            }
            set {
                if ((this.PERFORMANCESCOREField.Equals(value) != true)) {
                    this.PERFORMANCESCOREField = value;
                    this.RaisePropertyChanged("PERFORMANCESCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCEDETAIL> T_HR_PERFORMANCEDETAIL {
            get {
                return this.T_HR_PERFORMANCEDETAILField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_PERFORMANCEDETAILField, value) != true)) {
                    this.T_HR_PERFORMANCEDETAILField = value;
                    this.RaisePropertyChanged("T_HR_PERFORMANCEDETAIL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD T_HR_SUMPERFORMANCERECORD {
            get {
                return this.T_HR_SUMPERFORMANCERECORDField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_SUMPERFORMANCERECORDField, value) != true)) {
                    this.T_HR_SUMPERFORMANCERECORDField = value;
                    this.RaisePropertyChanged("T_HR_SUMPERFORMANCERECORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SUMPERFORMANCERECORDLmi1kWPo T_HR_SUMPERFORMANCERECORDReference {
            get {
                return this.T_HR_SUMPERFORMANCERECORDReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_SUMPERFORMANCERECORDReferenceField, value) != true)) {
                    this.T_HR_SUMPERFORMANCERECORDReferenceField = value;
                    this.RaisePropertyChanged("T_HR_SUMPERFORMANCERECORDReference");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfT_HR_SUMPERFORMANCERECORDLmi1kWPo", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfT_HR_SUMPERFORMANCERECORDLmi1kWPo : SMT.Saas.Tools.PerformanceWS.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, decimal>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SCORETYPELmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.RelatedEnd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_RANDOMGROUPLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIPOINTLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIRECORDLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_PERFORMANCERECORDLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SUMPERFORMANCERECORDLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCEDETAIL>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCEDETAIL))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_KPIRECORD>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.V_KPIRECORD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_EMPLOYEEVIEW>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.V_EMPLOYEEVIEW))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfT_HR_SCORETYPELmi1kWPo", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfT_HR_SCORETYPELmi1kWPo : SMT.Saas.Tools.PerformanceWS.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReference", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_RANDOMGROUPLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIPOINTLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIRECORDLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_PERFORMANCERECORDLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SUMPERFORMANCERECORDLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SCORETYPELmi1kWPo))]
    public partial class EntityReference : SMT.Saas.Tools.PerformanceWS.RelatedEnd {
        
        private SMT.Saas.Tools.PerformanceWS.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedEnd", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_RANDOMGROUPLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIPOINTLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIRECORDLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_PERFORMANCERECORDLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SUMPERFORMANCERECORDLmi1kWPo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SCORETYPELmi1kWPo))]
    public partial class RelatedEnd : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfT_HR_RANDOMGROUPLmi1kWPo", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfT_HR_RANDOMGROUPLmi1kWPo : SMT.Saas.Tools.PerformanceWS.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfT_HR_KPIPOINTLmi1kWPo", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfT_HR_KPIPOINTLmi1kWPo : SMT.Saas.Tools.PerformanceWS.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfT_HR_KPIRECORDLmi1kWPo", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfT_HR_KPIRECORDLmi1kWPo : SMT.Saas.Tools.PerformanceWS.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfT_HR_PERFORMANCERECORDLmi1kWPo", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfT_HR_PERFORMANCERECORDLmi1kWPo : SMT.Saas.Tools.PerformanceWS.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="V_COMPLAINRECORD", Namespace="http://schemas.datacontract.org/2004/07/SMT.HRM.CustomModel")]
    public partial class V_COMPLAINRECORD : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CREATEUSERIDField;
        
        private string EMPLOYEECNAMEField;
        
        private string EMPLOYEECODEField;
        
        private string FLOWIDField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD T_HR_KPIRECORDField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN T_HR_KPIRECORDCOMPLAINField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEECNAME {
            get {
                return this.EMPLOYEECNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEECNAMEField, value) != true)) {
                    this.EMPLOYEECNAMEField = value;
                    this.RaisePropertyChanged("EMPLOYEECNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEECODE {
            get {
                return this.EMPLOYEECODEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEECODEField, value) != true)) {
                    this.EMPLOYEECODEField = value;
                    this.RaisePropertyChanged("EMPLOYEECODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWID {
            get {
                return this.FLOWIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWIDField, value) != true)) {
                    this.FLOWIDField = value;
                    this.RaisePropertyChanged("FLOWID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD T_HR_KPIRECORD {
            get {
                return this.T_HR_KPIRECORDField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIRECORDField, value) != true)) {
                    this.T_HR_KPIRECORDField = value;
                    this.RaisePropertyChanged("T_HR_KPIRECORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN T_HR_KPIRECORDCOMPLAIN {
            get {
                return this.T_HR_KPIRECORDCOMPLAINField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIRECORDCOMPLAINField, value) != true)) {
                    this.T_HR_KPIRECORDCOMPLAINField = value;
                    this.RaisePropertyChanged("T_HR_KPIRECORDCOMPLAIN");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="V_KPIRECORD", Namespace="http://schemas.datacontract.org/2004/07/SMT.HRM.CustomModel")]
    public partial class V_KPIRECORD : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CREATEUSERIDField;
        
        private string EMPLOYEECNAMEField;
        
        private string EMPLOYEECODEField;
        
        private string FLOWIDField;
        
        private string KPIPOINTREMARKField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD T_HR_KPIRECORDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEECNAME {
            get {
                return this.EMPLOYEECNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEECNAMEField, value) != true)) {
                    this.EMPLOYEECNAMEField = value;
                    this.RaisePropertyChanged("EMPLOYEECNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEECODE {
            get {
                return this.EMPLOYEECODEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEECODEField, value) != true)) {
                    this.EMPLOYEECODEField = value;
                    this.RaisePropertyChanged("EMPLOYEECODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWID {
            get {
                return this.FLOWIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWIDField, value) != true)) {
                    this.FLOWIDField = value;
                    this.RaisePropertyChanged("FLOWID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPIPOINTREMARK {
            get {
                return this.KPIPOINTREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.KPIPOINTREMARKField, value) != true)) {
                    this.KPIPOINTREMARKField = value;
                    this.RaisePropertyChanged("KPIPOINTREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD T_HR_KPIRECORD {
            get {
                return this.T_HR_KPIRECORDField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIRECORDField, value) != true)) {
                    this.T_HR_KPIRECORDField = value;
                    this.RaisePropertyChanged("T_HR_KPIRECORD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="V_EMPLOYEEVIEW", Namespace="http://schemas.datacontract.org/2004/07/SMT.HRM.CustomModel")]
    public partial class V_EMPLOYEEVIEW : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CREATEUSERIDField;
        
        private string EMAILField;
        
        private string EMPLOYEECNAMEField;
        
        private string EMPLOYEECODEField;
        
        private string EMPLOYEEENAMEField;
        
        private string EMPLOYEEIDField;
        
        private string IDNUMBERField;
        
        private string MOBILEField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private string SEXField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMAIL {
            get {
                return this.EMAILField;
            }
            set {
                if ((object.ReferenceEquals(this.EMAILField, value) != true)) {
                    this.EMAILField = value;
                    this.RaisePropertyChanged("EMAIL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEECNAME {
            get {
                return this.EMPLOYEECNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEECNAMEField, value) != true)) {
                    this.EMPLOYEECNAMEField = value;
                    this.RaisePropertyChanged("EMPLOYEECNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEECODE {
            get {
                return this.EMPLOYEECODEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEECODEField, value) != true)) {
                    this.EMPLOYEECODEField = value;
                    this.RaisePropertyChanged("EMPLOYEECODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEEENAME {
            get {
                return this.EMPLOYEEENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEEENAMEField, value) != true)) {
                    this.EMPLOYEEENAMEField = value;
                    this.RaisePropertyChanged("EMPLOYEEENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEEID {
            get {
                return this.EMPLOYEEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEEIDField, value) != true)) {
                    this.EMPLOYEEIDField = value;
                    this.RaisePropertyChanged("EMPLOYEEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDNUMBER {
            get {
                return this.IDNUMBERField;
            }
            set {
                if ((object.ReferenceEquals(this.IDNUMBERField, value) != true)) {
                    this.IDNUMBERField = value;
                    this.RaisePropertyChanged("IDNUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MOBILE {
            get {
                return this.MOBILEField;
            }
            set {
                if ((object.ReferenceEquals(this.MOBILEField, value) != true)) {
                    this.MOBILEField = value;
                    this.RaisePropertyChanged("MOBILE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SEX {
            get {
                return this.SEXField;
            }
            set {
                if ((object.ReferenceEquals(this.SEXField, value) != true)) {
                    this.SEXField = value;
                    this.RaisePropertyChanged("SEX");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="V_PERFORMANCERECORDDETAIL", Namespace="http://schemas.datacontract.org/2004/07/SMT.HRM.CustomModel")]
    public partial class V_PERFORMANCERECORDDETAIL : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EMPLOYEECNAMEField;
        
        private string EMPLOYEECODEField;
        
        private string FLOWNAMEField;
        
        private string PERFORMANCEIDField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD T_HR_KPIRECORDField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD T_HR_PERFORMANCERECORDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEECNAME {
            get {
                return this.EMPLOYEECNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEECNAMEField, value) != true)) {
                    this.EMPLOYEECNAMEField = value;
                    this.RaisePropertyChanged("EMPLOYEECNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEECODE {
            get {
                return this.EMPLOYEECODEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEECODEField, value) != true)) {
                    this.EMPLOYEECODEField = value;
                    this.RaisePropertyChanged("EMPLOYEECODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FLOWNAME {
            get {
                return this.FLOWNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FLOWNAMEField, value) != true)) {
                    this.FLOWNAMEField = value;
                    this.RaisePropertyChanged("FLOWNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERFORMANCEID {
            get {
                return this.PERFORMANCEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PERFORMANCEIDField, value) != true)) {
                    this.PERFORMANCEIDField = value;
                    this.RaisePropertyChanged("PERFORMANCEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD T_HR_KPIRECORD {
            get {
                return this.T_HR_KPIRECORDField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_KPIRECORDField, value) != true)) {
                    this.T_HR_KPIRECORDField = value;
                    this.RaisePropertyChanged("T_HR_KPIRECORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD T_HR_PERFORMANCERECORD {
            get {
                return this.T_HR_PERFORMANCERECORDField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_PERFORMANCERECORDField, value) != true)) {
                    this.T_HR_PERFORMANCERECORDField = value;
                    this.RaisePropertyChanged("T_HR_PERFORMANCERECORD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="V_PERFORMANCERECORD", Namespace="http://schemas.datacontract.org/2004/07/SMT.HRM.CustomModel")]
    public partial class V_PERFORMANCERECORD : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CREATEUSERIDField;
        
        private string EMPLOYEECNAMEField;
        
        private string EMPLOYEECODEField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private string PERFORMANCEIDField;
        
        private System.Nullable<System.DateTime> SUMENDField;
        
        private string SUMIDField;
        
        private System.Nullable<System.DateTime> SUMSTARTField;
        
        private SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD T_HR_PERFORMANCERECORDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEECNAME {
            get {
                return this.EMPLOYEECNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEECNAMEField, value) != true)) {
                    this.EMPLOYEECNAMEField = value;
                    this.RaisePropertyChanged("EMPLOYEECNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEECODE {
            get {
                return this.EMPLOYEECODEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEECODEField, value) != true)) {
                    this.EMPLOYEECODEField = value;
                    this.RaisePropertyChanged("EMPLOYEECODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERFORMANCEID {
            get {
                return this.PERFORMANCEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PERFORMANCEIDField, value) != true)) {
                    this.PERFORMANCEIDField = value;
                    this.RaisePropertyChanged("PERFORMANCEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SUMEND {
            get {
                return this.SUMENDField;
            }
            set {
                if ((this.SUMENDField.Equals(value) != true)) {
                    this.SUMENDField = value;
                    this.RaisePropertyChanged("SUMEND");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUMID {
            get {
                return this.SUMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SUMIDField, value) != true)) {
                    this.SUMIDField = value;
                    this.RaisePropertyChanged("SUMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SUMSTART {
            get {
                return this.SUMSTARTField;
            }
            set {
                if ((this.SUMSTARTField.Equals(value) != true)) {
                    this.SUMSTARTField = value;
                    this.RaisePropertyChanged("SUMSTART");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD T_HR_PERFORMANCERECORD {
            get {
                return this.T_HR_PERFORMANCERECORDField;
            }
            set {
                if ((object.ReferenceEquals(this.T_HR_PERFORMANCERECORDField, value) != true)) {
                    this.T_HR_PERFORMANCERECORDField = value;
                    this.RaisePropertyChanged("T_HR_PERFORMANCERECORD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="PerformanceWS.PerformanceService")]
    public interface PerformanceService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/AddPerformanceRecord", ReplyAction="urn:PerformanceService/AddPerformanceRecordResponse")]
        System.IAsyncResult BeginAddPerformanceRecord(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState);
        
        void EndAddPerformanceRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/AddPerformanceRecordList", ReplyAction="urn:PerformanceService/AddPerformanceRecordListResponse")]
        System.IAsyncResult BeginAddPerformanceRecordList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> entList, System.AsyncCallback callback, object asyncState);
        
        int EndAddPerformanceRecordList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/UpdatePerformanceRecord", ReplyAction="urn:PerformanceService/UpdatePerformanceRecordResponse")]
        System.IAsyncResult BeginUpdatePerformanceRecord(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePerformanceRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/UpdatePerformanceRecordList", ReplyAction="urn:PerformanceService/UpdatePerformanceRecordListResponse")]
        System.IAsyncResult BeginUpdatePerformanceRecordList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> entList, System.Collections.ObjectModel.ObservableCollection<string> employeeIDs, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<int> EndUpdatePerformanceRecordList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/DeletePerformanceRecord", ReplyAction="urn:PerformanceService/DeletePerformanceRecordResponse")]
        System.IAsyncResult BeginDeletePerformanceRecord(string randomGroupId, System.AsyncCallback callback, object asyncState);
        
        int EndDeletePerformanceRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/DeletePerformanceRecords", ReplyAction="urn:PerformanceService/DeletePerformanceRecordsResponse")]
        System.IAsyncResult BeginDeletePerformanceRecords(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, System.AsyncCallback callback, object asyncState);
        
        bool EndDeletePerformanceRecords(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/KPIScorePost", ReplyAction="urn:PerformanceService/KPIScorePostResponse")]
        System.IAsyncResult BeginKPIScorePost(string BusinessCodePost, string RelationIDPost, string CreateCompanyIDPost, string CreateDepartmentIDPost, string CreatePostIDPost, string CreateUserIDPost, System.AsyncCallback callback, object asyncState);
        
        int EndKPIScorePost(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/KPISystemScore", ReplyAction="urn:PerformanceService/KPISystemScoreResponse")]
        System.IAsyncResult BeginKPISystemScore(string companyID, string modelRelationID, string flowCode, string stepCode, string formCode, string flowID, string stepID, System.DateTime lastStepDate, System.DateTime stepDate, string AppraiseeID, System.AsyncCallback callback, object asyncState);
        
        int EndKPISystemScore(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/KPISystemScoreByKPIPoint", ReplyAction="urn:PerformanceService/KPISystemScoreByKPIPointResponse")]
        System.IAsyncResult BeginKPISystemScoreByKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string stepID, System.DateTime lastStepDate, System.DateTime stepDate, string AppraiseeID, System.AsyncCallback callback, object asyncState);
        
        int EndKPISystemScoreByKPIPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/KPIManualScore", ReplyAction="urn:PerformanceService/KPIManualScoreResponse")]
        System.IAsyncResult BeginKPIManualScore(string companyID, string modelRelationID, string flowCode, string lastStepID, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndKPIManualScore(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/KPIManualScoreByKPIPoint", ReplyAction="urn:PerformanceService/KPIManualScoreByKPIPointResponse")]
        System.IAsyncResult BeginKPIManualScoreByKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndKPIManualScoreByKPIPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/KPIRandomScore", ReplyAction="urn:PerformanceService/KPIRandomScoreResponse")]
        System.IAsyncResult BeginKPIRandomScore(string companyID, string modelRelationID, string flowCode, string lastStepID, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndKPIRandomScore(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/KPIRandomScoreByKPIPoint", ReplyAction="urn:PerformanceService/KPIRandomScoreByKPIPointResponse")]
        System.IAsyncResult BeginKPIRandomScoreByKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndKPIRandomScoreByKPIPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIPoint", ReplyAction="urn:PerformanceService/GetKPIPointResponse")]
        System.IAsyncResult BeginGetKPIPoint(string companyID, string modelRelationID, string flowID, string stepID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT EndGetKPIPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIPointAndLastPoint", ReplyAction="urn:PerformanceService/GetKPIPointAndLastPointResponse")]
        System.IAsyncResult BeginGetKPIPointAndLastPoint(string companyID, string modelRelationID, string flowID, string stepID, string LastStepID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> EndGetKPIPointAndLastPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIPointListByBusinessCode", ReplyAction="urn:PerformanceService/GetKPIPointListByBusinessCodeResponse")]
        System.IAsyncResult BeginGetKPIPointListByBusinessCode(string modelRelationID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> EndGetKPIPointListByBusinessCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIPointByID", ReplyAction="urn:PerformanceService/GetKPIPointByIDResponse")]
        System.IAsyncResult BeginGetKPIPointByID(string kpiPointID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT EndGetKPIPointByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIPointRandomPersonID", ReplyAction="urn:PerformanceService/GetKPIPointRandomPersonIDResponse")]
        System.IAsyncResult BeginGetKPIPointRandomPersonID(string companyID, string modelRelationID, string flowID, string stepID, string formID, System.AsyncCallback callback, object asyncState);
        
        string EndGetKPIPointRandomPersonID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPITypeByID", ReplyAction="urn:PerformanceService/GetKPITypeByIDResponse")]
        System.IAsyncResult BeginGetKPITypeByID(string kpiTypeID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE EndGetKPITypeByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPITypeAll", ReplyAction="urn:PerformanceService/GetKPITypeAllResponse")]
        System.IAsyncResult BeginGetKPITypeAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> EndGetKPITypeAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPITypeWithPermission", ReplyAction="urn:PerformanceService/GetKPITypeWithPermissionResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityKey))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.EntityKeyMember>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityKeyMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, decimal>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.StructuralObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SCORETYPELmi1kWPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReference))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.RelatedEnd))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_RANDOMGROUPLmi1kWPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIPOINTLmi1kWPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_KPIRECORDLmi1kWPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_PERFORMANCERECORDLmi1kWPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.EntityReferenceOfT_HR_SUMPERFORMANCERECORDLmi1kWPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCEDETAIL>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCEDETAIL))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SCORETYPE>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_KPIRECORD>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.V_KPIRECORD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_EMPLOYEEVIEW>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.V_EMPLOYEEVIEW))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD))]
        System.IAsyncResult BeginGetKPITypeWithPermission(string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> EndGetKPITypeWithPermission(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIRecordRandomPersonID", ReplyAction="urn:PerformanceService/GetKPIRecordRandomPersonIDResponse")]
        System.IAsyncResult BeginGetKPIRecordRandomPersonID(string formCode, string flowID, string stepID, System.AsyncCallback callback, object asyncState);
        
        string EndGetKPIRecordRandomPersonID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIRecord", ReplyAction="urn:PerformanceService/GetKPIRecordResponse")]
        System.IAsyncResult BeginGetKPIRecord(string formCode, string flowID, string stepID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndGetKPIRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIRecordScoreDetail", ReplyAction="urn:PerformanceService/GetKPIRecordScoreDetailResponse")]
        System.IAsyncResult BeginGetKPIRecordScoreDetail(string formCode, string flowID, string stepID, int scoreType, System.AsyncCallback callback, object asyncState);
        
        string EndGetKPIRecordScoreDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIRecordInterface", ReplyAction="urn:PerformanceService/GetKPIRecordInterfaceResponse")]
        System.IAsyncResult BeginGetKPIRecordInterface(string formCode, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndGetKPIRecordInterface(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIRecordScore", ReplyAction="urn:PerformanceService/GetKPIRecordScoreResponse")]
        System.IAsyncResult BeginGetKPIRecordScore(string formCode, string flowID, string stepID, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<decimal> EndGetKPIRecordScore(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIRecordById", ReplyAction="urn:PerformanceService/GetKPIRecordByIdResponse")]
        System.IAsyncResult BeginGetKPIRecordById(string recordId, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndGetKPIRecordById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/CheckKPIRecordIsComplainingByUserID", ReplyAction="urn:PerformanceService/CheckKPIRecordIsComplainingByUserIDResponse")]
        System.IAsyncResult BeginCheckKPIRecordIsComplainingByUserID(System.Collections.ObjectModel.ObservableCollection<string> userIdList, System.DateTime startTime, System.DateTime endTime, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckKPIRecordIsComplainingByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPITypePaging", ReplyAction="urn:PerformanceService/GetKPITypePagingResponse")]
        System.IAsyncResult BeginGetKPITypePaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> EndGetKPITypePaging(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/AddKPIType", ReplyAction="urn:PerformanceService/AddKPITypeResponse")]
        System.IAsyncResult BeginAddKPIType(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, ref string strMsg, System.AsyncCallback callback, object asyncState);
        
        void EndAddKPIType(ref string strMsg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/UpdateKPIType", ReplyAction="urn:PerformanceService/UpdateKPITypeResponse")]
        System.IAsyncResult BeginUpdateKPIType(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, ref string strMsg, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateKPIType(ref string strMsg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/UpdateKPITypeAndRemind", ReplyAction="urn:PerformanceService/UpdateKPITypeAndRemindResponse")]
        System.IAsyncResult BeginUpdateKPITypeAndRemind(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> addList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> updateList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> delList, ref string strMsg, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateKPITypeAndRemind(ref string strMsg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/DeleteKPIType", ReplyAction="urn:PerformanceService/DeleteKPITypeResponse")]
        System.IAsyncResult BeginDeleteKPIType(string kpiTypeId, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteKPIType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/DeleteKPITypes", ReplyAction="urn:PerformanceService/DeleteKPITypesResponse")]
        System.IAsyncResult BeginDeleteKPITypes(System.Collections.ObjectModel.ObservableCollection<string> kpiTypeId, ref string strMsg, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteKPITypes(ref string strMsg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/AddKPIPoint", ReplyAction="urn:PerformanceService/AddKPIPointResponse")]
        System.IAsyncResult BeginAddKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, System.AsyncCallback callback, object asyncState);
        
        void EndAddKPIPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/UpdateKPIPoint", ReplyAction="urn:PerformanceService/UpdateKPIPointResponse")]
        System.IAsyncResult BeginUpdateKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateKPIPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/UpdateKPIPointAndRemind", ReplyAction="urn:PerformanceService/UpdateKPIPointAndRemindResponse")]
        System.IAsyncResult BeginUpdateKPIPointAndRemind(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> addList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> updateList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> delList, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateKPIPointAndRemind(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/DeleteKPIPoint", ReplyAction="urn:PerformanceService/DeleteKPIPointResponse")]
        System.IAsyncResult BeginDeleteKPIPoint(string kpiTypeId, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteKPIPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/KPIRecordUpdate", ReplyAction="urn:PerformanceService/KPIRecordUpdateResponse")]
        System.IAsyncResult BeginKPIRecordUpdate(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD entity, System.AsyncCallback callback, object asyncState);
        
        void EndKPIRecordUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetVcomplainRecordByID", ReplyAction="urn:PerformanceService/GetVcomplainRecordByIDResponse")]
        System.IAsyncResult BeginGetVcomplainRecordByID(string CompainRecordID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD EndGetVcomplainRecordByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/SaveKPIRecordInterface", ReplyAction="urn:PerformanceService/SaveKPIRecordInterfaceResponse")]
        System.IAsyncResult BeginSaveKPIRecordInterface(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD kpirecord, string AppraiseeID, string AppraiserID, int score, int scoretype, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndSaveKPIRecordInterface(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIRecordComplainByRecord", ReplyAction="urn:PerformanceService/GetKPIRecordComplainByRecordResponse")]
        System.IAsyncResult BeginGetKPIRecordComplainByRecord(string recordId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN> EndGetKPIRecordComplainByRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIRecordComplainByID", ReplyAction="urn:PerformanceService/GetKPIRecordComplainByIDResponse")]
        System.IAsyncResult BeginGetKPIRecordComplainByID(string complainID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN EndGetKPIRecordComplainByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/AddKPIRecordComplain", ReplyAction="urn:PerformanceService/AddKPIRecordComplainResponse")]
        System.IAsyncResult BeginAddKPIRecordComplain(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entType, System.AsyncCallback callback, object asyncState);
        
        void EndAddKPIRecordComplain(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/UpdateKPIRecordComplain", ReplyAction="urn:PerformanceService/UpdateKPIRecordComplainResponse")]
        System.IAsyncResult BeginUpdateKPIRecordComplain(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entType, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateKPIRecordComplain(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetComplainRecordPaging", ReplyAction="urn:PerformanceService/GetComplainRecordPagingResponse")]
        System.IAsyncResult BeginGetComplainRecordPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, int sType, string sValue, string userID, string startDate, string endDate, string strCheckState, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD> EndGetComplainRecordPaging(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetCompainRecordByID", ReplyAction="urn:PerformanceService/GetCompainRecordByIDResponse")]
        System.IAsyncResult BeginGetCompainRecordByID(string CompainRecordID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN EndGetCompainRecordByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/CompainRecordUpdate", ReplyAction="urn:PerformanceService/CompainRecordUpdateResponse")]
        System.IAsyncResult BeginCompainRecordUpdate(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entity, System.AsyncCallback callback, object asyncState);
        
        void EndCompainRecordUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/CompainRecordUpdateOver", ReplyAction="urn:PerformanceService/CompainRecordUpdateOverResponse")]
        System.IAsyncResult BeginCompainRecordUpdateOver(string kpirecordid, System.AsyncCallback callback, object asyncState);
        
        void EndCompainRecordUpdateOver(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/ComplainRecordDelete", ReplyAction="urn:PerformanceService/ComplainRecordDeleteResponse")]
        System.IAsyncResult BeginComplainRecordDelete(System.Collections.ObjectModel.ObservableCollection<string> ComplainRecords, System.AsyncCallback callback, object asyncState);
        
        int EndComplainRecordDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetKPIRecordPaging", ReplyAction="urn:PerformanceService/GetKPIRecordPagingResponse")]
        System.IAsyncResult BeginGetKPIRecordPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string sType, string sValue, string userID, string startDate, string endDate, string strCheckState, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_KPIRECORD> EndGetKPIRecordPaging(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/CheckRecordIsSummarize", ReplyAction="urn:PerformanceService/CheckRecordIsSummarizeResponse")]
        System.IAsyncResult BeginCheckRecordIsSummarize(string recordId, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckRecordIsSummarize(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetRandomGroupPaging", ReplyAction="urn:PerformanceService/GetRandomGroupPagingResponse")]
        System.IAsyncResult BeginGetRandomGroupPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP> EndGetRandomGroupPaging(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetRandomGroupPersonAll", ReplyAction="urn:PerformanceService/GetRandomGroupPersonAllResponse")]
        System.IAsyncResult BeginGetRandomGroupPersonAll(string randomGroupID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> EndGetRandomGroupPersonAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetRandomGroupPersonPaging", ReplyAction="urn:PerformanceService/GetRandomGroupPersonPagingResponse")]
        System.IAsyncResult BeginGetRandomGroupPersonPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string randomGroupID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_EMPLOYEEVIEW> EndGetRandomGroupPersonPaging(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetRandomGroupPersonByID", ReplyAction="urn:PerformanceService/GetRandomGroupPersonByIDResponse")]
        System.IAsyncResult BeginGetRandomGroupPersonByID(string randomGroupPersonID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON EndGetRandomGroupPersonByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetRandomGroupPersonByGroupID", ReplyAction="urn:PerformanceService/GetRandomGroupPersonByGroupIDResponse")]
        System.IAsyncResult BeginGetRandomGroupPersonByGroupID(string randomGroupID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> EndGetRandomGroupPersonByGroupID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetRandomGroupAll", ReplyAction="urn:PerformanceService/GetRandomGroupAllResponse")]
        System.IAsyncResult BeginGetRandomGroupAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP> EndGetRandomGroupAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetRandomGroupByID", ReplyAction="urn:PerformanceService/GetRandomGroupByIDResponse")]
        System.IAsyncResult BeginGetRandomGroupByID(string randomGroupID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP EndGetRandomGroupByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/AddRandomGroup", ReplyAction="urn:PerformanceService/AddRandomGroupResponse")]
        System.IAsyncResult BeginAddRandomGroup(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP entType, ref string strMsg, System.AsyncCallback callback, object asyncState);
        
        void EndAddRandomGroup(ref string strMsg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/UpdateRandomGroup", ReplyAction="urn:PerformanceService/UpdateRandomGroupResponse")]
        System.IAsyncResult BeginUpdateRandomGroup(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP entType, ref string strMsg, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateRandomGroup(ref string strMsg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/DeleteRandomGroup", ReplyAction="urn:PerformanceService/DeleteRandomGroupResponse")]
        System.IAsyncResult BeginDeleteRandomGroup(string randomGroupId, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteRandomGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/DeleteRandomGroups", ReplyAction="urn:PerformanceService/DeleteRandomGroupsResponse")]
        System.IAsyncResult BeginDeleteRandomGroups(System.Collections.ObjectModel.ObservableCollection<string> randomGroupId, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteRandomGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/AddRandomGroupPerson", ReplyAction="urn:PerformanceService/AddRandomGroupPersonResponse")]
        System.IAsyncResult BeginAddRandomGroupPerson(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON entType, System.AsyncCallback callback, object asyncState);
        
        void EndAddRandomGroupPerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/AddRandomGroupPersonList", ReplyAction="urn:PerformanceService/AddRandomGroupPersonListResponse")]
        System.IAsyncResult BeginAddRandomGroupPersonList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> entList, System.AsyncCallback callback, object asyncState);
        
        int EndAddRandomGroupPersonList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/UpdateRandomGroupPerson", ReplyAction="urn:PerformanceService/UpdateRandomGroupPersonResponse")]
        System.IAsyncResult BeginUpdateRandomGroupPerson(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON entType, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateRandomGroupPerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/UpdateRandomGroupPersonList", ReplyAction="urn:PerformanceService/UpdateRandomGroupPersonListResponse")]
        System.IAsyncResult BeginUpdateRandomGroupPersonList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> entList, System.Collections.ObjectModel.ObservableCollection<string> employeeIDs, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<int> EndUpdateRandomGroupPersonList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/DeleteRandomGroupPerson", ReplyAction="urn:PerformanceService/DeleteRandomGroupPersonResponse")]
        System.IAsyncResult BeginDeleteRandomGroupPerson(string randomGroupId, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteRandomGroupPerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/DeleteRandomGroupPersons", ReplyAction="urn:PerformanceService/DeleteRandomGroupPersonsResponse")]
        System.IAsyncResult BeginDeleteRandomGroupPersons(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteRandomGroupPersons(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/DeleteRandomPersons", ReplyAction="urn:PerformanceService/DeleteRandomPersonsResponse")]
        System.IAsyncResult BeginDeleteRandomPersons(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, string groupID, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteRandomPersons(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetSumPerformancePaging", ReplyAction="urn:PerformanceService/GetSumPerformancePagingResponse")]
        System.IAsyncResult BeginGetSumPerformancePaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string sType, string sValue, string userID, bool isSelf, string checkState, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD> EndGetSumPerformancePaging(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetSumPerformancePagingByTime", ReplyAction="urn:PerformanceService/GetSumPerformancePagingByTimeResponse")]
        System.IAsyncResult BeginGetSumPerformancePagingByTime(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string sType, string sValue, string userID, bool isSelf, string startTime, string endTime, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD> EndGetSumPerformancePagingByTime(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetPerformanceDetailEmployeeAllPaging", ReplyAction="urn:PerformanceService/GetPerformanceDetailEmployeeAllPagingResponse")]
        System.IAsyncResult BeginGetPerformanceDetailEmployeeAllPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string userID, string startTime, string endTime, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL> EndGetPerformanceDetailEmployeeAllPaging(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetEmployeePerformancePagingByTime", ReplyAction="urn:PerformanceService/GetEmployeePerformancePagingByTimeResponse")]
        System.IAsyncResult BeginGetEmployeePerformancePagingByTime(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string sType, string sValue, string userID, string startTime, string endTime, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> EndGetEmployeePerformancePagingByTime(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetPerformanceEmployeeAllPaging", ReplyAction="urn:PerformanceService/GetPerformanceEmployeeAllPagingResponse")]
        System.IAsyncResult BeginGetPerformanceEmployeeAllPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> EndGetPerformanceEmployeeAllPaging(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetPerformanceAllBySumID", ReplyAction="urn:PerformanceService/GetPerformanceAllBySumIDResponse")]
        System.IAsyncResult BeginGetPerformanceAllBySumID(string sumID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> EndGetPerformanceAllBySumID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetPerformanceEmployeeAllBySumID", ReplyAction="urn:PerformanceService/GetPerformanceEmployeeAllBySumIDResponse")]
        System.IAsyncResult BeginGetPerformanceEmployeeAllBySumID(string sumID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> EndGetPerformanceEmployeeAllBySumID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetPerformanceDetailEmployeeAllBySumID", ReplyAction="urn:PerformanceService/GetPerformanceDetailEmployeeAllBySumIDResponse")]
        System.IAsyncResult BeginGetPerformanceDetailEmployeeAllBySumID(string sumID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL> EndGetPerformanceDetailEmployeeAllBySumID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetEmployePerformance", ReplyAction="urn:PerformanceService/GetEmployePerformanceResponse")]
        System.IAsyncResult BeginGetEmployePerformance(System.Collections.ObjectModel.ObservableCollection<string> employeIDs, System.DateTime startTime, System.DateTime endTime, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, decimal> EndGetEmployePerformance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetPerformanceRecordByID", ReplyAction="urn:PerformanceService/GetPerformanceRecordByIDResponse")]
        System.IAsyncResult BeginGetPerformanceRecordByID(string recordID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD EndGetPerformanceRecordByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/AddSumPerformance", ReplyAction="urn:PerformanceService/AddSumPerformanceResponse")]
        System.IAsyncResult BeginAddSumPerformance(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState);
        
        void EndAddSumPerformance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/GetSumPerformanceRecordByID", ReplyAction="urn:PerformanceService/GetSumPerformanceRecordByIDResponse")]
        System.IAsyncResult BeginGetSumPerformanceRecordByID(string sumid, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD EndGetSumPerformanceRecordByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/UpdateSumPerformance", ReplyAction="urn:PerformanceService/UpdateSumPerformanceResponse")]
        System.IAsyncResult BeginUpdateSumPerformance(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateSumPerformance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/UpdateSumPerformanceAndSum", ReplyAction="urn:PerformanceService/UpdateSumPerformanceAndSumResponse")]
        System.IAsyncResult BeginUpdateSumPerformanceAndSum(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateSumPerformanceAndSum(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/DeleteSumPerformance", ReplyAction="urn:PerformanceService/DeleteSumPerformanceResponse")]
        System.IAsyncResult BeginDeleteSumPerformance(string sumId, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteSumPerformance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PerformanceService/DeleteSumPerformances", ReplyAction="urn:PerformanceService/DeleteSumPerformancesResponse")]
        System.IAsyncResult BeginDeleteSumPerformances(System.Collections.ObjectModel.ObservableCollection<string> sumIdList, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteSumPerformances(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PerformanceServiceChannel : SMT.Saas.Tools.PerformanceWS.PerformanceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddPerformanceRecordListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddPerformanceRecordListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdatePerformanceRecordListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePerformanceRecordListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePerformanceRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePerformanceRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePerformanceRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePerformanceRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KPIScorePostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KPIScorePostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KPISystemScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KPISystemScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KPISystemScoreByKPIPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KPISystemScoreByKPIPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KPIManualScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KPIManualScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KPIManualScoreByKPIPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KPIManualScoreByKPIPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KPIRandomScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KPIRandomScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KPIRandomScoreByKPIPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KPIRandomScoreByKPIPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIPointAndLastPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIPointAndLastPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIPointListByBusinessCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIPointListByBusinessCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIPointByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIPointByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIPointRandomPersonIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIPointRandomPersonIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPITypeByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPITypeByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPITypeAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPITypeAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPITypeWithPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPITypeWithPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIRecordRandomPersonIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIRecordRandomPersonIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIRecordScoreDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIRecordScoreDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIRecordInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIRecordInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIRecordScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIRecordScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<decimal> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<decimal>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIRecordByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIRecordByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckKPIRecordIsComplainingByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckKPIRecordIsComplainingByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPITypePagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPITypePagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddKPITypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddKPITypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strMsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateKPITypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateKPITypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strMsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateKPITypeAndRemindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateKPITypeAndRemindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strMsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteKPITypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteKPITypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteKPITypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteKPITypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strMsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteKPIPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteKPIPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVcomplainRecordByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVcomplainRecordByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveKPIRecordInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveKPIRecordInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIRecordComplainByRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIRecordComplainByRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIRecordComplainByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIRecordComplainByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetComplainRecordPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetComplainRecordPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCompainRecordByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompainRecordByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComplainRecordDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ComplainRecordDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKPIRecordPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKPIRecordPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_KPIRECORD> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_KPIRECORD>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckRecordIsSummarizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckRecordIsSummarizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRandomGroupPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRandomGroupPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRandomGroupPersonAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRandomGroupPersonAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRandomGroupPersonPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRandomGroupPersonPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_EMPLOYEEVIEW> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_EMPLOYEEVIEW>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRandomGroupPersonByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRandomGroupPersonByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRandomGroupPersonByGroupIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRandomGroupPersonByGroupIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRandomGroupAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRandomGroupAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRandomGroupByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRandomGroupByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddRandomGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddRandomGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strMsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateRandomGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateRandomGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strMsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteRandomGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteRandomGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteRandomGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteRandomGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddRandomGroupPersonListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddRandomGroupPersonListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateRandomGroupPersonListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateRandomGroupPersonListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteRandomGroupPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteRandomGroupPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteRandomGroupPersonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteRandomGroupPersonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteRandomPersonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteRandomPersonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSumPerformancePagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSumPerformancePagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSumPerformancePagingByTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSumPerformancePagingByTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceDetailEmployeeAllPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceDetailEmployeeAllPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmployeePerformancePagingByTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmployeePerformancePagingByTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceEmployeeAllPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceEmployeeAllPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceAllBySumIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceAllBySumIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceEmployeeAllBySumIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceEmployeeAllBySumIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceDetailEmployeeAllBySumIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceDetailEmployeeAllBySumIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmployePerformanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmployePerformanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, decimal> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, decimal>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPerformanceRecordByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPerformanceRecordByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSumPerformanceRecordByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSumPerformanceRecordByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteSumPerformanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteSumPerformanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteSumPerformancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteSumPerformancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PerformanceServiceClient : System.ServiceModel.ClientBase<SMT.Saas.Tools.PerformanceWS.PerformanceService>, SMT.Saas.Tools.PerformanceWS.PerformanceService {
        
        private BeginOperationDelegate onBeginAddPerformanceRecordDelegate;
        
        private EndOperationDelegate onEndAddPerformanceRecordDelegate;
        
        private System.Threading.SendOrPostCallback onAddPerformanceRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPerformanceRecordListDelegate;
        
        private EndOperationDelegate onEndAddPerformanceRecordListDelegate;
        
        private System.Threading.SendOrPostCallback onAddPerformanceRecordListCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePerformanceRecordDelegate;
        
        private EndOperationDelegate onEndUpdatePerformanceRecordDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePerformanceRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePerformanceRecordListDelegate;
        
        private EndOperationDelegate onEndUpdatePerformanceRecordListDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePerformanceRecordListCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePerformanceRecordDelegate;
        
        private EndOperationDelegate onEndDeletePerformanceRecordDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePerformanceRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePerformanceRecordsDelegate;
        
        private EndOperationDelegate onEndDeletePerformanceRecordsDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePerformanceRecordsCompletedDelegate;
        
        private BeginOperationDelegate onBeginKPIScorePostDelegate;
        
        private EndOperationDelegate onEndKPIScorePostDelegate;
        
        private System.Threading.SendOrPostCallback onKPIScorePostCompletedDelegate;
        
        private BeginOperationDelegate onBeginKPISystemScoreDelegate;
        
        private EndOperationDelegate onEndKPISystemScoreDelegate;
        
        private System.Threading.SendOrPostCallback onKPISystemScoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginKPISystemScoreByKPIPointDelegate;
        
        private EndOperationDelegate onEndKPISystemScoreByKPIPointDelegate;
        
        private System.Threading.SendOrPostCallback onKPISystemScoreByKPIPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginKPIManualScoreDelegate;
        
        private EndOperationDelegate onEndKPIManualScoreDelegate;
        
        private System.Threading.SendOrPostCallback onKPIManualScoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginKPIManualScoreByKPIPointDelegate;
        
        private EndOperationDelegate onEndKPIManualScoreByKPIPointDelegate;
        
        private System.Threading.SendOrPostCallback onKPIManualScoreByKPIPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginKPIRandomScoreDelegate;
        
        private EndOperationDelegate onEndKPIRandomScoreDelegate;
        
        private System.Threading.SendOrPostCallback onKPIRandomScoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginKPIRandomScoreByKPIPointDelegate;
        
        private EndOperationDelegate onEndKPIRandomScoreByKPIPointDelegate;
        
        private System.Threading.SendOrPostCallback onKPIRandomScoreByKPIPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIPointDelegate;
        
        private EndOperationDelegate onEndGetKPIPointDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIPointAndLastPointDelegate;
        
        private EndOperationDelegate onEndGetKPIPointAndLastPointDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIPointAndLastPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIPointListByBusinessCodeDelegate;
        
        private EndOperationDelegate onEndGetKPIPointListByBusinessCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIPointListByBusinessCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIPointByIDDelegate;
        
        private EndOperationDelegate onEndGetKPIPointByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIPointByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIPointRandomPersonIDDelegate;
        
        private EndOperationDelegate onEndGetKPIPointRandomPersonIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIPointRandomPersonIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPITypeByIDDelegate;
        
        private EndOperationDelegate onEndGetKPITypeByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPITypeByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPITypeAllDelegate;
        
        private EndOperationDelegate onEndGetKPITypeAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPITypeAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPITypeWithPermissionDelegate;
        
        private EndOperationDelegate onEndGetKPITypeWithPermissionDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPITypeWithPermissionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIRecordRandomPersonIDDelegate;
        
        private EndOperationDelegate onEndGetKPIRecordRandomPersonIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIRecordRandomPersonIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIRecordDelegate;
        
        private EndOperationDelegate onEndGetKPIRecordDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIRecordScoreDetailDelegate;
        
        private EndOperationDelegate onEndGetKPIRecordScoreDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIRecordScoreDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIRecordInterfaceDelegate;
        
        private EndOperationDelegate onEndGetKPIRecordInterfaceDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIRecordInterfaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIRecordScoreDelegate;
        
        private EndOperationDelegate onEndGetKPIRecordScoreDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIRecordScoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIRecordByIdDelegate;
        
        private EndOperationDelegate onEndGetKPIRecordByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIRecordByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckKPIRecordIsComplainingByUserIDDelegate;
        
        private EndOperationDelegate onEndCheckKPIRecordIsComplainingByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onCheckKPIRecordIsComplainingByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPITypePagingDelegate;
        
        private EndOperationDelegate onEndGetKPITypePagingDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPITypePagingCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddKPITypeDelegate;
        
        private EndOperationDelegate onEndAddKPITypeDelegate;
        
        private System.Threading.SendOrPostCallback onAddKPITypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateKPITypeDelegate;
        
        private EndOperationDelegate onEndUpdateKPITypeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateKPITypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateKPITypeAndRemindDelegate;
        
        private EndOperationDelegate onEndUpdateKPITypeAndRemindDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateKPITypeAndRemindCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteKPITypeDelegate;
        
        private EndOperationDelegate onEndDeleteKPITypeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteKPITypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteKPITypesDelegate;
        
        private EndOperationDelegate onEndDeleteKPITypesDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteKPITypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddKPIPointDelegate;
        
        private EndOperationDelegate onEndAddKPIPointDelegate;
        
        private System.Threading.SendOrPostCallback onAddKPIPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateKPIPointDelegate;
        
        private EndOperationDelegate onEndUpdateKPIPointDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateKPIPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateKPIPointAndRemindDelegate;
        
        private EndOperationDelegate onEndUpdateKPIPointAndRemindDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateKPIPointAndRemindCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteKPIPointDelegate;
        
        private EndOperationDelegate onEndDeleteKPIPointDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteKPIPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginKPIRecordUpdateDelegate;
        
        private EndOperationDelegate onEndKPIRecordUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onKPIRecordUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVcomplainRecordByIDDelegate;
        
        private EndOperationDelegate onEndGetVcomplainRecordByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetVcomplainRecordByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveKPIRecordInterfaceDelegate;
        
        private EndOperationDelegate onEndSaveKPIRecordInterfaceDelegate;
        
        private System.Threading.SendOrPostCallback onSaveKPIRecordInterfaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIRecordComplainByRecordDelegate;
        
        private EndOperationDelegate onEndGetKPIRecordComplainByRecordDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIRecordComplainByRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIRecordComplainByIDDelegate;
        
        private EndOperationDelegate onEndGetKPIRecordComplainByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIRecordComplainByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddKPIRecordComplainDelegate;
        
        private EndOperationDelegate onEndAddKPIRecordComplainDelegate;
        
        private System.Threading.SendOrPostCallback onAddKPIRecordComplainCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateKPIRecordComplainDelegate;
        
        private EndOperationDelegate onEndUpdateKPIRecordComplainDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateKPIRecordComplainCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetComplainRecordPagingDelegate;
        
        private EndOperationDelegate onEndGetComplainRecordPagingDelegate;
        
        private System.Threading.SendOrPostCallback onGetComplainRecordPagingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompainRecordByIDDelegate;
        
        private EndOperationDelegate onEndGetCompainRecordByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompainRecordByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginCompainRecordUpdateDelegate;
        
        private EndOperationDelegate onEndCompainRecordUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onCompainRecordUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCompainRecordUpdateOverDelegate;
        
        private EndOperationDelegate onEndCompainRecordUpdateOverDelegate;
        
        private System.Threading.SendOrPostCallback onCompainRecordUpdateOverCompletedDelegate;
        
        private BeginOperationDelegate onBeginComplainRecordDeleteDelegate;
        
        private EndOperationDelegate onEndComplainRecordDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onComplainRecordDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetKPIRecordPagingDelegate;
        
        private EndOperationDelegate onEndGetKPIRecordPagingDelegate;
        
        private System.Threading.SendOrPostCallback onGetKPIRecordPagingCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckRecordIsSummarizeDelegate;
        
        private EndOperationDelegate onEndCheckRecordIsSummarizeDelegate;
        
        private System.Threading.SendOrPostCallback onCheckRecordIsSummarizeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRandomGroupPagingDelegate;
        
        private EndOperationDelegate onEndGetRandomGroupPagingDelegate;
        
        private System.Threading.SendOrPostCallback onGetRandomGroupPagingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRandomGroupPersonAllDelegate;
        
        private EndOperationDelegate onEndGetRandomGroupPersonAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetRandomGroupPersonAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRandomGroupPersonPagingDelegate;
        
        private EndOperationDelegate onEndGetRandomGroupPersonPagingDelegate;
        
        private System.Threading.SendOrPostCallback onGetRandomGroupPersonPagingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRandomGroupPersonByIDDelegate;
        
        private EndOperationDelegate onEndGetRandomGroupPersonByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetRandomGroupPersonByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRandomGroupPersonByGroupIDDelegate;
        
        private EndOperationDelegate onEndGetRandomGroupPersonByGroupIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetRandomGroupPersonByGroupIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRandomGroupAllDelegate;
        
        private EndOperationDelegate onEndGetRandomGroupAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetRandomGroupAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRandomGroupByIDDelegate;
        
        private EndOperationDelegate onEndGetRandomGroupByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetRandomGroupByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddRandomGroupDelegate;
        
        private EndOperationDelegate onEndAddRandomGroupDelegate;
        
        private System.Threading.SendOrPostCallback onAddRandomGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRandomGroupDelegate;
        
        private EndOperationDelegate onEndUpdateRandomGroupDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRandomGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRandomGroupDelegate;
        
        private EndOperationDelegate onEndDeleteRandomGroupDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRandomGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRandomGroupsDelegate;
        
        private EndOperationDelegate onEndDeleteRandomGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRandomGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddRandomGroupPersonDelegate;
        
        private EndOperationDelegate onEndAddRandomGroupPersonDelegate;
        
        private System.Threading.SendOrPostCallback onAddRandomGroupPersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddRandomGroupPersonListDelegate;
        
        private EndOperationDelegate onEndAddRandomGroupPersonListDelegate;
        
        private System.Threading.SendOrPostCallback onAddRandomGroupPersonListCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRandomGroupPersonDelegate;
        
        private EndOperationDelegate onEndUpdateRandomGroupPersonDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRandomGroupPersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRandomGroupPersonListDelegate;
        
        private EndOperationDelegate onEndUpdateRandomGroupPersonListDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRandomGroupPersonListCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRandomGroupPersonDelegate;
        
        private EndOperationDelegate onEndDeleteRandomGroupPersonDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRandomGroupPersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRandomGroupPersonsDelegate;
        
        private EndOperationDelegate onEndDeleteRandomGroupPersonsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRandomGroupPersonsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRandomPersonsDelegate;
        
        private EndOperationDelegate onEndDeleteRandomPersonsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRandomPersonsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSumPerformancePagingDelegate;
        
        private EndOperationDelegate onEndGetSumPerformancePagingDelegate;
        
        private System.Threading.SendOrPostCallback onGetSumPerformancePagingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSumPerformancePagingByTimeDelegate;
        
        private EndOperationDelegate onEndGetSumPerformancePagingByTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetSumPerformancePagingByTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceDetailEmployeeAllPagingDelegate;
        
        private EndOperationDelegate onEndGetPerformanceDetailEmployeeAllPagingDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceDetailEmployeeAllPagingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmployeePerformancePagingByTimeDelegate;
        
        private EndOperationDelegate onEndGetEmployeePerformancePagingByTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmployeePerformancePagingByTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceEmployeeAllPagingDelegate;
        
        private EndOperationDelegate onEndGetPerformanceEmployeeAllPagingDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceEmployeeAllPagingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceAllBySumIDDelegate;
        
        private EndOperationDelegate onEndGetPerformanceAllBySumIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceAllBySumIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceEmployeeAllBySumIDDelegate;
        
        private EndOperationDelegate onEndGetPerformanceEmployeeAllBySumIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceEmployeeAllBySumIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceDetailEmployeeAllBySumIDDelegate;
        
        private EndOperationDelegate onEndGetPerformanceDetailEmployeeAllBySumIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceDetailEmployeeAllBySumIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmployePerformanceDelegate;
        
        private EndOperationDelegate onEndGetEmployePerformanceDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmployePerformanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPerformanceRecordByIDDelegate;
        
        private EndOperationDelegate onEndGetPerformanceRecordByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPerformanceRecordByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddSumPerformanceDelegate;
        
        private EndOperationDelegate onEndAddSumPerformanceDelegate;
        
        private System.Threading.SendOrPostCallback onAddSumPerformanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSumPerformanceRecordByIDDelegate;
        
        private EndOperationDelegate onEndGetSumPerformanceRecordByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetSumPerformanceRecordByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSumPerformanceDelegate;
        
        private EndOperationDelegate onEndUpdateSumPerformanceDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSumPerformanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSumPerformanceAndSumDelegate;
        
        private EndOperationDelegate onEndUpdateSumPerformanceAndSumDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSumPerformanceAndSumCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSumPerformanceDelegate;
        
        private EndOperationDelegate onEndDeleteSumPerformanceDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSumPerformanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSumPerformancesDelegate;
        
        private EndOperationDelegate onEndDeleteSumPerformancesDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSumPerformancesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PerformanceServiceClient() {
        }
        
        public PerformanceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PerformanceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PerformanceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PerformanceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddPerformanceRecordCompleted;
        
        public event System.EventHandler<AddPerformanceRecordListCompletedEventArgs> AddPerformanceRecordListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePerformanceRecordCompleted;
        
        public event System.EventHandler<UpdatePerformanceRecordListCompletedEventArgs> UpdatePerformanceRecordListCompleted;
        
        public event System.EventHandler<DeletePerformanceRecordCompletedEventArgs> DeletePerformanceRecordCompleted;
        
        public event System.EventHandler<DeletePerformanceRecordsCompletedEventArgs> DeletePerformanceRecordsCompleted;
        
        public event System.EventHandler<KPIScorePostCompletedEventArgs> KPIScorePostCompleted;
        
        public event System.EventHandler<KPISystemScoreCompletedEventArgs> KPISystemScoreCompleted;
        
        public event System.EventHandler<KPISystemScoreByKPIPointCompletedEventArgs> KPISystemScoreByKPIPointCompleted;
        
        public event System.EventHandler<KPIManualScoreCompletedEventArgs> KPIManualScoreCompleted;
        
        public event System.EventHandler<KPIManualScoreByKPIPointCompletedEventArgs> KPIManualScoreByKPIPointCompleted;
        
        public event System.EventHandler<KPIRandomScoreCompletedEventArgs> KPIRandomScoreCompleted;
        
        public event System.EventHandler<KPIRandomScoreByKPIPointCompletedEventArgs> KPIRandomScoreByKPIPointCompleted;
        
        public event System.EventHandler<GetKPIPointCompletedEventArgs> GetKPIPointCompleted;
        
        public event System.EventHandler<GetKPIPointAndLastPointCompletedEventArgs> GetKPIPointAndLastPointCompleted;
        
        public event System.EventHandler<GetKPIPointListByBusinessCodeCompletedEventArgs> GetKPIPointListByBusinessCodeCompleted;
        
        public event System.EventHandler<GetKPIPointByIDCompletedEventArgs> GetKPIPointByIDCompleted;
        
        public event System.EventHandler<GetKPIPointRandomPersonIDCompletedEventArgs> GetKPIPointRandomPersonIDCompleted;
        
        public event System.EventHandler<GetKPITypeByIDCompletedEventArgs> GetKPITypeByIDCompleted;
        
        public event System.EventHandler<GetKPITypeAllCompletedEventArgs> GetKPITypeAllCompleted;
        
        public event System.EventHandler<GetKPITypeWithPermissionCompletedEventArgs> GetKPITypeWithPermissionCompleted;
        
        public event System.EventHandler<GetKPIRecordRandomPersonIDCompletedEventArgs> GetKPIRecordRandomPersonIDCompleted;
        
        public event System.EventHandler<GetKPIRecordCompletedEventArgs> GetKPIRecordCompleted;
        
        public event System.EventHandler<GetKPIRecordScoreDetailCompletedEventArgs> GetKPIRecordScoreDetailCompleted;
        
        public event System.EventHandler<GetKPIRecordInterfaceCompletedEventArgs> GetKPIRecordInterfaceCompleted;
        
        public event System.EventHandler<GetKPIRecordScoreCompletedEventArgs> GetKPIRecordScoreCompleted;
        
        public event System.EventHandler<GetKPIRecordByIdCompletedEventArgs> GetKPIRecordByIdCompleted;
        
        public event System.EventHandler<CheckKPIRecordIsComplainingByUserIDCompletedEventArgs> CheckKPIRecordIsComplainingByUserIDCompleted;
        
        public event System.EventHandler<GetKPITypePagingCompletedEventArgs> GetKPITypePagingCompleted;
        
        public event System.EventHandler<AddKPITypeCompletedEventArgs> AddKPITypeCompleted;
        
        public event System.EventHandler<UpdateKPITypeCompletedEventArgs> UpdateKPITypeCompleted;
        
        public event System.EventHandler<UpdateKPITypeAndRemindCompletedEventArgs> UpdateKPITypeAndRemindCompleted;
        
        public event System.EventHandler<DeleteKPITypeCompletedEventArgs> DeleteKPITypeCompleted;
        
        public event System.EventHandler<DeleteKPITypesCompletedEventArgs> DeleteKPITypesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddKPIPointCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateKPIPointCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateKPIPointAndRemindCompleted;
        
        public event System.EventHandler<DeleteKPIPointCompletedEventArgs> DeleteKPIPointCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> KPIRecordUpdateCompleted;
        
        public event System.EventHandler<GetVcomplainRecordByIDCompletedEventArgs> GetVcomplainRecordByIDCompleted;
        
        public event System.EventHandler<SaveKPIRecordInterfaceCompletedEventArgs> SaveKPIRecordInterfaceCompleted;
        
        public event System.EventHandler<GetKPIRecordComplainByRecordCompletedEventArgs> GetKPIRecordComplainByRecordCompleted;
        
        public event System.EventHandler<GetKPIRecordComplainByIDCompletedEventArgs> GetKPIRecordComplainByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddKPIRecordComplainCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateKPIRecordComplainCompleted;
        
        public event System.EventHandler<GetComplainRecordPagingCompletedEventArgs> GetComplainRecordPagingCompleted;
        
        public event System.EventHandler<GetCompainRecordByIDCompletedEventArgs> GetCompainRecordByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CompainRecordUpdateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CompainRecordUpdateOverCompleted;
        
        public event System.EventHandler<ComplainRecordDeleteCompletedEventArgs> ComplainRecordDeleteCompleted;
        
        public event System.EventHandler<GetKPIRecordPagingCompletedEventArgs> GetKPIRecordPagingCompleted;
        
        public event System.EventHandler<CheckRecordIsSummarizeCompletedEventArgs> CheckRecordIsSummarizeCompleted;
        
        public event System.EventHandler<GetRandomGroupPagingCompletedEventArgs> GetRandomGroupPagingCompleted;
        
        public event System.EventHandler<GetRandomGroupPersonAllCompletedEventArgs> GetRandomGroupPersonAllCompleted;
        
        public event System.EventHandler<GetRandomGroupPersonPagingCompletedEventArgs> GetRandomGroupPersonPagingCompleted;
        
        public event System.EventHandler<GetRandomGroupPersonByIDCompletedEventArgs> GetRandomGroupPersonByIDCompleted;
        
        public event System.EventHandler<GetRandomGroupPersonByGroupIDCompletedEventArgs> GetRandomGroupPersonByGroupIDCompleted;
        
        public event System.EventHandler<GetRandomGroupAllCompletedEventArgs> GetRandomGroupAllCompleted;
        
        public event System.EventHandler<GetRandomGroupByIDCompletedEventArgs> GetRandomGroupByIDCompleted;
        
        public event System.EventHandler<AddRandomGroupCompletedEventArgs> AddRandomGroupCompleted;
        
        public event System.EventHandler<UpdateRandomGroupCompletedEventArgs> UpdateRandomGroupCompleted;
        
        public event System.EventHandler<DeleteRandomGroupCompletedEventArgs> DeleteRandomGroupCompleted;
        
        public event System.EventHandler<DeleteRandomGroupsCompletedEventArgs> DeleteRandomGroupsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddRandomGroupPersonCompleted;
        
        public event System.EventHandler<AddRandomGroupPersonListCompletedEventArgs> AddRandomGroupPersonListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateRandomGroupPersonCompleted;
        
        public event System.EventHandler<UpdateRandomGroupPersonListCompletedEventArgs> UpdateRandomGroupPersonListCompleted;
        
        public event System.EventHandler<DeleteRandomGroupPersonCompletedEventArgs> DeleteRandomGroupPersonCompleted;
        
        public event System.EventHandler<DeleteRandomGroupPersonsCompletedEventArgs> DeleteRandomGroupPersonsCompleted;
        
        public event System.EventHandler<DeleteRandomPersonsCompletedEventArgs> DeleteRandomPersonsCompleted;
        
        public event System.EventHandler<GetSumPerformancePagingCompletedEventArgs> GetSumPerformancePagingCompleted;
        
        public event System.EventHandler<GetSumPerformancePagingByTimeCompletedEventArgs> GetSumPerformancePagingByTimeCompleted;
        
        public event System.EventHandler<GetPerformanceDetailEmployeeAllPagingCompletedEventArgs> GetPerformanceDetailEmployeeAllPagingCompleted;
        
        public event System.EventHandler<GetEmployeePerformancePagingByTimeCompletedEventArgs> GetEmployeePerformancePagingByTimeCompleted;
        
        public event System.EventHandler<GetPerformanceEmployeeAllPagingCompletedEventArgs> GetPerformanceEmployeeAllPagingCompleted;
        
        public event System.EventHandler<GetPerformanceAllBySumIDCompletedEventArgs> GetPerformanceAllBySumIDCompleted;
        
        public event System.EventHandler<GetPerformanceEmployeeAllBySumIDCompletedEventArgs> GetPerformanceEmployeeAllBySumIDCompleted;
        
        public event System.EventHandler<GetPerformanceDetailEmployeeAllBySumIDCompletedEventArgs> GetPerformanceDetailEmployeeAllBySumIDCompleted;
        
        public event System.EventHandler<GetEmployePerformanceCompletedEventArgs> GetEmployePerformanceCompleted;
        
        public event System.EventHandler<GetPerformanceRecordByIDCompletedEventArgs> GetPerformanceRecordByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddSumPerformanceCompleted;
        
        public event System.EventHandler<GetSumPerformanceRecordByIDCompletedEventArgs> GetSumPerformanceRecordByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateSumPerformanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateSumPerformanceAndSumCompleted;
        
        public event System.EventHandler<DeleteSumPerformanceCompletedEventArgs> DeleteSumPerformanceCompleted;
        
        public event System.EventHandler<DeleteSumPerformancesCompletedEventArgs> DeleteSumPerformancesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginAddPerformanceRecord(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPerformanceRecord(entType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndAddPerformanceRecord(System.IAsyncResult result) {
            base.Channel.EndAddPerformanceRecord(result);
        }
        
        private System.IAsyncResult OnBeginAddPerformanceRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginAddPerformanceRecord(entType, callback, asyncState);
        }
        
        private object[] OnEndAddPerformanceRecord(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndAddPerformanceRecord(result);
            return null;
        }
        
        private void OnAddPerformanceRecordCompleted(object state) {
            if ((this.AddPerformanceRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPerformanceRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPerformanceRecordAsync(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD entType) {
            this.AddPerformanceRecordAsync(entType, null);
        }
        
        public void AddPerformanceRecordAsync(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD entType, object userState) {
            if ((this.onBeginAddPerformanceRecordDelegate == null)) {
                this.onBeginAddPerformanceRecordDelegate = new BeginOperationDelegate(this.OnBeginAddPerformanceRecord);
            }
            if ((this.onEndAddPerformanceRecordDelegate == null)) {
                this.onEndAddPerformanceRecordDelegate = new EndOperationDelegate(this.OnEndAddPerformanceRecord);
            }
            if ((this.onAddPerformanceRecordCompletedDelegate == null)) {
                this.onAddPerformanceRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPerformanceRecordCompleted);
            }
            base.InvokeAsync(this.onBeginAddPerformanceRecordDelegate, new object[] {
                        entType}, this.onEndAddPerformanceRecordDelegate, this.onAddPerformanceRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginAddPerformanceRecordList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> entList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPerformanceRecordList(entList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndAddPerformanceRecordList(System.IAsyncResult result) {
            return base.Channel.EndAddPerformanceRecordList(result);
        }
        
        private System.IAsyncResult OnBeginAddPerformanceRecordList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> entList = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD>)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginAddPerformanceRecordList(entList, callback, asyncState);
        }
        
        private object[] OnEndAddPerformanceRecordList(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndAddPerformanceRecordList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddPerformanceRecordListCompleted(object state) {
            if ((this.AddPerformanceRecordListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPerformanceRecordListCompleted(this, new AddPerformanceRecordListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPerformanceRecordListAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> entList) {
            this.AddPerformanceRecordListAsync(entList, null);
        }
        
        public void AddPerformanceRecordListAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> entList, object userState) {
            if ((this.onBeginAddPerformanceRecordListDelegate == null)) {
                this.onBeginAddPerformanceRecordListDelegate = new BeginOperationDelegate(this.OnBeginAddPerformanceRecordList);
            }
            if ((this.onEndAddPerformanceRecordListDelegate == null)) {
                this.onEndAddPerformanceRecordListDelegate = new EndOperationDelegate(this.OnEndAddPerformanceRecordList);
            }
            if ((this.onAddPerformanceRecordListCompletedDelegate == null)) {
                this.onAddPerformanceRecordListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPerformanceRecordListCompleted);
            }
            base.InvokeAsync(this.onBeginAddPerformanceRecordListDelegate, new object[] {
                        entList}, this.onEndAddPerformanceRecordListDelegate, this.onAddPerformanceRecordListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginUpdatePerformanceRecord(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePerformanceRecord(entType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndUpdatePerformanceRecord(System.IAsyncResult result) {
            base.Channel.EndUpdatePerformanceRecord(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePerformanceRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginUpdatePerformanceRecord(entType, callback, asyncState);
        }
        
        private object[] OnEndUpdatePerformanceRecord(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndUpdatePerformanceRecord(result);
            return null;
        }
        
        private void OnUpdatePerformanceRecordCompleted(object state) {
            if ((this.UpdatePerformanceRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePerformanceRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePerformanceRecordAsync(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD entType) {
            this.UpdatePerformanceRecordAsync(entType, null);
        }
        
        public void UpdatePerformanceRecordAsync(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD entType, object userState) {
            if ((this.onBeginUpdatePerformanceRecordDelegate == null)) {
                this.onBeginUpdatePerformanceRecordDelegate = new BeginOperationDelegate(this.OnBeginUpdatePerformanceRecord);
            }
            if ((this.onEndUpdatePerformanceRecordDelegate == null)) {
                this.onEndUpdatePerformanceRecordDelegate = new EndOperationDelegate(this.OnEndUpdatePerformanceRecord);
            }
            if ((this.onUpdatePerformanceRecordCompletedDelegate == null)) {
                this.onUpdatePerformanceRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePerformanceRecordCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePerformanceRecordDelegate, new object[] {
                        entType}, this.onEndUpdatePerformanceRecordDelegate, this.onUpdatePerformanceRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginUpdatePerformanceRecordList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> entList, System.Collections.ObjectModel.ObservableCollection<string> employeeIDs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePerformanceRecordList(entList, employeeIDs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<int> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndUpdatePerformanceRecordList(System.IAsyncResult result) {
            return base.Channel.EndUpdatePerformanceRecordList(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePerformanceRecordList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> entList = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD>)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<string> employeeIDs = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[1]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginUpdatePerformanceRecordList(entList, employeeIDs, callback, asyncState);
        }
        
        private object[] OnEndUpdatePerformanceRecordList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<int> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndUpdatePerformanceRecordList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdatePerformanceRecordListCompleted(object state) {
            if ((this.UpdatePerformanceRecordListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePerformanceRecordListCompleted(this, new UpdatePerformanceRecordListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePerformanceRecordListAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> entList, System.Collections.ObjectModel.ObservableCollection<string> employeeIDs) {
            this.UpdatePerformanceRecordListAsync(entList, employeeIDs, null);
        }
        
        public void UpdatePerformanceRecordListAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> entList, System.Collections.ObjectModel.ObservableCollection<string> employeeIDs, object userState) {
            if ((this.onBeginUpdatePerformanceRecordListDelegate == null)) {
                this.onBeginUpdatePerformanceRecordListDelegate = new BeginOperationDelegate(this.OnBeginUpdatePerformanceRecordList);
            }
            if ((this.onEndUpdatePerformanceRecordListDelegate == null)) {
                this.onEndUpdatePerformanceRecordListDelegate = new EndOperationDelegate(this.OnEndUpdatePerformanceRecordList);
            }
            if ((this.onUpdatePerformanceRecordListCompletedDelegate == null)) {
                this.onUpdatePerformanceRecordListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePerformanceRecordListCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePerformanceRecordListDelegate, new object[] {
                        entList,
                        employeeIDs}, this.onEndUpdatePerformanceRecordListDelegate, this.onUpdatePerformanceRecordListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginDeletePerformanceRecord(string randomGroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePerformanceRecord(randomGroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndDeletePerformanceRecord(System.IAsyncResult result) {
            return base.Channel.EndDeletePerformanceRecord(result);
        }
        
        private System.IAsyncResult OnBeginDeletePerformanceRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string randomGroupId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginDeletePerformanceRecord(randomGroupId, callback, asyncState);
        }
        
        private object[] OnEndDeletePerformanceRecord(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndDeletePerformanceRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePerformanceRecordCompleted(object state) {
            if ((this.DeletePerformanceRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePerformanceRecordCompleted(this, new DeletePerformanceRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePerformanceRecordAsync(string randomGroupId) {
            this.DeletePerformanceRecordAsync(randomGroupId, null);
        }
        
        public void DeletePerformanceRecordAsync(string randomGroupId, object userState) {
            if ((this.onBeginDeletePerformanceRecordDelegate == null)) {
                this.onBeginDeletePerformanceRecordDelegate = new BeginOperationDelegate(this.OnBeginDeletePerformanceRecord);
            }
            if ((this.onEndDeletePerformanceRecordDelegate == null)) {
                this.onEndDeletePerformanceRecordDelegate = new EndOperationDelegate(this.OnEndDeletePerformanceRecord);
            }
            if ((this.onDeletePerformanceRecordCompletedDelegate == null)) {
                this.onDeletePerformanceRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePerformanceRecordCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePerformanceRecordDelegate, new object[] {
                        randomGroupId}, this.onEndDeletePerformanceRecordDelegate, this.onDeletePerformanceRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginDeletePerformanceRecords(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePerformanceRecords(groupPersonIDs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PerformanceWS.PerformanceService.EndDeletePerformanceRecords(System.IAsyncResult result) {
            return base.Channel.EndDeletePerformanceRecords(result);
        }
        
        private System.IAsyncResult OnBeginDeletePerformanceRecords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginDeletePerformanceRecords(groupPersonIDs, callback, asyncState);
        }
        
        private object[] OnEndDeletePerformanceRecords(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndDeletePerformanceRecords(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePerformanceRecordsCompleted(object state) {
            if ((this.DeletePerformanceRecordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePerformanceRecordsCompleted(this, new DeletePerformanceRecordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePerformanceRecordsAsync(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs) {
            this.DeletePerformanceRecordsAsync(groupPersonIDs, null);
        }
        
        public void DeletePerformanceRecordsAsync(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, object userState) {
            if ((this.onBeginDeletePerformanceRecordsDelegate == null)) {
                this.onBeginDeletePerformanceRecordsDelegate = new BeginOperationDelegate(this.OnBeginDeletePerformanceRecords);
            }
            if ((this.onEndDeletePerformanceRecordsDelegate == null)) {
                this.onEndDeletePerformanceRecordsDelegate = new EndOperationDelegate(this.OnEndDeletePerformanceRecords);
            }
            if ((this.onDeletePerformanceRecordsCompletedDelegate == null)) {
                this.onDeletePerformanceRecordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePerformanceRecordsCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePerformanceRecordsDelegate, new object[] {
                        groupPersonIDs}, this.onEndDeletePerformanceRecordsDelegate, this.onDeletePerformanceRecordsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginKPIScorePost(string BusinessCodePost, string RelationIDPost, string CreateCompanyIDPost, string CreateDepartmentIDPost, string CreatePostIDPost, string CreateUserIDPost, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKPIScorePost(BusinessCodePost, RelationIDPost, CreateCompanyIDPost, CreateDepartmentIDPost, CreatePostIDPost, CreateUserIDPost, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndKPIScorePost(System.IAsyncResult result) {
            return base.Channel.EndKPIScorePost(result);
        }
        
        private System.IAsyncResult OnBeginKPIScorePost(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string BusinessCodePost = ((string)(inValues[0]));
            string RelationIDPost = ((string)(inValues[1]));
            string CreateCompanyIDPost = ((string)(inValues[2]));
            string CreateDepartmentIDPost = ((string)(inValues[3]));
            string CreatePostIDPost = ((string)(inValues[4]));
            string CreateUserIDPost = ((string)(inValues[5]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginKPIScorePost(BusinessCodePost, RelationIDPost, CreateCompanyIDPost, CreateDepartmentIDPost, CreatePostIDPost, CreateUserIDPost, callback, asyncState);
        }
        
        private object[] OnEndKPIScorePost(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndKPIScorePost(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKPIScorePostCompleted(object state) {
            if ((this.KPIScorePostCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KPIScorePostCompleted(this, new KPIScorePostCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KPIScorePostAsync(string BusinessCodePost, string RelationIDPost, string CreateCompanyIDPost, string CreateDepartmentIDPost, string CreatePostIDPost, string CreateUserIDPost) {
            this.KPIScorePostAsync(BusinessCodePost, RelationIDPost, CreateCompanyIDPost, CreateDepartmentIDPost, CreatePostIDPost, CreateUserIDPost, null);
        }
        
        public void KPIScorePostAsync(string BusinessCodePost, string RelationIDPost, string CreateCompanyIDPost, string CreateDepartmentIDPost, string CreatePostIDPost, string CreateUserIDPost, object userState) {
            if ((this.onBeginKPIScorePostDelegate == null)) {
                this.onBeginKPIScorePostDelegate = new BeginOperationDelegate(this.OnBeginKPIScorePost);
            }
            if ((this.onEndKPIScorePostDelegate == null)) {
                this.onEndKPIScorePostDelegate = new EndOperationDelegate(this.OnEndKPIScorePost);
            }
            if ((this.onKPIScorePostCompletedDelegate == null)) {
                this.onKPIScorePostCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKPIScorePostCompleted);
            }
            base.InvokeAsync(this.onBeginKPIScorePostDelegate, new object[] {
                        BusinessCodePost,
                        RelationIDPost,
                        CreateCompanyIDPost,
                        CreateDepartmentIDPost,
                        CreatePostIDPost,
                        CreateUserIDPost}, this.onEndKPIScorePostDelegate, this.onKPIScorePostCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginKPISystemScore(string companyID, string modelRelationID, string flowCode, string stepCode, string formCode, string flowID, string stepID, System.DateTime lastStepDate, System.DateTime stepDate, string AppraiseeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKPISystemScore(companyID, modelRelationID, flowCode, stepCode, formCode, flowID, stepID, lastStepDate, stepDate, AppraiseeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndKPISystemScore(System.IAsyncResult result) {
            return base.Channel.EndKPISystemScore(result);
        }
        
        private System.IAsyncResult OnBeginKPISystemScore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string companyID = ((string)(inValues[0]));
            string modelRelationID = ((string)(inValues[1]));
            string flowCode = ((string)(inValues[2]));
            string stepCode = ((string)(inValues[3]));
            string formCode = ((string)(inValues[4]));
            string flowID = ((string)(inValues[5]));
            string stepID = ((string)(inValues[6]));
            System.DateTime lastStepDate = ((System.DateTime)(inValues[7]));
            System.DateTime stepDate = ((System.DateTime)(inValues[8]));
            string AppraiseeID = ((string)(inValues[9]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginKPISystemScore(companyID, modelRelationID, flowCode, stepCode, formCode, flowID, stepID, lastStepDate, stepDate, AppraiseeID, callback, asyncState);
        }
        
        private object[] OnEndKPISystemScore(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndKPISystemScore(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKPISystemScoreCompleted(object state) {
            if ((this.KPISystemScoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KPISystemScoreCompleted(this, new KPISystemScoreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KPISystemScoreAsync(string companyID, string modelRelationID, string flowCode, string stepCode, string formCode, string flowID, string stepID, System.DateTime lastStepDate, System.DateTime stepDate, string AppraiseeID) {
            this.KPISystemScoreAsync(companyID, modelRelationID, flowCode, stepCode, formCode, flowID, stepID, lastStepDate, stepDate, AppraiseeID, null);
        }
        
        public void KPISystemScoreAsync(string companyID, string modelRelationID, string flowCode, string stepCode, string formCode, string flowID, string stepID, System.DateTime lastStepDate, System.DateTime stepDate, string AppraiseeID, object userState) {
            if ((this.onBeginKPISystemScoreDelegate == null)) {
                this.onBeginKPISystemScoreDelegate = new BeginOperationDelegate(this.OnBeginKPISystemScore);
            }
            if ((this.onEndKPISystemScoreDelegate == null)) {
                this.onEndKPISystemScoreDelegate = new EndOperationDelegate(this.OnEndKPISystemScore);
            }
            if ((this.onKPISystemScoreCompletedDelegate == null)) {
                this.onKPISystemScoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKPISystemScoreCompleted);
            }
            base.InvokeAsync(this.onBeginKPISystemScoreDelegate, new object[] {
                        companyID,
                        modelRelationID,
                        flowCode,
                        stepCode,
                        formCode,
                        flowID,
                        stepID,
                        lastStepDate,
                        stepDate,
                        AppraiseeID}, this.onEndKPISystemScoreDelegate, this.onKPISystemScoreCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginKPISystemScoreByKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string stepID, System.DateTime lastStepDate, System.DateTime stepDate, string AppraiseeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKPISystemScoreByKPIPoint(kpiPoint, formCode, flowID, stepID, lastStepDate, stepDate, AppraiseeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndKPISystemScoreByKPIPoint(System.IAsyncResult result) {
            return base.Channel.EndKPISystemScoreByKPIPoint(result);
        }
        
        private System.IAsyncResult OnBeginKPISystemScoreByKPIPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT)(inValues[0]));
            string formCode = ((string)(inValues[1]));
            string flowID = ((string)(inValues[2]));
            string stepID = ((string)(inValues[3]));
            System.DateTime lastStepDate = ((System.DateTime)(inValues[4]));
            System.DateTime stepDate = ((System.DateTime)(inValues[5]));
            string AppraiseeID = ((string)(inValues[6]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginKPISystemScoreByKPIPoint(kpiPoint, formCode, flowID, stepID, lastStepDate, stepDate, AppraiseeID, callback, asyncState);
        }
        
        private object[] OnEndKPISystemScoreByKPIPoint(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndKPISystemScoreByKPIPoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKPISystemScoreByKPIPointCompleted(object state) {
            if ((this.KPISystemScoreByKPIPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KPISystemScoreByKPIPointCompleted(this, new KPISystemScoreByKPIPointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KPISystemScoreByKPIPointAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string stepID, System.DateTime lastStepDate, System.DateTime stepDate, string AppraiseeID) {
            this.KPISystemScoreByKPIPointAsync(kpiPoint, formCode, flowID, stepID, lastStepDate, stepDate, AppraiseeID, null);
        }
        
        public void KPISystemScoreByKPIPointAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string stepID, System.DateTime lastStepDate, System.DateTime stepDate, string AppraiseeID, object userState) {
            if ((this.onBeginKPISystemScoreByKPIPointDelegate == null)) {
                this.onBeginKPISystemScoreByKPIPointDelegate = new BeginOperationDelegate(this.OnBeginKPISystemScoreByKPIPoint);
            }
            if ((this.onEndKPISystemScoreByKPIPointDelegate == null)) {
                this.onEndKPISystemScoreByKPIPointDelegate = new EndOperationDelegate(this.OnEndKPISystemScoreByKPIPoint);
            }
            if ((this.onKPISystemScoreByKPIPointCompletedDelegate == null)) {
                this.onKPISystemScoreByKPIPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKPISystemScoreByKPIPointCompleted);
            }
            base.InvokeAsync(this.onBeginKPISystemScoreByKPIPointDelegate, new object[] {
                        kpiPoint,
                        formCode,
                        flowID,
                        stepID,
                        lastStepDate,
                        stepDate,
                        AppraiseeID}, this.onEndKPISystemScoreByKPIPointDelegate, this.onKPISystemScoreByKPIPointCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginKPIManualScore(string companyID, string modelRelationID, string flowCode, string lastStepID, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKPIManualScore(companyID, modelRelationID, flowCode, lastStepID, formCode, flowID, lastStepCode, AppraiseeID, AppraiserID, score, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD SMT.Saas.Tools.PerformanceWS.PerformanceService.EndKPIManualScore(System.IAsyncResult result) {
            return base.Channel.EndKPIManualScore(result);
        }
        
        private System.IAsyncResult OnBeginKPIManualScore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string companyID = ((string)(inValues[0]));
            string modelRelationID = ((string)(inValues[1]));
            string flowCode = ((string)(inValues[2]));
            string lastStepID = ((string)(inValues[3]));
            string formCode = ((string)(inValues[4]));
            string flowID = ((string)(inValues[5]));
            string lastStepCode = ((string)(inValues[6]));
            string AppraiseeID = ((string)(inValues[7]));
            string AppraiserID = ((string)(inValues[8]));
            int score = ((int)(inValues[9]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginKPIManualScore(companyID, modelRelationID, flowCode, lastStepID, formCode, flowID, lastStepCode, AppraiseeID, AppraiserID, score, callback, asyncState);
        }
        
        private object[] OnEndKPIManualScore(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndKPIManualScore(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKPIManualScoreCompleted(object state) {
            if ((this.KPIManualScoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KPIManualScoreCompleted(this, new KPIManualScoreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KPIManualScoreAsync(string companyID, string modelRelationID, string flowCode, string lastStepID, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score) {
            this.KPIManualScoreAsync(companyID, modelRelationID, flowCode, lastStepID, formCode, flowID, lastStepCode, AppraiseeID, AppraiserID, score, null);
        }
        
        public void KPIManualScoreAsync(string companyID, string modelRelationID, string flowCode, string lastStepID, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, object userState) {
            if ((this.onBeginKPIManualScoreDelegate == null)) {
                this.onBeginKPIManualScoreDelegate = new BeginOperationDelegate(this.OnBeginKPIManualScore);
            }
            if ((this.onEndKPIManualScoreDelegate == null)) {
                this.onEndKPIManualScoreDelegate = new EndOperationDelegate(this.OnEndKPIManualScore);
            }
            if ((this.onKPIManualScoreCompletedDelegate == null)) {
                this.onKPIManualScoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKPIManualScoreCompleted);
            }
            base.InvokeAsync(this.onBeginKPIManualScoreDelegate, new object[] {
                        companyID,
                        modelRelationID,
                        flowCode,
                        lastStepID,
                        formCode,
                        flowID,
                        lastStepCode,
                        AppraiseeID,
                        AppraiserID,
                        score}, this.onEndKPIManualScoreDelegate, this.onKPIManualScoreCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginKPIManualScoreByKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKPIManualScoreByKPIPoint(kpiPoint, formCode, flowID, lastStepCode, AppraiseeID, AppraiserID, score, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD SMT.Saas.Tools.PerformanceWS.PerformanceService.EndKPIManualScoreByKPIPoint(System.IAsyncResult result) {
            return base.Channel.EndKPIManualScoreByKPIPoint(result);
        }
        
        private System.IAsyncResult OnBeginKPIManualScoreByKPIPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT)(inValues[0]));
            string formCode = ((string)(inValues[1]));
            string flowID = ((string)(inValues[2]));
            string lastStepCode = ((string)(inValues[3]));
            string AppraiseeID = ((string)(inValues[4]));
            string AppraiserID = ((string)(inValues[5]));
            int score = ((int)(inValues[6]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginKPIManualScoreByKPIPoint(kpiPoint, formCode, flowID, lastStepCode, AppraiseeID, AppraiserID, score, callback, asyncState);
        }
        
        private object[] OnEndKPIManualScoreByKPIPoint(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndKPIManualScoreByKPIPoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKPIManualScoreByKPIPointCompleted(object state) {
            if ((this.KPIManualScoreByKPIPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KPIManualScoreByKPIPointCompleted(this, new KPIManualScoreByKPIPointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KPIManualScoreByKPIPointAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score) {
            this.KPIManualScoreByKPIPointAsync(kpiPoint, formCode, flowID, lastStepCode, AppraiseeID, AppraiserID, score, null);
        }
        
        public void KPIManualScoreByKPIPointAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, object userState) {
            if ((this.onBeginKPIManualScoreByKPIPointDelegate == null)) {
                this.onBeginKPIManualScoreByKPIPointDelegate = new BeginOperationDelegate(this.OnBeginKPIManualScoreByKPIPoint);
            }
            if ((this.onEndKPIManualScoreByKPIPointDelegate == null)) {
                this.onEndKPIManualScoreByKPIPointDelegate = new EndOperationDelegate(this.OnEndKPIManualScoreByKPIPoint);
            }
            if ((this.onKPIManualScoreByKPIPointCompletedDelegate == null)) {
                this.onKPIManualScoreByKPIPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKPIManualScoreByKPIPointCompleted);
            }
            base.InvokeAsync(this.onBeginKPIManualScoreByKPIPointDelegate, new object[] {
                        kpiPoint,
                        formCode,
                        flowID,
                        lastStepCode,
                        AppraiseeID,
                        AppraiserID,
                        score}, this.onEndKPIManualScoreByKPIPointDelegate, this.onKPIManualScoreByKPIPointCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginKPIRandomScore(string companyID, string modelRelationID, string flowCode, string lastStepID, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKPIRandomScore(companyID, modelRelationID, flowCode, lastStepID, formCode, flowID, lastStepCode, AppraiseeID, AppraiserID, score, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD SMT.Saas.Tools.PerformanceWS.PerformanceService.EndKPIRandomScore(System.IAsyncResult result) {
            return base.Channel.EndKPIRandomScore(result);
        }
        
        private System.IAsyncResult OnBeginKPIRandomScore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string companyID = ((string)(inValues[0]));
            string modelRelationID = ((string)(inValues[1]));
            string flowCode = ((string)(inValues[2]));
            string lastStepID = ((string)(inValues[3]));
            string formCode = ((string)(inValues[4]));
            string flowID = ((string)(inValues[5]));
            string lastStepCode = ((string)(inValues[6]));
            string AppraiseeID = ((string)(inValues[7]));
            string AppraiserID = ((string)(inValues[8]));
            int score = ((int)(inValues[9]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginKPIRandomScore(companyID, modelRelationID, flowCode, lastStepID, formCode, flowID, lastStepCode, AppraiseeID, AppraiserID, score, callback, asyncState);
        }
        
        private object[] OnEndKPIRandomScore(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndKPIRandomScore(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKPIRandomScoreCompleted(object state) {
            if ((this.KPIRandomScoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KPIRandomScoreCompleted(this, new KPIRandomScoreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KPIRandomScoreAsync(string companyID, string modelRelationID, string flowCode, string lastStepID, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score) {
            this.KPIRandomScoreAsync(companyID, modelRelationID, flowCode, lastStepID, formCode, flowID, lastStepCode, AppraiseeID, AppraiserID, score, null);
        }
        
        public void KPIRandomScoreAsync(string companyID, string modelRelationID, string flowCode, string lastStepID, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, object userState) {
            if ((this.onBeginKPIRandomScoreDelegate == null)) {
                this.onBeginKPIRandomScoreDelegate = new BeginOperationDelegate(this.OnBeginKPIRandomScore);
            }
            if ((this.onEndKPIRandomScoreDelegate == null)) {
                this.onEndKPIRandomScoreDelegate = new EndOperationDelegate(this.OnEndKPIRandomScore);
            }
            if ((this.onKPIRandomScoreCompletedDelegate == null)) {
                this.onKPIRandomScoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKPIRandomScoreCompleted);
            }
            base.InvokeAsync(this.onBeginKPIRandomScoreDelegate, new object[] {
                        companyID,
                        modelRelationID,
                        flowCode,
                        lastStepID,
                        formCode,
                        flowID,
                        lastStepCode,
                        AppraiseeID,
                        AppraiserID,
                        score}, this.onEndKPIRandomScoreDelegate, this.onKPIRandomScoreCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginKPIRandomScoreByKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKPIRandomScoreByKPIPoint(kpiPoint, formCode, flowID, lastStepCode, AppraiseeID, AppraiserID, score, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD SMT.Saas.Tools.PerformanceWS.PerformanceService.EndKPIRandomScoreByKPIPoint(System.IAsyncResult result) {
            return base.Channel.EndKPIRandomScoreByKPIPoint(result);
        }
        
        private System.IAsyncResult OnBeginKPIRandomScoreByKPIPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT)(inValues[0]));
            string formCode = ((string)(inValues[1]));
            string flowID = ((string)(inValues[2]));
            string lastStepCode = ((string)(inValues[3]));
            string AppraiseeID = ((string)(inValues[4]));
            string AppraiserID = ((string)(inValues[5]));
            int score = ((int)(inValues[6]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginKPIRandomScoreByKPIPoint(kpiPoint, formCode, flowID, lastStepCode, AppraiseeID, AppraiserID, score, callback, asyncState);
        }
        
        private object[] OnEndKPIRandomScoreByKPIPoint(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndKPIRandomScoreByKPIPoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKPIRandomScoreByKPIPointCompleted(object state) {
            if ((this.KPIRandomScoreByKPIPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KPIRandomScoreByKPIPointCompleted(this, new KPIRandomScoreByKPIPointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KPIRandomScoreByKPIPointAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score) {
            this.KPIRandomScoreByKPIPointAsync(kpiPoint, formCode, flowID, lastStepCode, AppraiseeID, AppraiserID, score, null);
        }
        
        public void KPIRandomScoreByKPIPointAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, object userState) {
            if ((this.onBeginKPIRandomScoreByKPIPointDelegate == null)) {
                this.onBeginKPIRandomScoreByKPIPointDelegate = new BeginOperationDelegate(this.OnBeginKPIRandomScoreByKPIPoint);
            }
            if ((this.onEndKPIRandomScoreByKPIPointDelegate == null)) {
                this.onEndKPIRandomScoreByKPIPointDelegate = new EndOperationDelegate(this.OnEndKPIRandomScoreByKPIPoint);
            }
            if ((this.onKPIRandomScoreByKPIPointCompletedDelegate == null)) {
                this.onKPIRandomScoreByKPIPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKPIRandomScoreByKPIPointCompleted);
            }
            base.InvokeAsync(this.onBeginKPIRandomScoreByKPIPointDelegate, new object[] {
                        kpiPoint,
                        formCode,
                        flowID,
                        lastStepCode,
                        AppraiseeID,
                        AppraiserID,
                        score}, this.onEndKPIRandomScoreByKPIPointDelegate, this.onKPIRandomScoreByKPIPointCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIPoint(string companyID, string modelRelationID, string flowID, string stepID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIPoint(companyID, modelRelationID, flowID, stepID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIPoint(System.IAsyncResult result) {
            return base.Channel.EndGetKPIPoint(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string companyID = ((string)(inValues[0]));
            string modelRelationID = ((string)(inValues[1]));
            string flowID = ((string)(inValues[2]));
            string stepID = ((string)(inValues[3]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIPoint(companyID, modelRelationID, flowID, stepID, callback, asyncState);
        }
        
        private object[] OnEndGetKPIPoint(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIPoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIPointCompleted(object state) {
            if ((this.GetKPIPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIPointCompleted(this, new GetKPIPointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIPointAsync(string companyID, string modelRelationID, string flowID, string stepID) {
            this.GetKPIPointAsync(companyID, modelRelationID, flowID, stepID, null);
        }
        
        public void GetKPIPointAsync(string companyID, string modelRelationID, string flowID, string stepID, object userState) {
            if ((this.onBeginGetKPIPointDelegate == null)) {
                this.onBeginGetKPIPointDelegate = new BeginOperationDelegate(this.OnBeginGetKPIPoint);
            }
            if ((this.onEndGetKPIPointDelegate == null)) {
                this.onEndGetKPIPointDelegate = new EndOperationDelegate(this.OnEndGetKPIPoint);
            }
            if ((this.onGetKPIPointCompletedDelegate == null)) {
                this.onGetKPIPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIPointCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIPointDelegate, new object[] {
                        companyID,
                        modelRelationID,
                        flowID,
                        stepID}, this.onEndGetKPIPointDelegate, this.onGetKPIPointCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIPointAndLastPoint(string companyID, string modelRelationID, string flowID, string stepID, string LastStepID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIPointAndLastPoint(companyID, modelRelationID, flowID, stepID, LastStepID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIPointAndLastPoint(System.IAsyncResult result) {
            return base.Channel.EndGetKPIPointAndLastPoint(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIPointAndLastPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string companyID = ((string)(inValues[0]));
            string modelRelationID = ((string)(inValues[1]));
            string flowID = ((string)(inValues[2]));
            string stepID = ((string)(inValues[3]));
            string LastStepID = ((string)(inValues[4]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIPointAndLastPoint(companyID, modelRelationID, flowID, stepID, LastStepID, callback, asyncState);
        }
        
        private object[] OnEndGetKPIPointAndLastPoint(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIPointAndLastPoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIPointAndLastPointCompleted(object state) {
            if ((this.GetKPIPointAndLastPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIPointAndLastPointCompleted(this, new GetKPIPointAndLastPointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIPointAndLastPointAsync(string companyID, string modelRelationID, string flowID, string stepID, string LastStepID) {
            this.GetKPIPointAndLastPointAsync(companyID, modelRelationID, flowID, stepID, LastStepID, null);
        }
        
        public void GetKPIPointAndLastPointAsync(string companyID, string modelRelationID, string flowID, string stepID, string LastStepID, object userState) {
            if ((this.onBeginGetKPIPointAndLastPointDelegate == null)) {
                this.onBeginGetKPIPointAndLastPointDelegate = new BeginOperationDelegate(this.OnBeginGetKPIPointAndLastPoint);
            }
            if ((this.onEndGetKPIPointAndLastPointDelegate == null)) {
                this.onEndGetKPIPointAndLastPointDelegate = new EndOperationDelegate(this.OnEndGetKPIPointAndLastPoint);
            }
            if ((this.onGetKPIPointAndLastPointCompletedDelegate == null)) {
                this.onGetKPIPointAndLastPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIPointAndLastPointCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIPointAndLastPointDelegate, new object[] {
                        companyID,
                        modelRelationID,
                        flowID,
                        stepID,
                        LastStepID}, this.onEndGetKPIPointAndLastPointDelegate, this.onGetKPIPointAndLastPointCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIPointListByBusinessCode(string modelRelationID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIPointListByBusinessCode(modelRelationID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIPointListByBusinessCode(System.IAsyncResult result) {
            return base.Channel.EndGetKPIPointListByBusinessCode(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIPointListByBusinessCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string modelRelationID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIPointListByBusinessCode(modelRelationID, callback, asyncState);
        }
        
        private object[] OnEndGetKPIPointListByBusinessCode(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIPointListByBusinessCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIPointListByBusinessCodeCompleted(object state) {
            if ((this.GetKPIPointListByBusinessCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIPointListByBusinessCodeCompleted(this, new GetKPIPointListByBusinessCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIPointListByBusinessCodeAsync(string modelRelationID) {
            this.GetKPIPointListByBusinessCodeAsync(modelRelationID, null);
        }
        
        public void GetKPIPointListByBusinessCodeAsync(string modelRelationID, object userState) {
            if ((this.onBeginGetKPIPointListByBusinessCodeDelegate == null)) {
                this.onBeginGetKPIPointListByBusinessCodeDelegate = new BeginOperationDelegate(this.OnBeginGetKPIPointListByBusinessCode);
            }
            if ((this.onEndGetKPIPointListByBusinessCodeDelegate == null)) {
                this.onEndGetKPIPointListByBusinessCodeDelegate = new EndOperationDelegate(this.OnEndGetKPIPointListByBusinessCode);
            }
            if ((this.onGetKPIPointListByBusinessCodeCompletedDelegate == null)) {
                this.onGetKPIPointListByBusinessCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIPointListByBusinessCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIPointListByBusinessCodeDelegate, new object[] {
                        modelRelationID}, this.onEndGetKPIPointListByBusinessCodeDelegate, this.onGetKPIPointListByBusinessCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIPointByID(string kpiPointID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIPointByID(kpiPointID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIPointByID(System.IAsyncResult result) {
            return base.Channel.EndGetKPIPointByID(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIPointByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string kpiPointID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIPointByID(kpiPointID, callback, asyncState);
        }
        
        private object[] OnEndGetKPIPointByID(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIPointByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIPointByIDCompleted(object state) {
            if ((this.GetKPIPointByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIPointByIDCompleted(this, new GetKPIPointByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIPointByIDAsync(string kpiPointID) {
            this.GetKPIPointByIDAsync(kpiPointID, null);
        }
        
        public void GetKPIPointByIDAsync(string kpiPointID, object userState) {
            if ((this.onBeginGetKPIPointByIDDelegate == null)) {
                this.onBeginGetKPIPointByIDDelegate = new BeginOperationDelegate(this.OnBeginGetKPIPointByID);
            }
            if ((this.onEndGetKPIPointByIDDelegate == null)) {
                this.onEndGetKPIPointByIDDelegate = new EndOperationDelegate(this.OnEndGetKPIPointByID);
            }
            if ((this.onGetKPIPointByIDCompletedDelegate == null)) {
                this.onGetKPIPointByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIPointByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIPointByIDDelegate, new object[] {
                        kpiPointID}, this.onEndGetKPIPointByIDDelegate, this.onGetKPIPointByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIPointRandomPersonID(string companyID, string modelRelationID, string flowID, string stepID, string formID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIPointRandomPersonID(companyID, modelRelationID, flowID, stepID, formID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIPointRandomPersonID(System.IAsyncResult result) {
            return base.Channel.EndGetKPIPointRandomPersonID(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIPointRandomPersonID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string companyID = ((string)(inValues[0]));
            string modelRelationID = ((string)(inValues[1]));
            string flowID = ((string)(inValues[2]));
            string stepID = ((string)(inValues[3]));
            string formID = ((string)(inValues[4]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIPointRandomPersonID(companyID, modelRelationID, flowID, stepID, formID, callback, asyncState);
        }
        
        private object[] OnEndGetKPIPointRandomPersonID(System.IAsyncResult result) {
            string retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIPointRandomPersonID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIPointRandomPersonIDCompleted(object state) {
            if ((this.GetKPIPointRandomPersonIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIPointRandomPersonIDCompleted(this, new GetKPIPointRandomPersonIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIPointRandomPersonIDAsync(string companyID, string modelRelationID, string flowID, string stepID, string formID) {
            this.GetKPIPointRandomPersonIDAsync(companyID, modelRelationID, flowID, stepID, formID, null);
        }
        
        public void GetKPIPointRandomPersonIDAsync(string companyID, string modelRelationID, string flowID, string stepID, string formID, object userState) {
            if ((this.onBeginGetKPIPointRandomPersonIDDelegate == null)) {
                this.onBeginGetKPIPointRandomPersonIDDelegate = new BeginOperationDelegate(this.OnBeginGetKPIPointRandomPersonID);
            }
            if ((this.onEndGetKPIPointRandomPersonIDDelegate == null)) {
                this.onEndGetKPIPointRandomPersonIDDelegate = new EndOperationDelegate(this.OnEndGetKPIPointRandomPersonID);
            }
            if ((this.onGetKPIPointRandomPersonIDCompletedDelegate == null)) {
                this.onGetKPIPointRandomPersonIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIPointRandomPersonIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIPointRandomPersonIDDelegate, new object[] {
                        companyID,
                        modelRelationID,
                        flowID,
                        stepID,
                        formID}, this.onEndGetKPIPointRandomPersonIDDelegate, this.onGetKPIPointRandomPersonIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPITypeByID(string kpiTypeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPITypeByID(kpiTypeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPITypeByID(System.IAsyncResult result) {
            return base.Channel.EndGetKPITypeByID(result);
        }
        
        private System.IAsyncResult OnBeginGetKPITypeByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string kpiTypeID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPITypeByID(kpiTypeID, callback, asyncState);
        }
        
        private object[] OnEndGetKPITypeByID(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPITypeByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPITypeByIDCompleted(object state) {
            if ((this.GetKPITypeByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPITypeByIDCompleted(this, new GetKPITypeByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPITypeByIDAsync(string kpiTypeID) {
            this.GetKPITypeByIDAsync(kpiTypeID, null);
        }
        
        public void GetKPITypeByIDAsync(string kpiTypeID, object userState) {
            if ((this.onBeginGetKPITypeByIDDelegate == null)) {
                this.onBeginGetKPITypeByIDDelegate = new BeginOperationDelegate(this.OnBeginGetKPITypeByID);
            }
            if ((this.onEndGetKPITypeByIDDelegate == null)) {
                this.onEndGetKPITypeByIDDelegate = new EndOperationDelegate(this.OnEndGetKPITypeByID);
            }
            if ((this.onGetKPITypeByIDCompletedDelegate == null)) {
                this.onGetKPITypeByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPITypeByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPITypeByIDDelegate, new object[] {
                        kpiTypeID}, this.onEndGetKPITypeByIDDelegate, this.onGetKPITypeByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPITypeAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPITypeAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPITypeAll(System.IAsyncResult result) {
            return base.Channel.EndGetKPITypeAll(result);
        }
        
        private System.IAsyncResult OnBeginGetKPITypeAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPITypeAll(callback, asyncState);
        }
        
        private object[] OnEndGetKPITypeAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPITypeAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPITypeAllCompleted(object state) {
            if ((this.GetKPITypeAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPITypeAllCompleted(this, new GetKPITypeAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPITypeAllAsync() {
            this.GetKPITypeAllAsync(null);
        }
        
        public void GetKPITypeAllAsync(object userState) {
            if ((this.onBeginGetKPITypeAllDelegate == null)) {
                this.onBeginGetKPITypeAllDelegate = new BeginOperationDelegate(this.OnBeginGetKPITypeAll);
            }
            if ((this.onEndGetKPITypeAllDelegate == null)) {
                this.onEndGetKPITypeAllDelegate = new EndOperationDelegate(this.OnEndGetKPITypeAll);
            }
            if ((this.onGetKPITypeAllCompletedDelegate == null)) {
                this.onGetKPITypeAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPITypeAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPITypeAllDelegate, null, this.onEndGetKPITypeAllDelegate, this.onGetKPITypeAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPITypeWithPermission(string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPITypeWithPermission(filterString, paras, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPITypeWithPermission(System.IAsyncResult result) {
            return base.Channel.EndGetKPITypeWithPermission(result);
        }
        
        private System.IAsyncResult OnBeginGetKPITypeWithPermission(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filterString = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<object> paras = ((System.Collections.ObjectModel.ObservableCollection<object>)(inValues[1]));
            string userID = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPITypeWithPermission(filterString, paras, userID, callback, asyncState);
        }
        
        private object[] OnEndGetKPITypeWithPermission(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPITypeWithPermission(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPITypeWithPermissionCompleted(object state) {
            if ((this.GetKPITypeWithPermissionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPITypeWithPermissionCompleted(this, new GetKPITypeWithPermissionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPITypeWithPermissionAsync(string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID) {
            this.GetKPITypeWithPermissionAsync(filterString, paras, userID, null);
        }
        
        public void GetKPITypeWithPermissionAsync(string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, object userState) {
            if ((this.onBeginGetKPITypeWithPermissionDelegate == null)) {
                this.onBeginGetKPITypeWithPermissionDelegate = new BeginOperationDelegate(this.OnBeginGetKPITypeWithPermission);
            }
            if ((this.onEndGetKPITypeWithPermissionDelegate == null)) {
                this.onEndGetKPITypeWithPermissionDelegate = new EndOperationDelegate(this.OnEndGetKPITypeWithPermission);
            }
            if ((this.onGetKPITypeWithPermissionCompletedDelegate == null)) {
                this.onGetKPITypeWithPermissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPITypeWithPermissionCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPITypeWithPermissionDelegate, new object[] {
                        filterString,
                        paras,
                        userID}, this.onEndGetKPITypeWithPermissionDelegate, this.onGetKPITypeWithPermissionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIRecordRandomPersonID(string formCode, string flowID, string stepID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIRecordRandomPersonID(formCode, flowID, stepID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIRecordRandomPersonID(System.IAsyncResult result) {
            return base.Channel.EndGetKPIRecordRandomPersonID(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIRecordRandomPersonID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string formCode = ((string)(inValues[0]));
            string flowID = ((string)(inValues[1]));
            string stepID = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIRecordRandomPersonID(formCode, flowID, stepID, callback, asyncState);
        }
        
        private object[] OnEndGetKPIRecordRandomPersonID(System.IAsyncResult result) {
            string retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIRecordRandomPersonID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIRecordRandomPersonIDCompleted(object state) {
            if ((this.GetKPIRecordRandomPersonIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIRecordRandomPersonIDCompleted(this, new GetKPIRecordRandomPersonIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIRecordRandomPersonIDAsync(string formCode, string flowID, string stepID) {
            this.GetKPIRecordRandomPersonIDAsync(formCode, flowID, stepID, null);
        }
        
        public void GetKPIRecordRandomPersonIDAsync(string formCode, string flowID, string stepID, object userState) {
            if ((this.onBeginGetKPIRecordRandomPersonIDDelegate == null)) {
                this.onBeginGetKPIRecordRandomPersonIDDelegate = new BeginOperationDelegate(this.OnBeginGetKPIRecordRandomPersonID);
            }
            if ((this.onEndGetKPIRecordRandomPersonIDDelegate == null)) {
                this.onEndGetKPIRecordRandomPersonIDDelegate = new EndOperationDelegate(this.OnEndGetKPIRecordRandomPersonID);
            }
            if ((this.onGetKPIRecordRandomPersonIDCompletedDelegate == null)) {
                this.onGetKPIRecordRandomPersonIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIRecordRandomPersonIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIRecordRandomPersonIDDelegate, new object[] {
                        formCode,
                        flowID,
                        stepID}, this.onEndGetKPIRecordRandomPersonIDDelegate, this.onGetKPIRecordRandomPersonIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIRecord(string formCode, string flowID, string stepID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIRecord(formCode, flowID, stepID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIRecord(System.IAsyncResult result) {
            return base.Channel.EndGetKPIRecord(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string formCode = ((string)(inValues[0]));
            string flowID = ((string)(inValues[1]));
            string stepID = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIRecord(formCode, flowID, stepID, callback, asyncState);
        }
        
        private object[] OnEndGetKPIRecord(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIRecordCompleted(object state) {
            if ((this.GetKPIRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIRecordCompleted(this, new GetKPIRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIRecordAsync(string formCode, string flowID, string stepID) {
            this.GetKPIRecordAsync(formCode, flowID, stepID, null);
        }
        
        public void GetKPIRecordAsync(string formCode, string flowID, string stepID, object userState) {
            if ((this.onBeginGetKPIRecordDelegate == null)) {
                this.onBeginGetKPIRecordDelegate = new BeginOperationDelegate(this.OnBeginGetKPIRecord);
            }
            if ((this.onEndGetKPIRecordDelegate == null)) {
                this.onEndGetKPIRecordDelegate = new EndOperationDelegate(this.OnEndGetKPIRecord);
            }
            if ((this.onGetKPIRecordCompletedDelegate == null)) {
                this.onGetKPIRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIRecordCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIRecordDelegate, new object[] {
                        formCode,
                        flowID,
                        stepID}, this.onEndGetKPIRecordDelegate, this.onGetKPIRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIRecordScoreDetail(string formCode, string flowID, string stepID, int scoreType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIRecordScoreDetail(formCode, flowID, stepID, scoreType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIRecordScoreDetail(System.IAsyncResult result) {
            return base.Channel.EndGetKPIRecordScoreDetail(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIRecordScoreDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string formCode = ((string)(inValues[0]));
            string flowID = ((string)(inValues[1]));
            string stepID = ((string)(inValues[2]));
            int scoreType = ((int)(inValues[3]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIRecordScoreDetail(formCode, flowID, stepID, scoreType, callback, asyncState);
        }
        
        private object[] OnEndGetKPIRecordScoreDetail(System.IAsyncResult result) {
            string retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIRecordScoreDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIRecordScoreDetailCompleted(object state) {
            if ((this.GetKPIRecordScoreDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIRecordScoreDetailCompleted(this, new GetKPIRecordScoreDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIRecordScoreDetailAsync(string formCode, string flowID, string stepID, int scoreType) {
            this.GetKPIRecordScoreDetailAsync(formCode, flowID, stepID, scoreType, null);
        }
        
        public void GetKPIRecordScoreDetailAsync(string formCode, string flowID, string stepID, int scoreType, object userState) {
            if ((this.onBeginGetKPIRecordScoreDetailDelegate == null)) {
                this.onBeginGetKPIRecordScoreDetailDelegate = new BeginOperationDelegate(this.OnBeginGetKPIRecordScoreDetail);
            }
            if ((this.onEndGetKPIRecordScoreDetailDelegate == null)) {
                this.onEndGetKPIRecordScoreDetailDelegate = new EndOperationDelegate(this.OnEndGetKPIRecordScoreDetail);
            }
            if ((this.onGetKPIRecordScoreDetailCompletedDelegate == null)) {
                this.onGetKPIRecordScoreDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIRecordScoreDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIRecordScoreDetailDelegate, new object[] {
                        formCode,
                        flowID,
                        stepID,
                        scoreType}, this.onEndGetKPIRecordScoreDetailDelegate, this.onGetKPIRecordScoreDetailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIRecordInterface(string formCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIRecordInterface(formCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIRecordInterface(System.IAsyncResult result) {
            return base.Channel.EndGetKPIRecordInterface(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIRecordInterface(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string formCode = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIRecordInterface(formCode, callback, asyncState);
        }
        
        private object[] OnEndGetKPIRecordInterface(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIRecordInterface(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIRecordInterfaceCompleted(object state) {
            if ((this.GetKPIRecordInterfaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIRecordInterfaceCompleted(this, new GetKPIRecordInterfaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIRecordInterfaceAsync(string formCode) {
            this.GetKPIRecordInterfaceAsync(formCode, null);
        }
        
        public void GetKPIRecordInterfaceAsync(string formCode, object userState) {
            if ((this.onBeginGetKPIRecordInterfaceDelegate == null)) {
                this.onBeginGetKPIRecordInterfaceDelegate = new BeginOperationDelegate(this.OnBeginGetKPIRecordInterface);
            }
            if ((this.onEndGetKPIRecordInterfaceDelegate == null)) {
                this.onEndGetKPIRecordInterfaceDelegate = new EndOperationDelegate(this.OnEndGetKPIRecordInterface);
            }
            if ((this.onGetKPIRecordInterfaceCompletedDelegate == null)) {
                this.onGetKPIRecordInterfaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIRecordInterfaceCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIRecordInterfaceDelegate, new object[] {
                        formCode}, this.onEndGetKPIRecordInterfaceDelegate, this.onGetKPIRecordInterfaceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIRecordScore(string formCode, string flowID, string stepID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIRecordScore(formCode, flowID, stepID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<decimal> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIRecordScore(System.IAsyncResult result) {
            return base.Channel.EndGetKPIRecordScore(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIRecordScore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string formCode = ((string)(inValues[0]));
            string flowID = ((string)(inValues[1]));
            string stepID = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIRecordScore(formCode, flowID, stepID, callback, asyncState);
        }
        
        private object[] OnEndGetKPIRecordScore(System.IAsyncResult result) {
            System.Nullable<decimal> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIRecordScore(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIRecordScoreCompleted(object state) {
            if ((this.GetKPIRecordScoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIRecordScoreCompleted(this, new GetKPIRecordScoreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIRecordScoreAsync(string formCode, string flowID, string stepID) {
            this.GetKPIRecordScoreAsync(formCode, flowID, stepID, null);
        }
        
        public void GetKPIRecordScoreAsync(string formCode, string flowID, string stepID, object userState) {
            if ((this.onBeginGetKPIRecordScoreDelegate == null)) {
                this.onBeginGetKPIRecordScoreDelegate = new BeginOperationDelegate(this.OnBeginGetKPIRecordScore);
            }
            if ((this.onEndGetKPIRecordScoreDelegate == null)) {
                this.onEndGetKPIRecordScoreDelegate = new EndOperationDelegate(this.OnEndGetKPIRecordScore);
            }
            if ((this.onGetKPIRecordScoreCompletedDelegate == null)) {
                this.onGetKPIRecordScoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIRecordScoreCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIRecordScoreDelegate, new object[] {
                        formCode,
                        flowID,
                        stepID}, this.onEndGetKPIRecordScoreDelegate, this.onGetKPIRecordScoreCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIRecordById(string recordId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIRecordById(recordId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIRecordById(System.IAsyncResult result) {
            return base.Channel.EndGetKPIRecordById(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIRecordById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string recordId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIRecordById(recordId, callback, asyncState);
        }
        
        private object[] OnEndGetKPIRecordById(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIRecordById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIRecordByIdCompleted(object state) {
            if ((this.GetKPIRecordByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIRecordByIdCompleted(this, new GetKPIRecordByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIRecordByIdAsync(string recordId) {
            this.GetKPIRecordByIdAsync(recordId, null);
        }
        
        public void GetKPIRecordByIdAsync(string recordId, object userState) {
            if ((this.onBeginGetKPIRecordByIdDelegate == null)) {
                this.onBeginGetKPIRecordByIdDelegate = new BeginOperationDelegate(this.OnBeginGetKPIRecordById);
            }
            if ((this.onEndGetKPIRecordByIdDelegate == null)) {
                this.onEndGetKPIRecordByIdDelegate = new EndOperationDelegate(this.OnEndGetKPIRecordById);
            }
            if ((this.onGetKPIRecordByIdCompletedDelegate == null)) {
                this.onGetKPIRecordByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIRecordByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIRecordByIdDelegate, new object[] {
                        recordId}, this.onEndGetKPIRecordByIdDelegate, this.onGetKPIRecordByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginCheckKPIRecordIsComplainingByUserID(System.Collections.ObjectModel.ObservableCollection<string> userIdList, System.DateTime startTime, System.DateTime endTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckKPIRecordIsComplainingByUserID(userIdList, startTime, endTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PerformanceWS.PerformanceService.EndCheckKPIRecordIsComplainingByUserID(System.IAsyncResult result) {
            return base.Channel.EndCheckKPIRecordIsComplainingByUserID(result);
        }
        
        private System.IAsyncResult OnBeginCheckKPIRecordIsComplainingByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> userIdList = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            System.DateTime startTime = ((System.DateTime)(inValues[1]));
            System.DateTime endTime = ((System.DateTime)(inValues[2]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginCheckKPIRecordIsComplainingByUserID(userIdList, startTime, endTime, callback, asyncState);
        }
        
        private object[] OnEndCheckKPIRecordIsComplainingByUserID(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndCheckKPIRecordIsComplainingByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckKPIRecordIsComplainingByUserIDCompleted(object state) {
            if ((this.CheckKPIRecordIsComplainingByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckKPIRecordIsComplainingByUserIDCompleted(this, new CheckKPIRecordIsComplainingByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckKPIRecordIsComplainingByUserIDAsync(System.Collections.ObjectModel.ObservableCollection<string> userIdList, System.DateTime startTime, System.DateTime endTime) {
            this.CheckKPIRecordIsComplainingByUserIDAsync(userIdList, startTime, endTime, null);
        }
        
        public void CheckKPIRecordIsComplainingByUserIDAsync(System.Collections.ObjectModel.ObservableCollection<string> userIdList, System.DateTime startTime, System.DateTime endTime, object userState) {
            if ((this.onBeginCheckKPIRecordIsComplainingByUserIDDelegate == null)) {
                this.onBeginCheckKPIRecordIsComplainingByUserIDDelegate = new BeginOperationDelegate(this.OnBeginCheckKPIRecordIsComplainingByUserID);
            }
            if ((this.onEndCheckKPIRecordIsComplainingByUserIDDelegate == null)) {
                this.onEndCheckKPIRecordIsComplainingByUserIDDelegate = new EndOperationDelegate(this.OnEndCheckKPIRecordIsComplainingByUserID);
            }
            if ((this.onCheckKPIRecordIsComplainingByUserIDCompletedDelegate == null)) {
                this.onCheckKPIRecordIsComplainingByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckKPIRecordIsComplainingByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginCheckKPIRecordIsComplainingByUserIDDelegate, new object[] {
                        userIdList,
                        startTime,
                        endTime}, this.onEndCheckKPIRecordIsComplainingByUserIDDelegate, this.onCheckKPIRecordIsComplainingByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPITypePaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPITypePaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPITypePaging(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetKPITypePaging(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetKPITypePaging(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<string> paras = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            string userID = ((string)(inValues[6]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPITypePaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, userID, callback, asyncState);
        }
        
        private object[] OnEndGetKPITypePaging(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPITypePaging(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetKPITypePagingCompleted(object state) {
            if ((this.GetKPITypePagingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPITypePagingCompleted(this, new GetKPITypePagingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPITypePagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string userID) {
            this.GetKPITypePagingAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, userID, null);
        }
        
        public void GetKPITypePagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string userID, object userState) {
            if ((this.onBeginGetKPITypePagingDelegate == null)) {
                this.onBeginGetKPITypePagingDelegate = new BeginOperationDelegate(this.OnBeginGetKPITypePaging);
            }
            if ((this.onEndGetKPITypePagingDelegate == null)) {
                this.onEndGetKPITypePagingDelegate = new EndOperationDelegate(this.OnEndGetKPITypePaging);
            }
            if ((this.onGetKPITypePagingCompletedDelegate == null)) {
                this.onGetKPITypePagingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPITypePagingCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPITypePagingDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount,
                        userID}, this.onEndGetKPITypePagingDelegate, this.onGetKPITypePagingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginAddKPIType(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, ref string strMsg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddKPIType(entType, ref strMsg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndAddKPIType(ref string strMsg, System.IAsyncResult result) {
            base.Channel.EndAddKPIType(ref strMsg, result);
        }
        
        private System.IAsyncResult OnBeginAddKPIType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE)(inValues[0]));
            string strMsg = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginAddKPIType(entType, ref strMsg, callback, asyncState);
        }
        
        private object[] OnEndAddKPIType(System.IAsyncResult result) {
            string strMsg = this.GetDefaultValueForInitialization<string>();
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndAddKPIType(ref strMsg, result);
            return new object[] {
                    strMsg};
        }
        
        private void OnAddKPITypeCompleted(object state) {
            if ((this.AddKPITypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddKPITypeCompleted(this, new AddKPITypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddKPITypeAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, string strMsg) {
            this.AddKPITypeAsync(entType, strMsg, null);
        }
        
        public void AddKPITypeAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, string strMsg, object userState) {
            if ((this.onBeginAddKPITypeDelegate == null)) {
                this.onBeginAddKPITypeDelegate = new BeginOperationDelegate(this.OnBeginAddKPIType);
            }
            if ((this.onEndAddKPITypeDelegate == null)) {
                this.onEndAddKPITypeDelegate = new EndOperationDelegate(this.OnEndAddKPIType);
            }
            if ((this.onAddKPITypeCompletedDelegate == null)) {
                this.onAddKPITypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddKPITypeCompleted);
            }
            base.InvokeAsync(this.onBeginAddKPITypeDelegate, new object[] {
                        entType,
                        strMsg}, this.onEndAddKPITypeDelegate, this.onAddKPITypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginUpdateKPIType(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, ref string strMsg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateKPIType(entType, ref strMsg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndUpdateKPIType(ref string strMsg, System.IAsyncResult result) {
            base.Channel.EndUpdateKPIType(ref strMsg, result);
        }
        
        private System.IAsyncResult OnBeginUpdateKPIType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE)(inValues[0]));
            string strMsg = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginUpdateKPIType(entType, ref strMsg, callback, asyncState);
        }
        
        private object[] OnEndUpdateKPIType(System.IAsyncResult result) {
            string strMsg = this.GetDefaultValueForInitialization<string>();
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndUpdateKPIType(ref strMsg, result);
            return new object[] {
                    strMsg};
        }
        
        private void OnUpdateKPITypeCompleted(object state) {
            if ((this.UpdateKPITypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateKPITypeCompleted(this, new UpdateKPITypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateKPITypeAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, string strMsg) {
            this.UpdateKPITypeAsync(entType, strMsg, null);
        }
        
        public void UpdateKPITypeAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, string strMsg, object userState) {
            if ((this.onBeginUpdateKPITypeDelegate == null)) {
                this.onBeginUpdateKPITypeDelegate = new BeginOperationDelegate(this.OnBeginUpdateKPIType);
            }
            if ((this.onEndUpdateKPITypeDelegate == null)) {
                this.onEndUpdateKPITypeDelegate = new EndOperationDelegate(this.OnEndUpdateKPIType);
            }
            if ((this.onUpdateKPITypeCompletedDelegate == null)) {
                this.onUpdateKPITypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateKPITypeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateKPITypeDelegate, new object[] {
                        entType,
                        strMsg}, this.onEndUpdateKPITypeDelegate, this.onUpdateKPITypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginUpdateKPITypeAndRemind(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> addList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> updateList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> delList, ref string strMsg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateKPITypeAndRemind(entType, addList, updateList, delList, ref strMsg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndUpdateKPITypeAndRemind(ref string strMsg, System.IAsyncResult result) {
            base.Channel.EndUpdateKPITypeAndRemind(ref strMsg, result);
        }
        
        private System.IAsyncResult OnBeginUpdateKPITypeAndRemind(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> addList = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND>)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> updateList = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND>)(inValues[2]));
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> delList = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND>)(inValues[3]));
            string strMsg = ((string)(inValues[4]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginUpdateKPITypeAndRemind(entType, addList, updateList, delList, ref strMsg, callback, asyncState);
        }
        
        private object[] OnEndUpdateKPITypeAndRemind(System.IAsyncResult result) {
            string strMsg = this.GetDefaultValueForInitialization<string>();
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndUpdateKPITypeAndRemind(ref strMsg, result);
            return new object[] {
                    strMsg};
        }
        
        private void OnUpdateKPITypeAndRemindCompleted(object state) {
            if ((this.UpdateKPITypeAndRemindCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateKPITypeAndRemindCompleted(this, new UpdateKPITypeAndRemindCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateKPITypeAndRemindAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> addList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> updateList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> delList, string strMsg) {
            this.UpdateKPITypeAndRemindAsync(entType, addList, updateList, delList, strMsg, null);
        }
        
        public void UpdateKPITypeAndRemindAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> addList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> updateList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> delList, string strMsg, object userState) {
            if ((this.onBeginUpdateKPITypeAndRemindDelegate == null)) {
                this.onBeginUpdateKPITypeAndRemindDelegate = new BeginOperationDelegate(this.OnBeginUpdateKPITypeAndRemind);
            }
            if ((this.onEndUpdateKPITypeAndRemindDelegate == null)) {
                this.onEndUpdateKPITypeAndRemindDelegate = new EndOperationDelegate(this.OnEndUpdateKPITypeAndRemind);
            }
            if ((this.onUpdateKPITypeAndRemindCompletedDelegate == null)) {
                this.onUpdateKPITypeAndRemindCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateKPITypeAndRemindCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateKPITypeAndRemindDelegate, new object[] {
                        entType,
                        addList,
                        updateList,
                        delList,
                        strMsg}, this.onEndUpdateKPITypeAndRemindDelegate, this.onUpdateKPITypeAndRemindCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginDeleteKPIType(string kpiTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteKPIType(kpiTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndDeleteKPIType(System.IAsyncResult result) {
            return base.Channel.EndDeleteKPIType(result);
        }
        
        private System.IAsyncResult OnBeginDeleteKPIType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string kpiTypeId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginDeleteKPIType(kpiTypeId, callback, asyncState);
        }
        
        private object[] OnEndDeleteKPIType(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndDeleteKPIType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteKPITypeCompleted(object state) {
            if ((this.DeleteKPITypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteKPITypeCompleted(this, new DeleteKPITypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteKPITypeAsync(string kpiTypeId) {
            this.DeleteKPITypeAsync(kpiTypeId, null);
        }
        
        public void DeleteKPITypeAsync(string kpiTypeId, object userState) {
            if ((this.onBeginDeleteKPITypeDelegate == null)) {
                this.onBeginDeleteKPITypeDelegate = new BeginOperationDelegate(this.OnBeginDeleteKPIType);
            }
            if ((this.onEndDeleteKPITypeDelegate == null)) {
                this.onEndDeleteKPITypeDelegate = new EndOperationDelegate(this.OnEndDeleteKPIType);
            }
            if ((this.onDeleteKPITypeCompletedDelegate == null)) {
                this.onDeleteKPITypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteKPITypeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteKPITypeDelegate, new object[] {
                        kpiTypeId}, this.onEndDeleteKPITypeDelegate, this.onDeleteKPITypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginDeleteKPITypes(System.Collections.ObjectModel.ObservableCollection<string> kpiTypeId, ref string strMsg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteKPITypes(kpiTypeId, ref strMsg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndDeleteKPITypes(ref string strMsg, System.IAsyncResult result) {
            return base.Channel.EndDeleteKPITypes(ref strMsg, result);
        }
        
        private System.IAsyncResult OnBeginDeleteKPITypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> kpiTypeId = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            string strMsg = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginDeleteKPITypes(kpiTypeId, ref strMsg, callback, asyncState);
        }
        
        private object[] OnEndDeleteKPITypes(System.IAsyncResult result) {
            string strMsg = this.GetDefaultValueForInitialization<string>();
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndDeleteKPITypes(ref strMsg, result);
            return new object[] {
                    strMsg,
                    retVal};
        }
        
        private void OnDeleteKPITypesCompleted(object state) {
            if ((this.DeleteKPITypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteKPITypesCompleted(this, new DeleteKPITypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteKPITypesAsync(System.Collections.ObjectModel.ObservableCollection<string> kpiTypeId, string strMsg) {
            this.DeleteKPITypesAsync(kpiTypeId, strMsg, null);
        }
        
        public void DeleteKPITypesAsync(System.Collections.ObjectModel.ObservableCollection<string> kpiTypeId, string strMsg, object userState) {
            if ((this.onBeginDeleteKPITypesDelegate == null)) {
                this.onBeginDeleteKPITypesDelegate = new BeginOperationDelegate(this.OnBeginDeleteKPITypes);
            }
            if ((this.onEndDeleteKPITypesDelegate == null)) {
                this.onEndDeleteKPITypesDelegate = new EndOperationDelegate(this.OnEndDeleteKPITypes);
            }
            if ((this.onDeleteKPITypesCompletedDelegate == null)) {
                this.onDeleteKPITypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteKPITypesCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteKPITypesDelegate, new object[] {
                        kpiTypeId,
                        strMsg}, this.onEndDeleteKPITypesDelegate, this.onDeleteKPITypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginAddKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddKPIPoint(entType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndAddKPIPoint(System.IAsyncResult result) {
            base.Channel.EndAddKPIPoint(result);
        }
        
        private System.IAsyncResult OnBeginAddKPIPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginAddKPIPoint(entType, callback, asyncState);
        }
        
        private object[] OnEndAddKPIPoint(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndAddKPIPoint(result);
            return null;
        }
        
        private void OnAddKPIPointCompleted(object state) {
            if ((this.AddKPIPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddKPIPointCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddKPIPointAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType) {
            this.AddKPIPointAsync(entType, null);
        }
        
        public void AddKPIPointAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, object userState) {
            if ((this.onBeginAddKPIPointDelegate == null)) {
                this.onBeginAddKPIPointDelegate = new BeginOperationDelegate(this.OnBeginAddKPIPoint);
            }
            if ((this.onEndAddKPIPointDelegate == null)) {
                this.onEndAddKPIPointDelegate = new EndOperationDelegate(this.OnEndAddKPIPoint);
            }
            if ((this.onAddKPIPointCompletedDelegate == null)) {
                this.onAddKPIPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddKPIPointCompleted);
            }
            base.InvokeAsync(this.onBeginAddKPIPointDelegate, new object[] {
                        entType}, this.onEndAddKPIPointDelegate, this.onAddKPIPointCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginUpdateKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateKPIPoint(entType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndUpdateKPIPoint(System.IAsyncResult result) {
            base.Channel.EndUpdateKPIPoint(result);
        }
        
        private System.IAsyncResult OnBeginUpdateKPIPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginUpdateKPIPoint(entType, callback, asyncState);
        }
        
        private object[] OnEndUpdateKPIPoint(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndUpdateKPIPoint(result);
            return null;
        }
        
        private void OnUpdateKPIPointCompleted(object state) {
            if ((this.UpdateKPIPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateKPIPointCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateKPIPointAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType) {
            this.UpdateKPIPointAsync(entType, null);
        }
        
        public void UpdateKPIPointAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, object userState) {
            if ((this.onBeginUpdateKPIPointDelegate == null)) {
                this.onBeginUpdateKPIPointDelegate = new BeginOperationDelegate(this.OnBeginUpdateKPIPoint);
            }
            if ((this.onEndUpdateKPIPointDelegate == null)) {
                this.onEndUpdateKPIPointDelegate = new EndOperationDelegate(this.OnEndUpdateKPIPoint);
            }
            if ((this.onUpdateKPIPointCompletedDelegate == null)) {
                this.onUpdateKPIPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateKPIPointCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateKPIPointDelegate, new object[] {
                        entType}, this.onEndUpdateKPIPointDelegate, this.onUpdateKPIPointCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginUpdateKPIPointAndRemind(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> addList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> updateList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> delList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateKPIPointAndRemind(entType, addList, updateList, delList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndUpdateKPIPointAndRemind(System.IAsyncResult result) {
            base.Channel.EndUpdateKPIPointAndRemind(result);
        }
        
        private System.IAsyncResult OnBeginUpdateKPIPointAndRemind(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> addList = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND>)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> updateList = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND>)(inValues[2]));
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> delList = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND>)(inValues[3]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginUpdateKPIPointAndRemind(entType, addList, updateList, delList, callback, asyncState);
        }
        
        private object[] OnEndUpdateKPIPointAndRemind(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndUpdateKPIPointAndRemind(result);
            return null;
        }
        
        private void OnUpdateKPIPointAndRemindCompleted(object state) {
            if ((this.UpdateKPIPointAndRemindCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateKPIPointAndRemindCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateKPIPointAndRemindAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> addList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> updateList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> delList) {
            this.UpdateKPIPointAndRemindAsync(entType, addList, updateList, delList, null);
        }
        
        public void UpdateKPIPointAndRemindAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> addList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> updateList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> delList, object userState) {
            if ((this.onBeginUpdateKPIPointAndRemindDelegate == null)) {
                this.onBeginUpdateKPIPointAndRemindDelegate = new BeginOperationDelegate(this.OnBeginUpdateKPIPointAndRemind);
            }
            if ((this.onEndUpdateKPIPointAndRemindDelegate == null)) {
                this.onEndUpdateKPIPointAndRemindDelegate = new EndOperationDelegate(this.OnEndUpdateKPIPointAndRemind);
            }
            if ((this.onUpdateKPIPointAndRemindCompletedDelegate == null)) {
                this.onUpdateKPIPointAndRemindCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateKPIPointAndRemindCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateKPIPointAndRemindDelegate, new object[] {
                        entType,
                        addList,
                        updateList,
                        delList}, this.onEndUpdateKPIPointAndRemindDelegate, this.onUpdateKPIPointAndRemindCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginDeleteKPIPoint(string kpiTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteKPIPoint(kpiTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndDeleteKPIPoint(System.IAsyncResult result) {
            return base.Channel.EndDeleteKPIPoint(result);
        }
        
        private System.IAsyncResult OnBeginDeleteKPIPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string kpiTypeId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginDeleteKPIPoint(kpiTypeId, callback, asyncState);
        }
        
        private object[] OnEndDeleteKPIPoint(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndDeleteKPIPoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteKPIPointCompleted(object state) {
            if ((this.DeleteKPIPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteKPIPointCompleted(this, new DeleteKPIPointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteKPIPointAsync(string kpiTypeId) {
            this.DeleteKPIPointAsync(kpiTypeId, null);
        }
        
        public void DeleteKPIPointAsync(string kpiTypeId, object userState) {
            if ((this.onBeginDeleteKPIPointDelegate == null)) {
                this.onBeginDeleteKPIPointDelegate = new BeginOperationDelegate(this.OnBeginDeleteKPIPoint);
            }
            if ((this.onEndDeleteKPIPointDelegate == null)) {
                this.onEndDeleteKPIPointDelegate = new EndOperationDelegate(this.OnEndDeleteKPIPoint);
            }
            if ((this.onDeleteKPIPointCompletedDelegate == null)) {
                this.onDeleteKPIPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteKPIPointCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteKPIPointDelegate, new object[] {
                        kpiTypeId}, this.onEndDeleteKPIPointDelegate, this.onDeleteKPIPointCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginKPIRecordUpdate(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKPIRecordUpdate(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndKPIRecordUpdate(System.IAsyncResult result) {
            base.Channel.EndKPIRecordUpdate(result);
        }
        
        private System.IAsyncResult OnBeginKPIRecordUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD entity = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginKPIRecordUpdate(entity, callback, asyncState);
        }
        
        private object[] OnEndKPIRecordUpdate(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndKPIRecordUpdate(result);
            return null;
        }
        
        private void OnKPIRecordUpdateCompleted(object state) {
            if ((this.KPIRecordUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KPIRecordUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KPIRecordUpdateAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD entity) {
            this.KPIRecordUpdateAsync(entity, null);
        }
        
        public void KPIRecordUpdateAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD entity, object userState) {
            if ((this.onBeginKPIRecordUpdateDelegate == null)) {
                this.onBeginKPIRecordUpdateDelegate = new BeginOperationDelegate(this.OnBeginKPIRecordUpdate);
            }
            if ((this.onEndKPIRecordUpdateDelegate == null)) {
                this.onEndKPIRecordUpdateDelegate = new EndOperationDelegate(this.OnEndKPIRecordUpdate);
            }
            if ((this.onKPIRecordUpdateCompletedDelegate == null)) {
                this.onKPIRecordUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKPIRecordUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginKPIRecordUpdateDelegate, new object[] {
                        entity}, this.onEndKPIRecordUpdateDelegate, this.onKPIRecordUpdateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetVcomplainRecordByID(string CompainRecordID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVcomplainRecordByID(CompainRecordID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetVcomplainRecordByID(System.IAsyncResult result) {
            return base.Channel.EndGetVcomplainRecordByID(result);
        }
        
        private System.IAsyncResult OnBeginGetVcomplainRecordByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CompainRecordID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetVcomplainRecordByID(CompainRecordID, callback, asyncState);
        }
        
        private object[] OnEndGetVcomplainRecordByID(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetVcomplainRecordByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVcomplainRecordByIDCompleted(object state) {
            if ((this.GetVcomplainRecordByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVcomplainRecordByIDCompleted(this, new GetVcomplainRecordByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVcomplainRecordByIDAsync(string CompainRecordID) {
            this.GetVcomplainRecordByIDAsync(CompainRecordID, null);
        }
        
        public void GetVcomplainRecordByIDAsync(string CompainRecordID, object userState) {
            if ((this.onBeginGetVcomplainRecordByIDDelegate == null)) {
                this.onBeginGetVcomplainRecordByIDDelegate = new BeginOperationDelegate(this.OnBeginGetVcomplainRecordByID);
            }
            if ((this.onEndGetVcomplainRecordByIDDelegate == null)) {
                this.onEndGetVcomplainRecordByIDDelegate = new EndOperationDelegate(this.OnEndGetVcomplainRecordByID);
            }
            if ((this.onGetVcomplainRecordByIDCompletedDelegate == null)) {
                this.onGetVcomplainRecordByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVcomplainRecordByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetVcomplainRecordByIDDelegate, new object[] {
                        CompainRecordID}, this.onEndGetVcomplainRecordByIDDelegate, this.onGetVcomplainRecordByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginSaveKPIRecordInterface(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD kpirecord, string AppraiseeID, string AppraiserID, int score, int scoretype, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveKPIRecordInterface(kpirecord, AppraiseeID, AppraiserID, score, scoretype, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD SMT.Saas.Tools.PerformanceWS.PerformanceService.EndSaveKPIRecordInterface(System.IAsyncResult result) {
            return base.Channel.EndSaveKPIRecordInterface(result);
        }
        
        private System.IAsyncResult OnBeginSaveKPIRecordInterface(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD kpirecord = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(inValues[0]));
            string AppraiseeID = ((string)(inValues[1]));
            string AppraiserID = ((string)(inValues[2]));
            int score = ((int)(inValues[3]));
            int scoretype = ((int)(inValues[4]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginSaveKPIRecordInterface(kpirecord, AppraiseeID, AppraiserID, score, scoretype, callback, asyncState);
        }
        
        private object[] OnEndSaveKPIRecordInterface(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndSaveKPIRecordInterface(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveKPIRecordInterfaceCompleted(object state) {
            if ((this.SaveKPIRecordInterfaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveKPIRecordInterfaceCompleted(this, new SaveKPIRecordInterfaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveKPIRecordInterfaceAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD kpirecord, string AppraiseeID, string AppraiserID, int score, int scoretype) {
            this.SaveKPIRecordInterfaceAsync(kpirecord, AppraiseeID, AppraiserID, score, scoretype, null);
        }
        
        public void SaveKPIRecordInterfaceAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD kpirecord, string AppraiseeID, string AppraiserID, int score, int scoretype, object userState) {
            if ((this.onBeginSaveKPIRecordInterfaceDelegate == null)) {
                this.onBeginSaveKPIRecordInterfaceDelegate = new BeginOperationDelegate(this.OnBeginSaveKPIRecordInterface);
            }
            if ((this.onEndSaveKPIRecordInterfaceDelegate == null)) {
                this.onEndSaveKPIRecordInterfaceDelegate = new EndOperationDelegate(this.OnEndSaveKPIRecordInterface);
            }
            if ((this.onSaveKPIRecordInterfaceCompletedDelegate == null)) {
                this.onSaveKPIRecordInterfaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveKPIRecordInterfaceCompleted);
            }
            base.InvokeAsync(this.onBeginSaveKPIRecordInterfaceDelegate, new object[] {
                        kpirecord,
                        AppraiseeID,
                        AppraiserID,
                        score,
                        scoretype}, this.onEndSaveKPIRecordInterfaceDelegate, this.onSaveKPIRecordInterfaceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIRecordComplainByRecord(string recordId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIRecordComplainByRecord(recordId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIRecordComplainByRecord(System.IAsyncResult result) {
            return base.Channel.EndGetKPIRecordComplainByRecord(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIRecordComplainByRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string recordId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIRecordComplainByRecord(recordId, callback, asyncState);
        }
        
        private object[] OnEndGetKPIRecordComplainByRecord(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIRecordComplainByRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIRecordComplainByRecordCompleted(object state) {
            if ((this.GetKPIRecordComplainByRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIRecordComplainByRecordCompleted(this, new GetKPIRecordComplainByRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIRecordComplainByRecordAsync(string recordId) {
            this.GetKPIRecordComplainByRecordAsync(recordId, null);
        }
        
        public void GetKPIRecordComplainByRecordAsync(string recordId, object userState) {
            if ((this.onBeginGetKPIRecordComplainByRecordDelegate == null)) {
                this.onBeginGetKPIRecordComplainByRecordDelegate = new BeginOperationDelegate(this.OnBeginGetKPIRecordComplainByRecord);
            }
            if ((this.onEndGetKPIRecordComplainByRecordDelegate == null)) {
                this.onEndGetKPIRecordComplainByRecordDelegate = new EndOperationDelegate(this.OnEndGetKPIRecordComplainByRecord);
            }
            if ((this.onGetKPIRecordComplainByRecordCompletedDelegate == null)) {
                this.onGetKPIRecordComplainByRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIRecordComplainByRecordCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIRecordComplainByRecordDelegate, new object[] {
                        recordId}, this.onEndGetKPIRecordComplainByRecordDelegate, this.onGetKPIRecordComplainByRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIRecordComplainByID(string complainID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIRecordComplainByID(complainID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIRecordComplainByID(System.IAsyncResult result) {
            return base.Channel.EndGetKPIRecordComplainByID(result);
        }
        
        private System.IAsyncResult OnBeginGetKPIRecordComplainByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string complainID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIRecordComplainByID(complainID, callback, asyncState);
        }
        
        private object[] OnEndGetKPIRecordComplainByID(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIRecordComplainByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKPIRecordComplainByIDCompleted(object state) {
            if ((this.GetKPIRecordComplainByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIRecordComplainByIDCompleted(this, new GetKPIRecordComplainByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIRecordComplainByIDAsync(string complainID) {
            this.GetKPIRecordComplainByIDAsync(complainID, null);
        }
        
        public void GetKPIRecordComplainByIDAsync(string complainID, object userState) {
            if ((this.onBeginGetKPIRecordComplainByIDDelegate == null)) {
                this.onBeginGetKPIRecordComplainByIDDelegate = new BeginOperationDelegate(this.OnBeginGetKPIRecordComplainByID);
            }
            if ((this.onEndGetKPIRecordComplainByIDDelegate == null)) {
                this.onEndGetKPIRecordComplainByIDDelegate = new EndOperationDelegate(this.OnEndGetKPIRecordComplainByID);
            }
            if ((this.onGetKPIRecordComplainByIDCompletedDelegate == null)) {
                this.onGetKPIRecordComplainByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIRecordComplainByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIRecordComplainByIDDelegate, new object[] {
                        complainID}, this.onEndGetKPIRecordComplainByIDDelegate, this.onGetKPIRecordComplainByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginAddKPIRecordComplain(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddKPIRecordComplain(entType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndAddKPIRecordComplain(System.IAsyncResult result) {
            base.Channel.EndAddKPIRecordComplain(result);
        }
        
        private System.IAsyncResult OnBeginAddKPIRecordComplain(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginAddKPIRecordComplain(entType, callback, asyncState);
        }
        
        private object[] OnEndAddKPIRecordComplain(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndAddKPIRecordComplain(result);
            return null;
        }
        
        private void OnAddKPIRecordComplainCompleted(object state) {
            if ((this.AddKPIRecordComplainCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddKPIRecordComplainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddKPIRecordComplainAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entType) {
            this.AddKPIRecordComplainAsync(entType, null);
        }
        
        public void AddKPIRecordComplainAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entType, object userState) {
            if ((this.onBeginAddKPIRecordComplainDelegate == null)) {
                this.onBeginAddKPIRecordComplainDelegate = new BeginOperationDelegate(this.OnBeginAddKPIRecordComplain);
            }
            if ((this.onEndAddKPIRecordComplainDelegate == null)) {
                this.onEndAddKPIRecordComplainDelegate = new EndOperationDelegate(this.OnEndAddKPIRecordComplain);
            }
            if ((this.onAddKPIRecordComplainCompletedDelegate == null)) {
                this.onAddKPIRecordComplainCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddKPIRecordComplainCompleted);
            }
            base.InvokeAsync(this.onBeginAddKPIRecordComplainDelegate, new object[] {
                        entType}, this.onEndAddKPIRecordComplainDelegate, this.onAddKPIRecordComplainCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginUpdateKPIRecordComplain(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateKPIRecordComplain(entType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndUpdateKPIRecordComplain(System.IAsyncResult result) {
            base.Channel.EndUpdateKPIRecordComplain(result);
        }
        
        private System.IAsyncResult OnBeginUpdateKPIRecordComplain(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginUpdateKPIRecordComplain(entType, callback, asyncState);
        }
        
        private object[] OnEndUpdateKPIRecordComplain(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndUpdateKPIRecordComplain(result);
            return null;
        }
        
        private void OnUpdateKPIRecordComplainCompleted(object state) {
            if ((this.UpdateKPIRecordComplainCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateKPIRecordComplainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateKPIRecordComplainAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entType) {
            this.UpdateKPIRecordComplainAsync(entType, null);
        }
        
        public void UpdateKPIRecordComplainAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entType, object userState) {
            if ((this.onBeginUpdateKPIRecordComplainDelegate == null)) {
                this.onBeginUpdateKPIRecordComplainDelegate = new BeginOperationDelegate(this.OnBeginUpdateKPIRecordComplain);
            }
            if ((this.onEndUpdateKPIRecordComplainDelegate == null)) {
                this.onEndUpdateKPIRecordComplainDelegate = new EndOperationDelegate(this.OnEndUpdateKPIRecordComplain);
            }
            if ((this.onUpdateKPIRecordComplainCompletedDelegate == null)) {
                this.onUpdateKPIRecordComplainCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateKPIRecordComplainCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateKPIRecordComplainDelegate, new object[] {
                        entType}, this.onEndUpdateKPIRecordComplainDelegate, this.onUpdateKPIRecordComplainCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetComplainRecordPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, int sType, string sValue, string userID, string startDate, string endDate, string strCheckState, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetComplainRecordPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, sType, sValue, userID, startDate, endDate, strCheckState, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetComplainRecordPaging(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetComplainRecordPaging(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetComplainRecordPaging(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<string> paras = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            int sType = ((int)(inValues[6]));
            string sValue = ((string)(inValues[7]));
            string userID = ((string)(inValues[8]));
            string startDate = ((string)(inValues[9]));
            string endDate = ((string)(inValues[10]));
            string strCheckState = ((string)(inValues[11]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetComplainRecordPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, sType, sValue, userID, startDate, endDate, strCheckState, callback, asyncState);
        }
        
        private object[] OnEndGetComplainRecordPaging(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetComplainRecordPaging(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetComplainRecordPagingCompleted(object state) {
            if ((this.GetComplainRecordPagingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetComplainRecordPagingCompleted(this, new GetComplainRecordPagingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetComplainRecordPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, int sType, string sValue, string userID, string startDate, string endDate, string strCheckState) {
            this.GetComplainRecordPagingAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, sType, sValue, userID, startDate, endDate, strCheckState, null);
        }
        
        public void GetComplainRecordPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, int sType, string sValue, string userID, string startDate, string endDate, string strCheckState, object userState) {
            if ((this.onBeginGetComplainRecordPagingDelegate == null)) {
                this.onBeginGetComplainRecordPagingDelegate = new BeginOperationDelegate(this.OnBeginGetComplainRecordPaging);
            }
            if ((this.onEndGetComplainRecordPagingDelegate == null)) {
                this.onEndGetComplainRecordPagingDelegate = new EndOperationDelegate(this.OnEndGetComplainRecordPaging);
            }
            if ((this.onGetComplainRecordPagingCompletedDelegate == null)) {
                this.onGetComplainRecordPagingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetComplainRecordPagingCompleted);
            }
            base.InvokeAsync(this.onBeginGetComplainRecordPagingDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount,
                        sType,
                        sValue,
                        userID,
                        startDate,
                        endDate,
                        strCheckState}, this.onEndGetComplainRecordPagingDelegate, this.onGetComplainRecordPagingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetCompainRecordByID(string CompainRecordID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompainRecordByID(CompainRecordID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetCompainRecordByID(System.IAsyncResult result) {
            return base.Channel.EndGetCompainRecordByID(result);
        }
        
        private System.IAsyncResult OnBeginGetCompainRecordByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CompainRecordID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetCompainRecordByID(CompainRecordID, callback, asyncState);
        }
        
        private object[] OnEndGetCompainRecordByID(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetCompainRecordByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompainRecordByIDCompleted(object state) {
            if ((this.GetCompainRecordByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompainRecordByIDCompleted(this, new GetCompainRecordByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompainRecordByIDAsync(string CompainRecordID) {
            this.GetCompainRecordByIDAsync(CompainRecordID, null);
        }
        
        public void GetCompainRecordByIDAsync(string CompainRecordID, object userState) {
            if ((this.onBeginGetCompainRecordByIDDelegate == null)) {
                this.onBeginGetCompainRecordByIDDelegate = new BeginOperationDelegate(this.OnBeginGetCompainRecordByID);
            }
            if ((this.onEndGetCompainRecordByIDDelegate == null)) {
                this.onEndGetCompainRecordByIDDelegate = new EndOperationDelegate(this.OnEndGetCompainRecordByID);
            }
            if ((this.onGetCompainRecordByIDCompletedDelegate == null)) {
                this.onGetCompainRecordByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompainRecordByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompainRecordByIDDelegate, new object[] {
                        CompainRecordID}, this.onEndGetCompainRecordByIDDelegate, this.onGetCompainRecordByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginCompainRecordUpdate(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCompainRecordUpdate(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndCompainRecordUpdate(System.IAsyncResult result) {
            base.Channel.EndCompainRecordUpdate(result);
        }
        
        private System.IAsyncResult OnBeginCompainRecordUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entity = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginCompainRecordUpdate(entity, callback, asyncState);
        }
        
        private object[] OnEndCompainRecordUpdate(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndCompainRecordUpdate(result);
            return null;
        }
        
        private void OnCompainRecordUpdateCompleted(object state) {
            if ((this.CompainRecordUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CompainRecordUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CompainRecordUpdateAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entity) {
            this.CompainRecordUpdateAsync(entity, null);
        }
        
        public void CompainRecordUpdateAsync(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entity, object userState) {
            if ((this.onBeginCompainRecordUpdateDelegate == null)) {
                this.onBeginCompainRecordUpdateDelegate = new BeginOperationDelegate(this.OnBeginCompainRecordUpdate);
            }
            if ((this.onEndCompainRecordUpdateDelegate == null)) {
                this.onEndCompainRecordUpdateDelegate = new EndOperationDelegate(this.OnEndCompainRecordUpdate);
            }
            if ((this.onCompainRecordUpdateCompletedDelegate == null)) {
                this.onCompainRecordUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCompainRecordUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginCompainRecordUpdateDelegate, new object[] {
                        entity}, this.onEndCompainRecordUpdateDelegate, this.onCompainRecordUpdateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginCompainRecordUpdateOver(string kpirecordid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCompainRecordUpdateOver(kpirecordid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndCompainRecordUpdateOver(System.IAsyncResult result) {
            base.Channel.EndCompainRecordUpdateOver(result);
        }
        
        private System.IAsyncResult OnBeginCompainRecordUpdateOver(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string kpirecordid = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginCompainRecordUpdateOver(kpirecordid, callback, asyncState);
        }
        
        private object[] OnEndCompainRecordUpdateOver(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndCompainRecordUpdateOver(result);
            return null;
        }
        
        private void OnCompainRecordUpdateOverCompleted(object state) {
            if ((this.CompainRecordUpdateOverCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CompainRecordUpdateOverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CompainRecordUpdateOverAsync(string kpirecordid) {
            this.CompainRecordUpdateOverAsync(kpirecordid, null);
        }
        
        public void CompainRecordUpdateOverAsync(string kpirecordid, object userState) {
            if ((this.onBeginCompainRecordUpdateOverDelegate == null)) {
                this.onBeginCompainRecordUpdateOverDelegate = new BeginOperationDelegate(this.OnBeginCompainRecordUpdateOver);
            }
            if ((this.onEndCompainRecordUpdateOverDelegate == null)) {
                this.onEndCompainRecordUpdateOverDelegate = new EndOperationDelegate(this.OnEndCompainRecordUpdateOver);
            }
            if ((this.onCompainRecordUpdateOverCompletedDelegate == null)) {
                this.onCompainRecordUpdateOverCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCompainRecordUpdateOverCompleted);
            }
            base.InvokeAsync(this.onBeginCompainRecordUpdateOverDelegate, new object[] {
                        kpirecordid}, this.onEndCompainRecordUpdateOverDelegate, this.onCompainRecordUpdateOverCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginComplainRecordDelete(System.Collections.ObjectModel.ObservableCollection<string> ComplainRecords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginComplainRecordDelete(ComplainRecords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndComplainRecordDelete(System.IAsyncResult result) {
            return base.Channel.EndComplainRecordDelete(result);
        }
        
        private System.IAsyncResult OnBeginComplainRecordDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> ComplainRecords = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginComplainRecordDelete(ComplainRecords, callback, asyncState);
        }
        
        private object[] OnEndComplainRecordDelete(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndComplainRecordDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnComplainRecordDeleteCompleted(object state) {
            if ((this.ComplainRecordDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ComplainRecordDeleteCompleted(this, new ComplainRecordDeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ComplainRecordDeleteAsync(System.Collections.ObjectModel.ObservableCollection<string> ComplainRecords) {
            this.ComplainRecordDeleteAsync(ComplainRecords, null);
        }
        
        public void ComplainRecordDeleteAsync(System.Collections.ObjectModel.ObservableCollection<string> ComplainRecords, object userState) {
            if ((this.onBeginComplainRecordDeleteDelegate == null)) {
                this.onBeginComplainRecordDeleteDelegate = new BeginOperationDelegate(this.OnBeginComplainRecordDelete);
            }
            if ((this.onEndComplainRecordDeleteDelegate == null)) {
                this.onEndComplainRecordDeleteDelegate = new EndOperationDelegate(this.OnEndComplainRecordDelete);
            }
            if ((this.onComplainRecordDeleteCompletedDelegate == null)) {
                this.onComplainRecordDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnComplainRecordDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginComplainRecordDeleteDelegate, new object[] {
                        ComplainRecords}, this.onEndComplainRecordDeleteDelegate, this.onComplainRecordDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetKPIRecordPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string sType, string sValue, string userID, string startDate, string endDate, string strCheckState, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKPIRecordPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, sType, sValue, userID, startDate, endDate, strCheckState, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_KPIRECORD> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetKPIRecordPaging(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetKPIRecordPaging(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetKPIRecordPaging(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<string> paras = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            string sType = ((string)(inValues[6]));
            string sValue = ((string)(inValues[7]));
            string userID = ((string)(inValues[8]));
            string startDate = ((string)(inValues[9]));
            string endDate = ((string)(inValues[10]));
            string strCheckState = ((string)(inValues[11]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetKPIRecordPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, sType, sValue, userID, startDate, endDate, strCheckState, callback, asyncState);
        }
        
        private object[] OnEndGetKPIRecordPaging(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_KPIRECORD> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetKPIRecordPaging(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetKPIRecordPagingCompleted(object state) {
            if ((this.GetKPIRecordPagingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKPIRecordPagingCompleted(this, new GetKPIRecordPagingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKPIRecordPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string sType, string sValue, string userID, string startDate, string endDate, string strCheckState) {
            this.GetKPIRecordPagingAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, sType, sValue, userID, startDate, endDate, strCheckState, null);
        }
        
        public void GetKPIRecordPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string sType, string sValue, string userID, string startDate, string endDate, string strCheckState, object userState) {
            if ((this.onBeginGetKPIRecordPagingDelegate == null)) {
                this.onBeginGetKPIRecordPagingDelegate = new BeginOperationDelegate(this.OnBeginGetKPIRecordPaging);
            }
            if ((this.onEndGetKPIRecordPagingDelegate == null)) {
                this.onEndGetKPIRecordPagingDelegate = new EndOperationDelegate(this.OnEndGetKPIRecordPaging);
            }
            if ((this.onGetKPIRecordPagingCompletedDelegate == null)) {
                this.onGetKPIRecordPagingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKPIRecordPagingCompleted);
            }
            base.InvokeAsync(this.onBeginGetKPIRecordPagingDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount,
                        sType,
                        sValue,
                        userID,
                        startDate,
                        endDate,
                        strCheckState}, this.onEndGetKPIRecordPagingDelegate, this.onGetKPIRecordPagingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginCheckRecordIsSummarize(string recordId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckRecordIsSummarize(recordId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PerformanceWS.PerformanceService.EndCheckRecordIsSummarize(System.IAsyncResult result) {
            return base.Channel.EndCheckRecordIsSummarize(result);
        }
        
        private System.IAsyncResult OnBeginCheckRecordIsSummarize(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string recordId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginCheckRecordIsSummarize(recordId, callback, asyncState);
        }
        
        private object[] OnEndCheckRecordIsSummarize(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndCheckRecordIsSummarize(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckRecordIsSummarizeCompleted(object state) {
            if ((this.CheckRecordIsSummarizeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckRecordIsSummarizeCompleted(this, new CheckRecordIsSummarizeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckRecordIsSummarizeAsync(string recordId) {
            this.CheckRecordIsSummarizeAsync(recordId, null);
        }
        
        public void CheckRecordIsSummarizeAsync(string recordId, object userState) {
            if ((this.onBeginCheckRecordIsSummarizeDelegate == null)) {
                this.onBeginCheckRecordIsSummarizeDelegate = new BeginOperationDelegate(this.OnBeginCheckRecordIsSummarize);
            }
            if ((this.onEndCheckRecordIsSummarizeDelegate == null)) {
                this.onEndCheckRecordIsSummarizeDelegate = new EndOperationDelegate(this.OnEndCheckRecordIsSummarize);
            }
            if ((this.onCheckRecordIsSummarizeCompletedDelegate == null)) {
                this.onCheckRecordIsSummarizeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckRecordIsSummarizeCompleted);
            }
            base.InvokeAsync(this.onBeginCheckRecordIsSummarizeDelegate, new object[] {
                        recordId}, this.onEndCheckRecordIsSummarizeDelegate, this.onCheckRecordIsSummarizeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetRandomGroupPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRandomGroupPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetRandomGroupPaging(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetRandomGroupPaging(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetRandomGroupPaging(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<string> paras = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            string userID = ((string)(inValues[6]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetRandomGroupPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, userID, callback, asyncState);
        }
        
        private object[] OnEndGetRandomGroupPaging(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetRandomGroupPaging(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetRandomGroupPagingCompleted(object state) {
            if ((this.GetRandomGroupPagingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRandomGroupPagingCompleted(this, new GetRandomGroupPagingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRandomGroupPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string userID) {
            this.GetRandomGroupPagingAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, userID, null);
        }
        
        public void GetRandomGroupPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string userID, object userState) {
            if ((this.onBeginGetRandomGroupPagingDelegate == null)) {
                this.onBeginGetRandomGroupPagingDelegate = new BeginOperationDelegate(this.OnBeginGetRandomGroupPaging);
            }
            if ((this.onEndGetRandomGroupPagingDelegate == null)) {
                this.onEndGetRandomGroupPagingDelegate = new EndOperationDelegate(this.OnEndGetRandomGroupPaging);
            }
            if ((this.onGetRandomGroupPagingCompletedDelegate == null)) {
                this.onGetRandomGroupPagingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRandomGroupPagingCompleted);
            }
            base.InvokeAsync(this.onBeginGetRandomGroupPagingDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount,
                        userID}, this.onEndGetRandomGroupPagingDelegate, this.onGetRandomGroupPagingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetRandomGroupPersonAll(string randomGroupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRandomGroupPersonAll(randomGroupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetRandomGroupPersonAll(System.IAsyncResult result) {
            return base.Channel.EndGetRandomGroupPersonAll(result);
        }
        
        private System.IAsyncResult OnBeginGetRandomGroupPersonAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string randomGroupID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetRandomGroupPersonAll(randomGroupID, callback, asyncState);
        }
        
        private object[] OnEndGetRandomGroupPersonAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetRandomGroupPersonAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRandomGroupPersonAllCompleted(object state) {
            if ((this.GetRandomGroupPersonAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRandomGroupPersonAllCompleted(this, new GetRandomGroupPersonAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRandomGroupPersonAllAsync(string randomGroupID) {
            this.GetRandomGroupPersonAllAsync(randomGroupID, null);
        }
        
        public void GetRandomGroupPersonAllAsync(string randomGroupID, object userState) {
            if ((this.onBeginGetRandomGroupPersonAllDelegate == null)) {
                this.onBeginGetRandomGroupPersonAllDelegate = new BeginOperationDelegate(this.OnBeginGetRandomGroupPersonAll);
            }
            if ((this.onEndGetRandomGroupPersonAllDelegate == null)) {
                this.onEndGetRandomGroupPersonAllDelegate = new EndOperationDelegate(this.OnEndGetRandomGroupPersonAll);
            }
            if ((this.onGetRandomGroupPersonAllCompletedDelegate == null)) {
                this.onGetRandomGroupPersonAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRandomGroupPersonAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetRandomGroupPersonAllDelegate, new object[] {
                        randomGroupID}, this.onEndGetRandomGroupPersonAllDelegate, this.onGetRandomGroupPersonAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetRandomGroupPersonPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string randomGroupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRandomGroupPersonPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, randomGroupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_EMPLOYEEVIEW> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetRandomGroupPersonPaging(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetRandomGroupPersonPaging(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetRandomGroupPersonPaging(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<string> paras = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            string randomGroupID = ((string)(inValues[6]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetRandomGroupPersonPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, randomGroupID, callback, asyncState);
        }
        
        private object[] OnEndGetRandomGroupPersonPaging(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_EMPLOYEEVIEW> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetRandomGroupPersonPaging(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetRandomGroupPersonPagingCompleted(object state) {
            if ((this.GetRandomGroupPersonPagingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRandomGroupPersonPagingCompleted(this, new GetRandomGroupPersonPagingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRandomGroupPersonPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string randomGroupID) {
            this.GetRandomGroupPersonPagingAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, randomGroupID, null);
        }
        
        public void GetRandomGroupPersonPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string randomGroupID, object userState) {
            if ((this.onBeginGetRandomGroupPersonPagingDelegate == null)) {
                this.onBeginGetRandomGroupPersonPagingDelegate = new BeginOperationDelegate(this.OnBeginGetRandomGroupPersonPaging);
            }
            if ((this.onEndGetRandomGroupPersonPagingDelegate == null)) {
                this.onEndGetRandomGroupPersonPagingDelegate = new EndOperationDelegate(this.OnEndGetRandomGroupPersonPaging);
            }
            if ((this.onGetRandomGroupPersonPagingCompletedDelegate == null)) {
                this.onGetRandomGroupPersonPagingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRandomGroupPersonPagingCompleted);
            }
            base.InvokeAsync(this.onBeginGetRandomGroupPersonPagingDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount,
                        randomGroupID}, this.onEndGetRandomGroupPersonPagingDelegate, this.onGetRandomGroupPersonPagingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetRandomGroupPersonByID(string randomGroupPersonID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRandomGroupPersonByID(randomGroupPersonID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetRandomGroupPersonByID(System.IAsyncResult result) {
            return base.Channel.EndGetRandomGroupPersonByID(result);
        }
        
        private System.IAsyncResult OnBeginGetRandomGroupPersonByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string randomGroupPersonID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetRandomGroupPersonByID(randomGroupPersonID, callback, asyncState);
        }
        
        private object[] OnEndGetRandomGroupPersonByID(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetRandomGroupPersonByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRandomGroupPersonByIDCompleted(object state) {
            if ((this.GetRandomGroupPersonByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRandomGroupPersonByIDCompleted(this, new GetRandomGroupPersonByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRandomGroupPersonByIDAsync(string randomGroupPersonID) {
            this.GetRandomGroupPersonByIDAsync(randomGroupPersonID, null);
        }
        
        public void GetRandomGroupPersonByIDAsync(string randomGroupPersonID, object userState) {
            if ((this.onBeginGetRandomGroupPersonByIDDelegate == null)) {
                this.onBeginGetRandomGroupPersonByIDDelegate = new BeginOperationDelegate(this.OnBeginGetRandomGroupPersonByID);
            }
            if ((this.onEndGetRandomGroupPersonByIDDelegate == null)) {
                this.onEndGetRandomGroupPersonByIDDelegate = new EndOperationDelegate(this.OnEndGetRandomGroupPersonByID);
            }
            if ((this.onGetRandomGroupPersonByIDCompletedDelegate == null)) {
                this.onGetRandomGroupPersonByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRandomGroupPersonByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetRandomGroupPersonByIDDelegate, new object[] {
                        randomGroupPersonID}, this.onEndGetRandomGroupPersonByIDDelegate, this.onGetRandomGroupPersonByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetRandomGroupPersonByGroupID(string randomGroupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRandomGroupPersonByGroupID(randomGroupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetRandomGroupPersonByGroupID(System.IAsyncResult result) {
            return base.Channel.EndGetRandomGroupPersonByGroupID(result);
        }
        
        private System.IAsyncResult OnBeginGetRandomGroupPersonByGroupID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string randomGroupID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetRandomGroupPersonByGroupID(randomGroupID, callback, asyncState);
        }
        
        private object[] OnEndGetRandomGroupPersonByGroupID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetRandomGroupPersonByGroupID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRandomGroupPersonByGroupIDCompleted(object state) {
            if ((this.GetRandomGroupPersonByGroupIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRandomGroupPersonByGroupIDCompleted(this, new GetRandomGroupPersonByGroupIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRandomGroupPersonByGroupIDAsync(string randomGroupID) {
            this.GetRandomGroupPersonByGroupIDAsync(randomGroupID, null);
        }
        
        public void GetRandomGroupPersonByGroupIDAsync(string randomGroupID, object userState) {
            if ((this.onBeginGetRandomGroupPersonByGroupIDDelegate == null)) {
                this.onBeginGetRandomGroupPersonByGroupIDDelegate = new BeginOperationDelegate(this.OnBeginGetRandomGroupPersonByGroupID);
            }
            if ((this.onEndGetRandomGroupPersonByGroupIDDelegate == null)) {
                this.onEndGetRandomGroupPersonByGroupIDDelegate = new EndOperationDelegate(this.OnEndGetRandomGroupPersonByGroupID);
            }
            if ((this.onGetRandomGroupPersonByGroupIDCompletedDelegate == null)) {
                this.onGetRandomGroupPersonByGroupIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRandomGroupPersonByGroupIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetRandomGroupPersonByGroupIDDelegate, new object[] {
                        randomGroupID}, this.onEndGetRandomGroupPersonByGroupIDDelegate, this.onGetRandomGroupPersonByGroupIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetRandomGroupAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRandomGroupAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetRandomGroupAll(System.IAsyncResult result) {
            return base.Channel.EndGetRandomGroupAll(result);
        }
        
        private System.IAsyncResult OnBeginGetRandomGroupAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetRandomGroupAll(callback, asyncState);
        }
        
        private object[] OnEndGetRandomGroupAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetRandomGroupAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRandomGroupAllCompleted(object state) {
            if ((this.GetRandomGroupAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRandomGroupAllCompleted(this, new GetRandomGroupAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRandomGroupAllAsync() {
            this.GetRandomGroupAllAsync(null);
        }
        
        public void GetRandomGroupAllAsync(object userState) {
            if ((this.onBeginGetRandomGroupAllDelegate == null)) {
                this.onBeginGetRandomGroupAllDelegate = new BeginOperationDelegate(this.OnBeginGetRandomGroupAll);
            }
            if ((this.onEndGetRandomGroupAllDelegate == null)) {
                this.onEndGetRandomGroupAllDelegate = new EndOperationDelegate(this.OnEndGetRandomGroupAll);
            }
            if ((this.onGetRandomGroupAllCompletedDelegate == null)) {
                this.onGetRandomGroupAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRandomGroupAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetRandomGroupAllDelegate, null, this.onEndGetRandomGroupAllDelegate, this.onGetRandomGroupAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetRandomGroupByID(string randomGroupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRandomGroupByID(randomGroupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetRandomGroupByID(System.IAsyncResult result) {
            return base.Channel.EndGetRandomGroupByID(result);
        }
        
        private System.IAsyncResult OnBeginGetRandomGroupByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string randomGroupID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetRandomGroupByID(randomGroupID, callback, asyncState);
        }
        
        private object[] OnEndGetRandomGroupByID(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetRandomGroupByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRandomGroupByIDCompleted(object state) {
            if ((this.GetRandomGroupByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRandomGroupByIDCompleted(this, new GetRandomGroupByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRandomGroupByIDAsync(string randomGroupID) {
            this.GetRandomGroupByIDAsync(randomGroupID, null);
        }
        
        public void GetRandomGroupByIDAsync(string randomGroupID, object userState) {
            if ((this.onBeginGetRandomGroupByIDDelegate == null)) {
                this.onBeginGetRandomGroupByIDDelegate = new BeginOperationDelegate(this.OnBeginGetRandomGroupByID);
            }
            if ((this.onEndGetRandomGroupByIDDelegate == null)) {
                this.onEndGetRandomGroupByIDDelegate = new EndOperationDelegate(this.OnEndGetRandomGroupByID);
            }
            if ((this.onGetRandomGroupByIDCompletedDelegate == null)) {
                this.onGetRandomGroupByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRandomGroupByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetRandomGroupByIDDelegate, new object[] {
                        randomGroupID}, this.onEndGetRandomGroupByIDDelegate, this.onGetRandomGroupByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginAddRandomGroup(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP entType, ref string strMsg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddRandomGroup(entType, ref strMsg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndAddRandomGroup(ref string strMsg, System.IAsyncResult result) {
            base.Channel.EndAddRandomGroup(ref strMsg, result);
        }
        
        private System.IAsyncResult OnBeginAddRandomGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP)(inValues[0]));
            string strMsg = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginAddRandomGroup(entType, ref strMsg, callback, asyncState);
        }
        
        private object[] OnEndAddRandomGroup(System.IAsyncResult result) {
            string strMsg = this.GetDefaultValueForInitialization<string>();
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndAddRandomGroup(ref strMsg, result);
            return new object[] {
                    strMsg};
        }
        
        private void OnAddRandomGroupCompleted(object state) {
            if ((this.AddRandomGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddRandomGroupCompleted(this, new AddRandomGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddRandomGroupAsync(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP entType, string strMsg) {
            this.AddRandomGroupAsync(entType, strMsg, null);
        }
        
        public void AddRandomGroupAsync(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP entType, string strMsg, object userState) {
            if ((this.onBeginAddRandomGroupDelegate == null)) {
                this.onBeginAddRandomGroupDelegate = new BeginOperationDelegate(this.OnBeginAddRandomGroup);
            }
            if ((this.onEndAddRandomGroupDelegate == null)) {
                this.onEndAddRandomGroupDelegate = new EndOperationDelegate(this.OnEndAddRandomGroup);
            }
            if ((this.onAddRandomGroupCompletedDelegate == null)) {
                this.onAddRandomGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddRandomGroupCompleted);
            }
            base.InvokeAsync(this.onBeginAddRandomGroupDelegate, new object[] {
                        entType,
                        strMsg}, this.onEndAddRandomGroupDelegate, this.onAddRandomGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginUpdateRandomGroup(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP entType, ref string strMsg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRandomGroup(entType, ref strMsg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndUpdateRandomGroup(ref string strMsg, System.IAsyncResult result) {
            base.Channel.EndUpdateRandomGroup(ref strMsg, result);
        }
        
        private System.IAsyncResult OnBeginUpdateRandomGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP)(inValues[0]));
            string strMsg = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginUpdateRandomGroup(entType, ref strMsg, callback, asyncState);
        }
        
        private object[] OnEndUpdateRandomGroup(System.IAsyncResult result) {
            string strMsg = this.GetDefaultValueForInitialization<string>();
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndUpdateRandomGroup(ref strMsg, result);
            return new object[] {
                    strMsg};
        }
        
        private void OnUpdateRandomGroupCompleted(object state) {
            if ((this.UpdateRandomGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRandomGroupCompleted(this, new UpdateRandomGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRandomGroupAsync(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP entType, string strMsg) {
            this.UpdateRandomGroupAsync(entType, strMsg, null);
        }
        
        public void UpdateRandomGroupAsync(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP entType, string strMsg, object userState) {
            if ((this.onBeginUpdateRandomGroupDelegate == null)) {
                this.onBeginUpdateRandomGroupDelegate = new BeginOperationDelegate(this.OnBeginUpdateRandomGroup);
            }
            if ((this.onEndUpdateRandomGroupDelegate == null)) {
                this.onEndUpdateRandomGroupDelegate = new EndOperationDelegate(this.OnEndUpdateRandomGroup);
            }
            if ((this.onUpdateRandomGroupCompletedDelegate == null)) {
                this.onUpdateRandomGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRandomGroupCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRandomGroupDelegate, new object[] {
                        entType,
                        strMsg}, this.onEndUpdateRandomGroupDelegate, this.onUpdateRandomGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginDeleteRandomGroup(string randomGroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRandomGroup(randomGroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndDeleteRandomGroup(System.IAsyncResult result) {
            return base.Channel.EndDeleteRandomGroup(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRandomGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string randomGroupId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginDeleteRandomGroup(randomGroupId, callback, asyncState);
        }
        
        private object[] OnEndDeleteRandomGroup(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndDeleteRandomGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteRandomGroupCompleted(object state) {
            if ((this.DeleteRandomGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRandomGroupCompleted(this, new DeleteRandomGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRandomGroupAsync(string randomGroupId) {
            this.DeleteRandomGroupAsync(randomGroupId, null);
        }
        
        public void DeleteRandomGroupAsync(string randomGroupId, object userState) {
            if ((this.onBeginDeleteRandomGroupDelegate == null)) {
                this.onBeginDeleteRandomGroupDelegate = new BeginOperationDelegate(this.OnBeginDeleteRandomGroup);
            }
            if ((this.onEndDeleteRandomGroupDelegate == null)) {
                this.onEndDeleteRandomGroupDelegate = new EndOperationDelegate(this.OnEndDeleteRandomGroup);
            }
            if ((this.onDeleteRandomGroupCompletedDelegate == null)) {
                this.onDeleteRandomGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRandomGroupCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRandomGroupDelegate, new object[] {
                        randomGroupId}, this.onEndDeleteRandomGroupDelegate, this.onDeleteRandomGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginDeleteRandomGroups(System.Collections.ObjectModel.ObservableCollection<string> randomGroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRandomGroups(randomGroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndDeleteRandomGroups(System.IAsyncResult result) {
            return base.Channel.EndDeleteRandomGroups(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRandomGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> randomGroupId = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginDeleteRandomGroups(randomGroupId, callback, asyncState);
        }
        
        private object[] OnEndDeleteRandomGroups(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndDeleteRandomGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteRandomGroupsCompleted(object state) {
            if ((this.DeleteRandomGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRandomGroupsCompleted(this, new DeleteRandomGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRandomGroupsAsync(System.Collections.ObjectModel.ObservableCollection<string> randomGroupId) {
            this.DeleteRandomGroupsAsync(randomGroupId, null);
        }
        
        public void DeleteRandomGroupsAsync(System.Collections.ObjectModel.ObservableCollection<string> randomGroupId, object userState) {
            if ((this.onBeginDeleteRandomGroupsDelegate == null)) {
                this.onBeginDeleteRandomGroupsDelegate = new BeginOperationDelegate(this.OnBeginDeleteRandomGroups);
            }
            if ((this.onEndDeleteRandomGroupsDelegate == null)) {
                this.onEndDeleteRandomGroupsDelegate = new EndOperationDelegate(this.OnEndDeleteRandomGroups);
            }
            if ((this.onDeleteRandomGroupsCompletedDelegate == null)) {
                this.onDeleteRandomGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRandomGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRandomGroupsDelegate, new object[] {
                        randomGroupId}, this.onEndDeleteRandomGroupsDelegate, this.onDeleteRandomGroupsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginAddRandomGroupPerson(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON entType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddRandomGroupPerson(entType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndAddRandomGroupPerson(System.IAsyncResult result) {
            base.Channel.EndAddRandomGroupPerson(result);
        }
        
        private System.IAsyncResult OnBeginAddRandomGroupPerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginAddRandomGroupPerson(entType, callback, asyncState);
        }
        
        private object[] OnEndAddRandomGroupPerson(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndAddRandomGroupPerson(result);
            return null;
        }
        
        private void OnAddRandomGroupPersonCompleted(object state) {
            if ((this.AddRandomGroupPersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddRandomGroupPersonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddRandomGroupPersonAsync(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON entType) {
            this.AddRandomGroupPersonAsync(entType, null);
        }
        
        public void AddRandomGroupPersonAsync(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON entType, object userState) {
            if ((this.onBeginAddRandomGroupPersonDelegate == null)) {
                this.onBeginAddRandomGroupPersonDelegate = new BeginOperationDelegate(this.OnBeginAddRandomGroupPerson);
            }
            if ((this.onEndAddRandomGroupPersonDelegate == null)) {
                this.onEndAddRandomGroupPersonDelegate = new EndOperationDelegate(this.OnEndAddRandomGroupPerson);
            }
            if ((this.onAddRandomGroupPersonCompletedDelegate == null)) {
                this.onAddRandomGroupPersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddRandomGroupPersonCompleted);
            }
            base.InvokeAsync(this.onBeginAddRandomGroupPersonDelegate, new object[] {
                        entType}, this.onEndAddRandomGroupPersonDelegate, this.onAddRandomGroupPersonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginAddRandomGroupPersonList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> entList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddRandomGroupPersonList(entList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndAddRandomGroupPersonList(System.IAsyncResult result) {
            return base.Channel.EndAddRandomGroupPersonList(result);
        }
        
        private System.IAsyncResult OnBeginAddRandomGroupPersonList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> entList = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON>)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginAddRandomGroupPersonList(entList, callback, asyncState);
        }
        
        private object[] OnEndAddRandomGroupPersonList(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndAddRandomGroupPersonList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddRandomGroupPersonListCompleted(object state) {
            if ((this.AddRandomGroupPersonListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddRandomGroupPersonListCompleted(this, new AddRandomGroupPersonListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddRandomGroupPersonListAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> entList) {
            this.AddRandomGroupPersonListAsync(entList, null);
        }
        
        public void AddRandomGroupPersonListAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> entList, object userState) {
            if ((this.onBeginAddRandomGroupPersonListDelegate == null)) {
                this.onBeginAddRandomGroupPersonListDelegate = new BeginOperationDelegate(this.OnBeginAddRandomGroupPersonList);
            }
            if ((this.onEndAddRandomGroupPersonListDelegate == null)) {
                this.onEndAddRandomGroupPersonListDelegate = new EndOperationDelegate(this.OnEndAddRandomGroupPersonList);
            }
            if ((this.onAddRandomGroupPersonListCompletedDelegate == null)) {
                this.onAddRandomGroupPersonListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddRandomGroupPersonListCompleted);
            }
            base.InvokeAsync(this.onBeginAddRandomGroupPersonListDelegate, new object[] {
                        entList}, this.onEndAddRandomGroupPersonListDelegate, this.onAddRandomGroupPersonListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginUpdateRandomGroupPerson(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON entType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRandomGroupPerson(entType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndUpdateRandomGroupPerson(System.IAsyncResult result) {
            base.Channel.EndUpdateRandomGroupPerson(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRandomGroupPerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginUpdateRandomGroupPerson(entType, callback, asyncState);
        }
        
        private object[] OnEndUpdateRandomGroupPerson(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndUpdateRandomGroupPerson(result);
            return null;
        }
        
        private void OnUpdateRandomGroupPersonCompleted(object state) {
            if ((this.UpdateRandomGroupPersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRandomGroupPersonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRandomGroupPersonAsync(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON entType) {
            this.UpdateRandomGroupPersonAsync(entType, null);
        }
        
        public void UpdateRandomGroupPersonAsync(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON entType, object userState) {
            if ((this.onBeginUpdateRandomGroupPersonDelegate == null)) {
                this.onBeginUpdateRandomGroupPersonDelegate = new BeginOperationDelegate(this.OnBeginUpdateRandomGroupPerson);
            }
            if ((this.onEndUpdateRandomGroupPersonDelegate == null)) {
                this.onEndUpdateRandomGroupPersonDelegate = new EndOperationDelegate(this.OnEndUpdateRandomGroupPerson);
            }
            if ((this.onUpdateRandomGroupPersonCompletedDelegate == null)) {
                this.onUpdateRandomGroupPersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRandomGroupPersonCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRandomGroupPersonDelegate, new object[] {
                        entType}, this.onEndUpdateRandomGroupPersonDelegate, this.onUpdateRandomGroupPersonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginUpdateRandomGroupPersonList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> entList, System.Collections.ObjectModel.ObservableCollection<string> employeeIDs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRandomGroupPersonList(entList, employeeIDs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<int> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndUpdateRandomGroupPersonList(System.IAsyncResult result) {
            return base.Channel.EndUpdateRandomGroupPersonList(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRandomGroupPersonList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> entList = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON>)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<string> employeeIDs = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[1]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginUpdateRandomGroupPersonList(entList, employeeIDs, callback, asyncState);
        }
        
        private object[] OnEndUpdateRandomGroupPersonList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<int> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndUpdateRandomGroupPersonList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateRandomGroupPersonListCompleted(object state) {
            if ((this.UpdateRandomGroupPersonListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRandomGroupPersonListCompleted(this, new UpdateRandomGroupPersonListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRandomGroupPersonListAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> entList, System.Collections.ObjectModel.ObservableCollection<string> employeeIDs) {
            this.UpdateRandomGroupPersonListAsync(entList, employeeIDs, null);
        }
        
        public void UpdateRandomGroupPersonListAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> entList, System.Collections.ObjectModel.ObservableCollection<string> employeeIDs, object userState) {
            if ((this.onBeginUpdateRandomGroupPersonListDelegate == null)) {
                this.onBeginUpdateRandomGroupPersonListDelegate = new BeginOperationDelegate(this.OnBeginUpdateRandomGroupPersonList);
            }
            if ((this.onEndUpdateRandomGroupPersonListDelegate == null)) {
                this.onEndUpdateRandomGroupPersonListDelegate = new EndOperationDelegate(this.OnEndUpdateRandomGroupPersonList);
            }
            if ((this.onUpdateRandomGroupPersonListCompletedDelegate == null)) {
                this.onUpdateRandomGroupPersonListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRandomGroupPersonListCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRandomGroupPersonListDelegate, new object[] {
                        entList,
                        employeeIDs}, this.onEndUpdateRandomGroupPersonListDelegate, this.onUpdateRandomGroupPersonListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginDeleteRandomGroupPerson(string randomGroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRandomGroupPerson(randomGroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndDeleteRandomGroupPerson(System.IAsyncResult result) {
            return base.Channel.EndDeleteRandomGroupPerson(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRandomGroupPerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string randomGroupId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginDeleteRandomGroupPerson(randomGroupId, callback, asyncState);
        }
        
        private object[] OnEndDeleteRandomGroupPerson(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndDeleteRandomGroupPerson(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteRandomGroupPersonCompleted(object state) {
            if ((this.DeleteRandomGroupPersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRandomGroupPersonCompleted(this, new DeleteRandomGroupPersonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRandomGroupPersonAsync(string randomGroupId) {
            this.DeleteRandomGroupPersonAsync(randomGroupId, null);
        }
        
        public void DeleteRandomGroupPersonAsync(string randomGroupId, object userState) {
            if ((this.onBeginDeleteRandomGroupPersonDelegate == null)) {
                this.onBeginDeleteRandomGroupPersonDelegate = new BeginOperationDelegate(this.OnBeginDeleteRandomGroupPerson);
            }
            if ((this.onEndDeleteRandomGroupPersonDelegate == null)) {
                this.onEndDeleteRandomGroupPersonDelegate = new EndOperationDelegate(this.OnEndDeleteRandomGroupPerson);
            }
            if ((this.onDeleteRandomGroupPersonCompletedDelegate == null)) {
                this.onDeleteRandomGroupPersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRandomGroupPersonCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRandomGroupPersonDelegate, new object[] {
                        randomGroupId}, this.onEndDeleteRandomGroupPersonDelegate, this.onDeleteRandomGroupPersonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginDeleteRandomGroupPersons(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRandomGroupPersons(groupPersonIDs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PerformanceWS.PerformanceService.EndDeleteRandomGroupPersons(System.IAsyncResult result) {
            return base.Channel.EndDeleteRandomGroupPersons(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRandomGroupPersons(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginDeleteRandomGroupPersons(groupPersonIDs, callback, asyncState);
        }
        
        private object[] OnEndDeleteRandomGroupPersons(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndDeleteRandomGroupPersons(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteRandomGroupPersonsCompleted(object state) {
            if ((this.DeleteRandomGroupPersonsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRandomGroupPersonsCompleted(this, new DeleteRandomGroupPersonsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRandomGroupPersonsAsync(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs) {
            this.DeleteRandomGroupPersonsAsync(groupPersonIDs, null);
        }
        
        public void DeleteRandomGroupPersonsAsync(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, object userState) {
            if ((this.onBeginDeleteRandomGroupPersonsDelegate == null)) {
                this.onBeginDeleteRandomGroupPersonsDelegate = new BeginOperationDelegate(this.OnBeginDeleteRandomGroupPersons);
            }
            if ((this.onEndDeleteRandomGroupPersonsDelegate == null)) {
                this.onEndDeleteRandomGroupPersonsDelegate = new EndOperationDelegate(this.OnEndDeleteRandomGroupPersons);
            }
            if ((this.onDeleteRandomGroupPersonsCompletedDelegate == null)) {
                this.onDeleteRandomGroupPersonsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRandomGroupPersonsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRandomGroupPersonsDelegate, new object[] {
                        groupPersonIDs}, this.onEndDeleteRandomGroupPersonsDelegate, this.onDeleteRandomGroupPersonsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginDeleteRandomPersons(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, string groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRandomPersons(groupPersonIDs, groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PerformanceWS.PerformanceService.EndDeleteRandomPersons(System.IAsyncResult result) {
            return base.Channel.EndDeleteRandomPersons(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRandomPersons(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            string groupID = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginDeleteRandomPersons(groupPersonIDs, groupID, callback, asyncState);
        }
        
        private object[] OnEndDeleteRandomPersons(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndDeleteRandomPersons(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteRandomPersonsCompleted(object state) {
            if ((this.DeleteRandomPersonsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRandomPersonsCompleted(this, new DeleteRandomPersonsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRandomPersonsAsync(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, string groupID) {
            this.DeleteRandomPersonsAsync(groupPersonIDs, groupID, null);
        }
        
        public void DeleteRandomPersonsAsync(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, string groupID, object userState) {
            if ((this.onBeginDeleteRandomPersonsDelegate == null)) {
                this.onBeginDeleteRandomPersonsDelegate = new BeginOperationDelegate(this.OnBeginDeleteRandomPersons);
            }
            if ((this.onEndDeleteRandomPersonsDelegate == null)) {
                this.onEndDeleteRandomPersonsDelegate = new EndOperationDelegate(this.OnEndDeleteRandomPersons);
            }
            if ((this.onDeleteRandomPersonsCompletedDelegate == null)) {
                this.onDeleteRandomPersonsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRandomPersonsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRandomPersonsDelegate, new object[] {
                        groupPersonIDs,
                        groupID}, this.onEndDeleteRandomPersonsDelegate, this.onDeleteRandomPersonsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetSumPerformancePaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string sType, string sValue, string userID, bool isSelf, string checkState, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSumPerformancePaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, sType, sValue, userID, isSelf, checkState, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetSumPerformancePaging(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetSumPerformancePaging(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetSumPerformancePaging(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<string> paras = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            string sType = ((string)(inValues[6]));
            string sValue = ((string)(inValues[7]));
            string userID = ((string)(inValues[8]));
            bool isSelf = ((bool)(inValues[9]));
            string checkState = ((string)(inValues[10]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetSumPerformancePaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, sType, sValue, userID, isSelf, checkState, callback, asyncState);
        }
        
        private object[] OnEndGetSumPerformancePaging(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetSumPerformancePaging(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetSumPerformancePagingCompleted(object state) {
            if ((this.GetSumPerformancePagingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSumPerformancePagingCompleted(this, new GetSumPerformancePagingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSumPerformancePagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string sType, string sValue, string userID, bool isSelf, string checkState) {
            this.GetSumPerformancePagingAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, sType, sValue, userID, isSelf, checkState, null);
        }
        
        public void GetSumPerformancePagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string sType, string sValue, string userID, bool isSelf, string checkState, object userState) {
            if ((this.onBeginGetSumPerformancePagingDelegate == null)) {
                this.onBeginGetSumPerformancePagingDelegate = new BeginOperationDelegate(this.OnBeginGetSumPerformancePaging);
            }
            if ((this.onEndGetSumPerformancePagingDelegate == null)) {
                this.onEndGetSumPerformancePagingDelegate = new EndOperationDelegate(this.OnEndGetSumPerformancePaging);
            }
            if ((this.onGetSumPerformancePagingCompletedDelegate == null)) {
                this.onGetSumPerformancePagingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSumPerformancePagingCompleted);
            }
            base.InvokeAsync(this.onBeginGetSumPerformancePagingDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount,
                        sType,
                        sValue,
                        userID,
                        isSelf,
                        checkState}, this.onEndGetSumPerformancePagingDelegate, this.onGetSumPerformancePagingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetSumPerformancePagingByTime(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string sType, string sValue, string userID, bool isSelf, string startTime, string endTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSumPerformancePagingByTime(pageIndex, pageSize, sort, filterString, paras, ref pageCount, sType, sValue, userID, isSelf, startTime, endTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetSumPerformancePagingByTime(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetSumPerformancePagingByTime(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetSumPerformancePagingByTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<string> paras = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            string sType = ((string)(inValues[6]));
            string sValue = ((string)(inValues[7]));
            string userID = ((string)(inValues[8]));
            bool isSelf = ((bool)(inValues[9]));
            string startTime = ((string)(inValues[10]));
            string endTime = ((string)(inValues[11]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetSumPerformancePagingByTime(pageIndex, pageSize, sort, filterString, paras, ref pageCount, sType, sValue, userID, isSelf, startTime, endTime, callback, asyncState);
        }
        
        private object[] OnEndGetSumPerformancePagingByTime(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetSumPerformancePagingByTime(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetSumPerformancePagingByTimeCompleted(object state) {
            if ((this.GetSumPerformancePagingByTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSumPerformancePagingByTimeCompleted(this, new GetSumPerformancePagingByTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSumPerformancePagingByTimeAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string sType, string sValue, string userID, bool isSelf, string startTime, string endTime) {
            this.GetSumPerformancePagingByTimeAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, sType, sValue, userID, isSelf, startTime, endTime, null);
        }
        
        public void GetSumPerformancePagingByTimeAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string sType, string sValue, string userID, bool isSelf, string startTime, string endTime, object userState) {
            if ((this.onBeginGetSumPerformancePagingByTimeDelegate == null)) {
                this.onBeginGetSumPerformancePagingByTimeDelegate = new BeginOperationDelegate(this.OnBeginGetSumPerformancePagingByTime);
            }
            if ((this.onEndGetSumPerformancePagingByTimeDelegate == null)) {
                this.onEndGetSumPerformancePagingByTimeDelegate = new EndOperationDelegate(this.OnEndGetSumPerformancePagingByTime);
            }
            if ((this.onGetSumPerformancePagingByTimeCompletedDelegate == null)) {
                this.onGetSumPerformancePagingByTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSumPerformancePagingByTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetSumPerformancePagingByTimeDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount,
                        sType,
                        sValue,
                        userID,
                        isSelf,
                        startTime,
                        endTime}, this.onEndGetSumPerformancePagingByTimeDelegate, this.onGetSumPerformancePagingByTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetPerformanceDetailEmployeeAllPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string userID, string startTime, string endTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceDetailEmployeeAllPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, userID, startTime, endTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetPerformanceDetailEmployeeAllPaging(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceDetailEmployeeAllPaging(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceDetailEmployeeAllPaging(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<string> paras = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            string userID = ((string)(inValues[6]));
            string startTime = ((string)(inValues[7]));
            string endTime = ((string)(inValues[8]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetPerformanceDetailEmployeeAllPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, userID, startTime, endTime, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceDetailEmployeeAllPaging(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetPerformanceDetailEmployeeAllPaging(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetPerformanceDetailEmployeeAllPagingCompleted(object state) {
            if ((this.GetPerformanceDetailEmployeeAllPagingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceDetailEmployeeAllPagingCompleted(this, new GetPerformanceDetailEmployeeAllPagingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceDetailEmployeeAllPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string userID, string startTime, string endTime) {
            this.GetPerformanceDetailEmployeeAllPagingAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, userID, startTime, endTime, null);
        }
        
        public void GetPerformanceDetailEmployeeAllPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string userID, string startTime, string endTime, object userState) {
            if ((this.onBeginGetPerformanceDetailEmployeeAllPagingDelegate == null)) {
                this.onBeginGetPerformanceDetailEmployeeAllPagingDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceDetailEmployeeAllPaging);
            }
            if ((this.onEndGetPerformanceDetailEmployeeAllPagingDelegate == null)) {
                this.onEndGetPerformanceDetailEmployeeAllPagingDelegate = new EndOperationDelegate(this.OnEndGetPerformanceDetailEmployeeAllPaging);
            }
            if ((this.onGetPerformanceDetailEmployeeAllPagingCompletedDelegate == null)) {
                this.onGetPerformanceDetailEmployeeAllPagingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailEmployeeAllPagingCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceDetailEmployeeAllPagingDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount,
                        userID,
                        startTime,
                        endTime}, this.onEndGetPerformanceDetailEmployeeAllPagingDelegate, this.onGetPerformanceDetailEmployeeAllPagingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetEmployeePerformancePagingByTime(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string sType, string sValue, string userID, string startTime, string endTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmployeePerformancePagingByTime(pageIndex, pageSize, sort, filterString, paras, ref pageCount, sType, sValue, userID, startTime, endTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetEmployeePerformancePagingByTime(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetEmployeePerformancePagingByTime(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetEmployeePerformancePagingByTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<string> paras = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            string sType = ((string)(inValues[6]));
            string sValue = ((string)(inValues[7]));
            string userID = ((string)(inValues[8]));
            string startTime = ((string)(inValues[9]));
            string endTime = ((string)(inValues[10]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetEmployeePerformancePagingByTime(pageIndex, pageSize, sort, filterString, paras, ref pageCount, sType, sValue, userID, startTime, endTime, callback, asyncState);
        }
        
        private object[] OnEndGetEmployeePerformancePagingByTime(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetEmployeePerformancePagingByTime(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetEmployeePerformancePagingByTimeCompleted(object state) {
            if ((this.GetEmployeePerformancePagingByTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmployeePerformancePagingByTimeCompleted(this, new GetEmployeePerformancePagingByTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmployeePerformancePagingByTimeAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string sType, string sValue, string userID, string startTime, string endTime) {
            this.GetEmployeePerformancePagingByTimeAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, sType, sValue, userID, startTime, endTime, null);
        }
        
        public void GetEmployeePerformancePagingByTimeAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string sType, string sValue, string userID, string startTime, string endTime, object userState) {
            if ((this.onBeginGetEmployeePerformancePagingByTimeDelegate == null)) {
                this.onBeginGetEmployeePerformancePagingByTimeDelegate = new BeginOperationDelegate(this.OnBeginGetEmployeePerformancePagingByTime);
            }
            if ((this.onEndGetEmployeePerformancePagingByTimeDelegate == null)) {
                this.onEndGetEmployeePerformancePagingByTimeDelegate = new EndOperationDelegate(this.OnEndGetEmployeePerformancePagingByTime);
            }
            if ((this.onGetEmployeePerformancePagingByTimeCompletedDelegate == null)) {
                this.onGetEmployeePerformancePagingByTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmployeePerformancePagingByTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmployeePerformancePagingByTimeDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount,
                        sType,
                        sValue,
                        userID,
                        startTime,
                        endTime}, this.onEndGetEmployeePerformancePagingByTimeDelegate, this.onGetEmployeePerformancePagingByTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetPerformanceEmployeeAllPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceEmployeeAllPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetPerformanceEmployeeAllPaging(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceEmployeeAllPaging(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceEmployeeAllPaging(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<string> paras = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[4]));
            int pageCount = ((int)(inValues[5]));
            string userID = ((string)(inValues[6]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetPerformanceEmployeeAllPaging(pageIndex, pageSize, sort, filterString, paras, ref pageCount, userID, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceEmployeeAllPaging(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetPerformanceEmployeeAllPaging(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetPerformanceEmployeeAllPagingCompleted(object state) {
            if ((this.GetPerformanceEmployeeAllPagingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceEmployeeAllPagingCompleted(this, new GetPerformanceEmployeeAllPagingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceEmployeeAllPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string userID) {
            this.GetPerformanceEmployeeAllPagingAsync(pageIndex, pageSize, sort, filterString, paras, pageCount, userID, null);
        }
        
        public void GetPerformanceEmployeeAllPagingAsync(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, int pageCount, string userID, object userState) {
            if ((this.onBeginGetPerformanceEmployeeAllPagingDelegate == null)) {
                this.onBeginGetPerformanceEmployeeAllPagingDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceEmployeeAllPaging);
            }
            if ((this.onEndGetPerformanceEmployeeAllPagingDelegate == null)) {
                this.onEndGetPerformanceEmployeeAllPagingDelegate = new EndOperationDelegate(this.OnEndGetPerformanceEmployeeAllPaging);
            }
            if ((this.onGetPerformanceEmployeeAllPagingCompletedDelegate == null)) {
                this.onGetPerformanceEmployeeAllPagingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceEmployeeAllPagingCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceEmployeeAllPagingDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        paras,
                        pageCount,
                        userID}, this.onEndGetPerformanceEmployeeAllPagingDelegate, this.onGetPerformanceEmployeeAllPagingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetPerformanceAllBySumID(string sumID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceAllBySumID(sumID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetPerformanceAllBySumID(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceAllBySumID(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceAllBySumID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sumID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetPerformanceAllBySumID(sumID, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceAllBySumID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetPerformanceAllBySumID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceAllBySumIDCompleted(object state) {
            if ((this.GetPerformanceAllBySumIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceAllBySumIDCompleted(this, new GetPerformanceAllBySumIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceAllBySumIDAsync(string sumID) {
            this.GetPerformanceAllBySumIDAsync(sumID, null);
        }
        
        public void GetPerformanceAllBySumIDAsync(string sumID, object userState) {
            if ((this.onBeginGetPerformanceAllBySumIDDelegate == null)) {
                this.onBeginGetPerformanceAllBySumIDDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceAllBySumID);
            }
            if ((this.onEndGetPerformanceAllBySumIDDelegate == null)) {
                this.onEndGetPerformanceAllBySumIDDelegate = new EndOperationDelegate(this.OnEndGetPerformanceAllBySumID);
            }
            if ((this.onGetPerformanceAllBySumIDCompletedDelegate == null)) {
                this.onGetPerformanceAllBySumIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceAllBySumIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceAllBySumIDDelegate, new object[] {
                        sumID}, this.onEndGetPerformanceAllBySumIDDelegate, this.onGetPerformanceAllBySumIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetPerformanceEmployeeAllBySumID(string sumID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceEmployeeAllBySumID(sumID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetPerformanceEmployeeAllBySumID(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceEmployeeAllBySumID(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceEmployeeAllBySumID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sumID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetPerformanceEmployeeAllBySumID(sumID, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceEmployeeAllBySumID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetPerformanceEmployeeAllBySumID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceEmployeeAllBySumIDCompleted(object state) {
            if ((this.GetPerformanceEmployeeAllBySumIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceEmployeeAllBySumIDCompleted(this, new GetPerformanceEmployeeAllBySumIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceEmployeeAllBySumIDAsync(string sumID) {
            this.GetPerformanceEmployeeAllBySumIDAsync(sumID, null);
        }
        
        public void GetPerformanceEmployeeAllBySumIDAsync(string sumID, object userState) {
            if ((this.onBeginGetPerformanceEmployeeAllBySumIDDelegate == null)) {
                this.onBeginGetPerformanceEmployeeAllBySumIDDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceEmployeeAllBySumID);
            }
            if ((this.onEndGetPerformanceEmployeeAllBySumIDDelegate == null)) {
                this.onEndGetPerformanceEmployeeAllBySumIDDelegate = new EndOperationDelegate(this.OnEndGetPerformanceEmployeeAllBySumID);
            }
            if ((this.onGetPerformanceEmployeeAllBySumIDCompletedDelegate == null)) {
                this.onGetPerformanceEmployeeAllBySumIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceEmployeeAllBySumIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceEmployeeAllBySumIDDelegate, new object[] {
                        sumID}, this.onEndGetPerformanceEmployeeAllBySumIDDelegate, this.onGetPerformanceEmployeeAllBySumIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetPerformanceDetailEmployeeAllBySumID(string sumID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceDetailEmployeeAllBySumID(sumID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetPerformanceDetailEmployeeAllBySumID(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceDetailEmployeeAllBySumID(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceDetailEmployeeAllBySumID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sumID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetPerformanceDetailEmployeeAllBySumID(sumID, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceDetailEmployeeAllBySumID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetPerformanceDetailEmployeeAllBySumID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceDetailEmployeeAllBySumIDCompleted(object state) {
            if ((this.GetPerformanceDetailEmployeeAllBySumIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceDetailEmployeeAllBySumIDCompleted(this, new GetPerformanceDetailEmployeeAllBySumIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceDetailEmployeeAllBySumIDAsync(string sumID) {
            this.GetPerformanceDetailEmployeeAllBySumIDAsync(sumID, null);
        }
        
        public void GetPerformanceDetailEmployeeAllBySumIDAsync(string sumID, object userState) {
            if ((this.onBeginGetPerformanceDetailEmployeeAllBySumIDDelegate == null)) {
                this.onBeginGetPerformanceDetailEmployeeAllBySumIDDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceDetailEmployeeAllBySumID);
            }
            if ((this.onEndGetPerformanceDetailEmployeeAllBySumIDDelegate == null)) {
                this.onEndGetPerformanceDetailEmployeeAllBySumIDDelegate = new EndOperationDelegate(this.OnEndGetPerformanceDetailEmployeeAllBySumID);
            }
            if ((this.onGetPerformanceDetailEmployeeAllBySumIDCompletedDelegate == null)) {
                this.onGetPerformanceDetailEmployeeAllBySumIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailEmployeeAllBySumIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceDetailEmployeeAllBySumIDDelegate, new object[] {
                        sumID}, this.onEndGetPerformanceDetailEmployeeAllBySumIDDelegate, this.onGetPerformanceDetailEmployeeAllBySumIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetEmployePerformance(System.Collections.ObjectModel.ObservableCollection<string> employeIDs, System.DateTime startTime, System.DateTime endTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmployePerformance(employeIDs, startTime, endTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, decimal> SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetEmployePerformance(System.IAsyncResult result) {
            return base.Channel.EndGetEmployePerformance(result);
        }
        
        private System.IAsyncResult OnBeginGetEmployePerformance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> employeIDs = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            System.DateTime startTime = ((System.DateTime)(inValues[1]));
            System.DateTime endTime = ((System.DateTime)(inValues[2]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetEmployePerformance(employeIDs, startTime, endTime, callback, asyncState);
        }
        
        private object[] OnEndGetEmployePerformance(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, decimal> retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetEmployePerformance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmployePerformanceCompleted(object state) {
            if ((this.GetEmployePerformanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmployePerformanceCompleted(this, new GetEmployePerformanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmployePerformanceAsync(System.Collections.ObjectModel.ObservableCollection<string> employeIDs, System.DateTime startTime, System.DateTime endTime) {
            this.GetEmployePerformanceAsync(employeIDs, startTime, endTime, null);
        }
        
        public void GetEmployePerformanceAsync(System.Collections.ObjectModel.ObservableCollection<string> employeIDs, System.DateTime startTime, System.DateTime endTime, object userState) {
            if ((this.onBeginGetEmployePerformanceDelegate == null)) {
                this.onBeginGetEmployePerformanceDelegate = new BeginOperationDelegate(this.OnBeginGetEmployePerformance);
            }
            if ((this.onEndGetEmployePerformanceDelegate == null)) {
                this.onEndGetEmployePerformanceDelegate = new EndOperationDelegate(this.OnEndGetEmployePerformance);
            }
            if ((this.onGetEmployePerformanceCompletedDelegate == null)) {
                this.onGetEmployePerformanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmployePerformanceCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmployePerformanceDelegate, new object[] {
                        employeIDs,
                        startTime,
                        endTime}, this.onEndGetEmployePerformanceDelegate, this.onGetEmployePerformanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetPerformanceRecordByID(string recordID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerformanceRecordByID(recordID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetPerformanceRecordByID(System.IAsyncResult result) {
            return base.Channel.EndGetPerformanceRecordByID(result);
        }
        
        private System.IAsyncResult OnBeginGetPerformanceRecordByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string recordID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetPerformanceRecordByID(recordID, callback, asyncState);
        }
        
        private object[] OnEndGetPerformanceRecordByID(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetPerformanceRecordByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPerformanceRecordByIDCompleted(object state) {
            if ((this.GetPerformanceRecordByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPerformanceRecordByIDCompleted(this, new GetPerformanceRecordByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPerformanceRecordByIDAsync(string recordID) {
            this.GetPerformanceRecordByIDAsync(recordID, null);
        }
        
        public void GetPerformanceRecordByIDAsync(string recordID, object userState) {
            if ((this.onBeginGetPerformanceRecordByIDDelegate == null)) {
                this.onBeginGetPerformanceRecordByIDDelegate = new BeginOperationDelegate(this.OnBeginGetPerformanceRecordByID);
            }
            if ((this.onEndGetPerformanceRecordByIDDelegate == null)) {
                this.onEndGetPerformanceRecordByIDDelegate = new EndOperationDelegate(this.OnEndGetPerformanceRecordByID);
            }
            if ((this.onGetPerformanceRecordByIDCompletedDelegate == null)) {
                this.onGetPerformanceRecordByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPerformanceRecordByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPerformanceRecordByIDDelegate, new object[] {
                        recordID}, this.onEndGetPerformanceRecordByIDDelegate, this.onGetPerformanceRecordByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginAddSumPerformance(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddSumPerformance(entType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndAddSumPerformance(System.IAsyncResult result) {
            base.Channel.EndAddSumPerformance(result);
        }
        
        private System.IAsyncResult OnBeginAddSumPerformance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginAddSumPerformance(entType, callback, asyncState);
        }
        
        private object[] OnEndAddSumPerformance(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndAddSumPerformance(result);
            return null;
        }
        
        private void OnAddSumPerformanceCompleted(object state) {
            if ((this.AddSumPerformanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddSumPerformanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddSumPerformanceAsync(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType) {
            this.AddSumPerformanceAsync(entType, null);
        }
        
        public void AddSumPerformanceAsync(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType, object userState) {
            if ((this.onBeginAddSumPerformanceDelegate == null)) {
                this.onBeginAddSumPerformanceDelegate = new BeginOperationDelegate(this.OnBeginAddSumPerformance);
            }
            if ((this.onEndAddSumPerformanceDelegate == null)) {
                this.onEndAddSumPerformanceDelegate = new EndOperationDelegate(this.OnEndAddSumPerformance);
            }
            if ((this.onAddSumPerformanceCompletedDelegate == null)) {
                this.onAddSumPerformanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddSumPerformanceCompleted);
            }
            base.InvokeAsync(this.onBeginAddSumPerformanceDelegate, new object[] {
                        entType}, this.onEndAddSumPerformanceDelegate, this.onAddSumPerformanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginGetSumPerformanceRecordByID(string sumid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSumPerformanceRecordByID(sumid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD SMT.Saas.Tools.PerformanceWS.PerformanceService.EndGetSumPerformanceRecordByID(System.IAsyncResult result) {
            return base.Channel.EndGetSumPerformanceRecordByID(result);
        }
        
        private System.IAsyncResult OnBeginGetSumPerformanceRecordByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sumid = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginGetSumPerformanceRecordByID(sumid, callback, asyncState);
        }
        
        private object[] OnEndGetSumPerformanceRecordByID(System.IAsyncResult result) {
            SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndGetSumPerformanceRecordByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSumPerformanceRecordByIDCompleted(object state) {
            if ((this.GetSumPerformanceRecordByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSumPerformanceRecordByIDCompleted(this, new GetSumPerformanceRecordByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSumPerformanceRecordByIDAsync(string sumid) {
            this.GetSumPerformanceRecordByIDAsync(sumid, null);
        }
        
        public void GetSumPerformanceRecordByIDAsync(string sumid, object userState) {
            if ((this.onBeginGetSumPerformanceRecordByIDDelegate == null)) {
                this.onBeginGetSumPerformanceRecordByIDDelegate = new BeginOperationDelegate(this.OnBeginGetSumPerformanceRecordByID);
            }
            if ((this.onEndGetSumPerformanceRecordByIDDelegate == null)) {
                this.onEndGetSumPerformanceRecordByIDDelegate = new EndOperationDelegate(this.OnEndGetSumPerformanceRecordByID);
            }
            if ((this.onGetSumPerformanceRecordByIDCompletedDelegate == null)) {
                this.onGetSumPerformanceRecordByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSumPerformanceRecordByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetSumPerformanceRecordByIDDelegate, new object[] {
                        sumid}, this.onEndGetSumPerformanceRecordByIDDelegate, this.onGetSumPerformanceRecordByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginUpdateSumPerformance(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSumPerformance(entType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndUpdateSumPerformance(System.IAsyncResult result) {
            base.Channel.EndUpdateSumPerformance(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSumPerformance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginUpdateSumPerformance(entType, callback, asyncState);
        }
        
        private object[] OnEndUpdateSumPerformance(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndUpdateSumPerformance(result);
            return null;
        }
        
        private void OnUpdateSumPerformanceCompleted(object state) {
            if ((this.UpdateSumPerformanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSumPerformanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSumPerformanceAsync(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType) {
            this.UpdateSumPerformanceAsync(entType, null);
        }
        
        public void UpdateSumPerformanceAsync(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType, object userState) {
            if ((this.onBeginUpdateSumPerformanceDelegate == null)) {
                this.onBeginUpdateSumPerformanceDelegate = new BeginOperationDelegate(this.OnBeginUpdateSumPerformance);
            }
            if ((this.onEndUpdateSumPerformanceDelegate == null)) {
                this.onEndUpdateSumPerformanceDelegate = new EndOperationDelegate(this.OnEndUpdateSumPerformance);
            }
            if ((this.onUpdateSumPerformanceCompletedDelegate == null)) {
                this.onUpdateSumPerformanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSumPerformanceCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSumPerformanceDelegate, new object[] {
                        entType}, this.onEndUpdateSumPerformanceDelegate, this.onUpdateSumPerformanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginUpdateSumPerformanceAndSum(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSumPerformanceAndSum(entType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.PerformanceWS.PerformanceService.EndUpdateSumPerformanceAndSum(System.IAsyncResult result) {
            base.Channel.EndUpdateSumPerformanceAndSum(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSumPerformanceAndSum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType = ((SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginUpdateSumPerformanceAndSum(entType, callback, asyncState);
        }
        
        private object[] OnEndUpdateSumPerformanceAndSum(System.IAsyncResult result) {
            ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndUpdateSumPerformanceAndSum(result);
            return null;
        }
        
        private void OnUpdateSumPerformanceAndSumCompleted(object state) {
            if ((this.UpdateSumPerformanceAndSumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSumPerformanceAndSumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSumPerformanceAndSumAsync(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType) {
            this.UpdateSumPerformanceAndSumAsync(entType, null);
        }
        
        public void UpdateSumPerformanceAndSumAsync(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType, object userState) {
            if ((this.onBeginUpdateSumPerformanceAndSumDelegate == null)) {
                this.onBeginUpdateSumPerformanceAndSumDelegate = new BeginOperationDelegate(this.OnBeginUpdateSumPerformanceAndSum);
            }
            if ((this.onEndUpdateSumPerformanceAndSumDelegate == null)) {
                this.onEndUpdateSumPerformanceAndSumDelegate = new EndOperationDelegate(this.OnEndUpdateSumPerformanceAndSum);
            }
            if ((this.onUpdateSumPerformanceAndSumCompletedDelegate == null)) {
                this.onUpdateSumPerformanceAndSumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSumPerformanceAndSumCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSumPerformanceAndSumDelegate, new object[] {
                        entType}, this.onEndUpdateSumPerformanceAndSumDelegate, this.onUpdateSumPerformanceAndSumCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginDeleteSumPerformance(string sumId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSumPerformance(sumId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndDeleteSumPerformance(System.IAsyncResult result) {
            return base.Channel.EndDeleteSumPerformance(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSumPerformance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sumId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginDeleteSumPerformance(sumId, callback, asyncState);
        }
        
        private object[] OnEndDeleteSumPerformance(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndDeleteSumPerformance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteSumPerformanceCompleted(object state) {
            if ((this.DeleteSumPerformanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSumPerformanceCompleted(this, new DeleteSumPerformanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSumPerformanceAsync(string sumId) {
            this.DeleteSumPerformanceAsync(sumId, null);
        }
        
        public void DeleteSumPerformanceAsync(string sumId, object userState) {
            if ((this.onBeginDeleteSumPerformanceDelegate == null)) {
                this.onBeginDeleteSumPerformanceDelegate = new BeginOperationDelegate(this.OnBeginDeleteSumPerformance);
            }
            if ((this.onEndDeleteSumPerformanceDelegate == null)) {
                this.onEndDeleteSumPerformanceDelegate = new EndOperationDelegate(this.OnEndDeleteSumPerformance);
            }
            if ((this.onDeleteSumPerformanceCompletedDelegate == null)) {
                this.onDeleteSumPerformanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSumPerformanceCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSumPerformanceDelegate, new object[] {
                        sumId}, this.onEndDeleteSumPerformanceDelegate, this.onDeleteSumPerformanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PerformanceWS.PerformanceService.BeginDeleteSumPerformances(System.Collections.ObjectModel.ObservableCollection<string> sumIdList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSumPerformances(sumIdList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.PerformanceWS.PerformanceService.EndDeleteSumPerformances(System.IAsyncResult result) {
            return base.Channel.EndDeleteSumPerformances(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSumPerformances(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> sumIdList = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).BeginDeleteSumPerformances(sumIdList, callback, asyncState);
        }
        
        private object[] OnEndDeleteSumPerformances(System.IAsyncResult result) {
            int retVal = ((SMT.Saas.Tools.PerformanceWS.PerformanceService)(this)).EndDeleteSumPerformances(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteSumPerformancesCompleted(object state) {
            if ((this.DeleteSumPerformancesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSumPerformancesCompleted(this, new DeleteSumPerformancesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSumPerformancesAsync(System.Collections.ObjectModel.ObservableCollection<string> sumIdList) {
            this.DeleteSumPerformancesAsync(sumIdList, null);
        }
        
        public void DeleteSumPerformancesAsync(System.Collections.ObjectModel.ObservableCollection<string> sumIdList, object userState) {
            if ((this.onBeginDeleteSumPerformancesDelegate == null)) {
                this.onBeginDeleteSumPerformancesDelegate = new BeginOperationDelegate(this.OnBeginDeleteSumPerformances);
            }
            if ((this.onEndDeleteSumPerformancesDelegate == null)) {
                this.onEndDeleteSumPerformancesDelegate = new EndOperationDelegate(this.OnEndDeleteSumPerformances);
            }
            if ((this.onDeleteSumPerformancesCompletedDelegate == null)) {
                this.onDeleteSumPerformancesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSumPerformancesCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSumPerformancesDelegate, new object[] {
                        sumIdList}, this.onEndDeleteSumPerformancesDelegate, this.onDeleteSumPerformancesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.Saas.Tools.PerformanceWS.PerformanceService CreateChannel() {
            return new PerformanceServiceClientChannel(this);
        }
        
        private class PerformanceServiceClientChannel : ChannelBase<SMT.Saas.Tools.PerformanceWS.PerformanceService>, SMT.Saas.Tools.PerformanceWS.PerformanceService {
            
            public PerformanceServiceClientChannel(System.ServiceModel.ClientBase<SMT.Saas.Tools.PerformanceWS.PerformanceService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddPerformanceRecord(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entType;
                System.IAsyncResult _result = base.BeginInvoke("AddPerformanceRecord", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddPerformanceRecord(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddPerformanceRecord", _args, result);
            }
            
            public System.IAsyncResult BeginAddPerformanceRecordList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> entList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entList;
                System.IAsyncResult _result = base.BeginInvoke("AddPerformanceRecordList", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAddPerformanceRecordList(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AddPerformanceRecordList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePerformanceRecord(SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entType;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePerformanceRecord", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdatePerformanceRecord(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdatePerformanceRecord", _args, result);
            }
            
            public System.IAsyncResult BeginUpdatePerformanceRecordList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> entList, System.Collections.ObjectModel.ObservableCollection<string> employeeIDs, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = entList;
                _args[1] = employeeIDs;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePerformanceRecordList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<int> EndUpdatePerformanceRecordList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<int> _result = ((System.Collections.ObjectModel.ObservableCollection<int>)(base.EndInvoke("UpdatePerformanceRecordList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeletePerformanceRecord(string randomGroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = randomGroupId;
                System.IAsyncResult _result = base.BeginInvoke("DeletePerformanceRecord", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeletePerformanceRecord(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeletePerformanceRecord", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeletePerformanceRecords(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupPersonIDs;
                System.IAsyncResult _result = base.BeginInvoke("DeletePerformanceRecords", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeletePerformanceRecords(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeletePerformanceRecords", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginKPIScorePost(string BusinessCodePost, string RelationIDPost, string CreateCompanyIDPost, string CreateDepartmentIDPost, string CreatePostIDPost, string CreateUserIDPost, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = BusinessCodePost;
                _args[1] = RelationIDPost;
                _args[2] = CreateCompanyIDPost;
                _args[3] = CreateDepartmentIDPost;
                _args[4] = CreatePostIDPost;
                _args[5] = CreateUserIDPost;
                System.IAsyncResult _result = base.BeginInvoke("KPIScorePost", _args, callback, asyncState);
                return _result;
            }
            
            public int EndKPIScorePost(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("KPIScorePost", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginKPISystemScore(string companyID, string modelRelationID, string flowCode, string stepCode, string formCode, string flowID, string stepID, System.DateTime lastStepDate, System.DateTime stepDate, string AppraiseeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[10];
                _args[0] = companyID;
                _args[1] = modelRelationID;
                _args[2] = flowCode;
                _args[3] = stepCode;
                _args[4] = formCode;
                _args[5] = flowID;
                _args[6] = stepID;
                _args[7] = lastStepDate;
                _args[8] = stepDate;
                _args[9] = AppraiseeID;
                System.IAsyncResult _result = base.BeginInvoke("KPISystemScore", _args, callback, asyncState);
                return _result;
            }
            
            public int EndKPISystemScore(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("KPISystemScore", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginKPISystemScoreByKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string stepID, System.DateTime lastStepDate, System.DateTime stepDate, string AppraiseeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = kpiPoint;
                _args[1] = formCode;
                _args[2] = flowID;
                _args[3] = stepID;
                _args[4] = lastStepDate;
                _args[5] = stepDate;
                _args[6] = AppraiseeID;
                System.IAsyncResult _result = base.BeginInvoke("KPISystemScoreByKPIPoint", _args, callback, asyncState);
                return _result;
            }
            
            public int EndKPISystemScoreByKPIPoint(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("KPISystemScoreByKPIPoint", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginKPIManualScore(string companyID, string modelRelationID, string flowCode, string lastStepID, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[10];
                _args[0] = companyID;
                _args[1] = modelRelationID;
                _args[2] = flowCode;
                _args[3] = lastStepID;
                _args[4] = formCode;
                _args[5] = flowID;
                _args[6] = lastStepCode;
                _args[7] = AppraiseeID;
                _args[8] = AppraiserID;
                _args[9] = score;
                System.IAsyncResult _result = base.BeginInvoke("KPIManualScore", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndKPIManualScore(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(base.EndInvoke("KPIManualScore", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginKPIManualScoreByKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = kpiPoint;
                _args[1] = formCode;
                _args[2] = flowID;
                _args[3] = lastStepCode;
                _args[4] = AppraiseeID;
                _args[5] = AppraiserID;
                _args[6] = score;
                System.IAsyncResult _result = base.BeginInvoke("KPIManualScoreByKPIPoint", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndKPIManualScoreByKPIPoint(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(base.EndInvoke("KPIManualScoreByKPIPoint", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginKPIRandomScore(string companyID, string modelRelationID, string flowCode, string lastStepID, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[10];
                _args[0] = companyID;
                _args[1] = modelRelationID;
                _args[2] = flowCode;
                _args[3] = lastStepID;
                _args[4] = formCode;
                _args[5] = flowID;
                _args[6] = lastStepCode;
                _args[7] = AppraiseeID;
                _args[8] = AppraiserID;
                _args[9] = score;
                System.IAsyncResult _result = base.BeginInvoke("KPIRandomScore", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndKPIRandomScore(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(base.EndInvoke("KPIRandomScore", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginKPIRandomScoreByKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT kpiPoint, string formCode, string flowID, string lastStepCode, string AppraiseeID, string AppraiserID, int score, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = kpiPoint;
                _args[1] = formCode;
                _args[2] = flowID;
                _args[3] = lastStepCode;
                _args[4] = AppraiseeID;
                _args[5] = AppraiserID;
                _args[6] = score;
                System.IAsyncResult _result = base.BeginInvoke("KPIRandomScoreByKPIPoint", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndKPIRandomScoreByKPIPoint(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(base.EndInvoke("KPIRandomScoreByKPIPoint", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIPoint(string companyID, string modelRelationID, string flowID, string stepID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = companyID;
                _args[1] = modelRelationID;
                _args[2] = flowID;
                _args[3] = stepID;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIPoint", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT EndGetKPIPoint(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT)(base.EndInvoke("GetKPIPoint", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIPointAndLastPoint(string companyID, string modelRelationID, string flowID, string stepID, string LastStepID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = companyID;
                _args[1] = modelRelationID;
                _args[2] = flowID;
                _args[3] = stepID;
                _args[4] = LastStepID;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIPointAndLastPoint", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> EndGetKPIPointAndLastPoint(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT>)(base.EndInvoke("GetKPIPointAndLastPoint", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIPointListByBusinessCode(string modelRelationID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = modelRelationID;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIPointListByBusinessCode", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> EndGetKPIPointListByBusinessCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT>)(base.EndInvoke("GetKPIPointListByBusinessCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIPointByID(string kpiPointID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = kpiPointID;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIPointByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT EndGetKPIPointByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT)(base.EndInvoke("GetKPIPointByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIPointRandomPersonID(string companyID, string modelRelationID, string flowID, string stepID, string formID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = companyID;
                _args[1] = modelRelationID;
                _args[2] = flowID;
                _args[3] = stepID;
                _args[4] = formID;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIPointRandomPersonID", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetKPIPointRandomPersonID(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetKPIPointRandomPersonID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPITypeByID(string kpiTypeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = kpiTypeID;
                System.IAsyncResult _result = base.BeginInvoke("GetKPITypeByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE EndGetKPITypeByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE)(base.EndInvoke("GetKPITypeByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPITypeAll(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetKPITypeAll", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> EndGetKPITypeAll(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE>)(base.EndInvoke("GetKPITypeAll", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPITypeWithPermission(string filterString, System.Collections.ObjectModel.ObservableCollection<object> paras, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = filterString;
                _args[1] = paras;
                _args[2] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetKPITypeWithPermission", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> EndGetKPITypeWithPermission(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE>)(base.EndInvoke("GetKPITypeWithPermission", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIRecordRandomPersonID(string formCode, string flowID, string stepID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = formCode;
                _args[1] = flowID;
                _args[2] = stepID;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIRecordRandomPersonID", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetKPIRecordRandomPersonID(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetKPIRecordRandomPersonID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIRecord(string formCode, string flowID, string stepID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = formCode;
                _args[1] = flowID;
                _args[2] = stepID;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIRecord", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndGetKPIRecord(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(base.EndInvoke("GetKPIRecord", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIRecordScoreDetail(string formCode, string flowID, string stepID, int scoreType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = formCode;
                _args[1] = flowID;
                _args[2] = stepID;
                _args[3] = scoreType;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIRecordScoreDetail", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetKPIRecordScoreDetail(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetKPIRecordScoreDetail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIRecordInterface(string formCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = formCode;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIRecordInterface", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndGetKPIRecordInterface(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(base.EndInvoke("GetKPIRecordInterface", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIRecordScore(string formCode, string flowID, string stepID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = formCode;
                _args[1] = flowID;
                _args[2] = stepID;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIRecordScore", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<decimal> EndGetKPIRecordScore(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<decimal> _result = ((System.Nullable<decimal>)(base.EndInvoke("GetKPIRecordScore", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIRecordById(string recordId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = recordId;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIRecordById", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndGetKPIRecordById(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(base.EndInvoke("GetKPIRecordById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckKPIRecordIsComplainingByUserID(System.Collections.ObjectModel.ObservableCollection<string> userIdList, System.DateTime startTime, System.DateTime endTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userIdList;
                _args[1] = startTime;
                _args[2] = endTime;
                System.IAsyncResult _result = base.BeginInvoke("CheckKPIRecordIsComplainingByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCheckKPIRecordIsComplainingByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CheckKPIRecordIsComplainingByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPITypePaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                _args[6] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetKPITypePaging", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> EndGetKPITypePaging(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE>)(base.EndInvoke("GetKPITypePaging", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginAddKPIType(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, ref string strMsg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = entType;
                _args[1] = strMsg;
                System.IAsyncResult _result = base.BeginInvoke("AddKPIType", _args, callback, asyncState);
                strMsg = ((string)(_args[1]));
                return _result;
            }
            
            public void EndAddKPIType(ref string strMsg, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = strMsg;
                base.EndInvoke("AddKPIType", _args, result);
                strMsg = ((string)(_args[0]));
            }
            
            public System.IAsyncResult BeginUpdateKPIType(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, ref string strMsg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = entType;
                _args[1] = strMsg;
                System.IAsyncResult _result = base.BeginInvoke("UpdateKPIType", _args, callback, asyncState);
                strMsg = ((string)(_args[1]));
                return _result;
            }
            
            public void EndUpdateKPIType(ref string strMsg, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = strMsg;
                base.EndInvoke("UpdateKPIType", _args, result);
                strMsg = ((string)(_args[0]));
            }
            
            public System.IAsyncResult BeginUpdateKPITypeAndRemind(SMT.Saas.Tools.PerformanceWS.T_HR_KPITYPE entType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> addList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> updateList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> delList, ref string strMsg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = entType;
                _args[1] = addList;
                _args[2] = updateList;
                _args[3] = delList;
                _args[4] = strMsg;
                System.IAsyncResult _result = base.BeginInvoke("UpdateKPITypeAndRemind", _args, callback, asyncState);
                strMsg = ((string)(_args[4]));
                return _result;
            }
            
            public void EndUpdateKPITypeAndRemind(ref string strMsg, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = strMsg;
                base.EndInvoke("UpdateKPITypeAndRemind", _args, result);
                strMsg = ((string)(_args[0]));
            }
            
            public System.IAsyncResult BeginDeleteKPIType(string kpiTypeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = kpiTypeId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteKPIType", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteKPIType(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteKPIType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteKPITypes(System.Collections.ObjectModel.ObservableCollection<string> kpiTypeId, ref string strMsg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = kpiTypeId;
                _args[1] = strMsg;
                System.IAsyncResult _result = base.BeginInvoke("DeleteKPITypes", _args, callback, asyncState);
                strMsg = ((string)(_args[1]));
                return _result;
            }
            
            public int EndDeleteKPITypes(ref string strMsg, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = strMsg;
                int _result = ((int)(base.EndInvoke("DeleteKPITypes", _args, result)));
                strMsg = ((string)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginAddKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entType;
                System.IAsyncResult _result = base.BeginInvoke("AddKPIPoint", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddKPIPoint(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddKPIPoint", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateKPIPoint(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entType;
                System.IAsyncResult _result = base.BeginInvoke("UpdateKPIPoint", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateKPIPoint(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateKPIPoint", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateKPIPointAndRemind(SMT.Saas.Tools.PerformanceWS.T_HR_KPIPOINT entType, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> addList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> updateList, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIREMIND> delList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = entType;
                _args[1] = addList;
                _args[2] = updateList;
                _args[3] = delList;
                System.IAsyncResult _result = base.BeginInvoke("UpdateKPIPointAndRemind", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateKPIPointAndRemind(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateKPIPointAndRemind", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteKPIPoint(string kpiTypeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = kpiTypeId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteKPIPoint", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteKPIPoint(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteKPIPoint", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginKPIRecordUpdate(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entity;
                System.IAsyncResult _result = base.BeginInvoke("KPIRecordUpdate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndKPIRecordUpdate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("KPIRecordUpdate", _args, result);
            }
            
            public System.IAsyncResult BeginGetVcomplainRecordByID(string CompainRecordID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = CompainRecordID;
                System.IAsyncResult _result = base.BeginInvoke("GetVcomplainRecordByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD EndGetVcomplainRecordByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD _result = ((SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD)(base.EndInvoke("GetVcomplainRecordByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveKPIRecordInterface(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD kpirecord, string AppraiseeID, string AppraiserID, int score, int scoretype, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = kpirecord;
                _args[1] = AppraiseeID;
                _args[2] = AppraiserID;
                _args[3] = score;
                _args[4] = scoretype;
                System.IAsyncResult _result = base.BeginInvoke("SaveKPIRecordInterface", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD EndSaveKPIRecordInterface(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORD)(base.EndInvoke("SaveKPIRecordInterface", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIRecordComplainByRecord(string recordId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = recordId;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIRecordComplainByRecord", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN> EndGetKPIRecordComplainByRecord(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN>)(base.EndInvoke("GetKPIRecordComplainByRecord", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIRecordComplainByID(string complainID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = complainID;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIRecordComplainByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN EndGetKPIRecordComplainByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN)(base.EndInvoke("GetKPIRecordComplainByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddKPIRecordComplain(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entType;
                System.IAsyncResult _result = base.BeginInvoke("AddKPIRecordComplain", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddKPIRecordComplain(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddKPIRecordComplain", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateKPIRecordComplain(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entType;
                System.IAsyncResult _result = base.BeginInvoke("UpdateKPIRecordComplain", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateKPIRecordComplain(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateKPIRecordComplain", _args, result);
            }
            
            public System.IAsyncResult BeginGetComplainRecordPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, int sType, string sValue, string userID, string startDate, string endDate, string strCheckState, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[12];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                _args[6] = sType;
                _args[7] = sValue;
                _args[8] = userID;
                _args[9] = startDate;
                _args[10] = endDate;
                _args[11] = strCheckState;
                System.IAsyncResult _result = base.BeginInvoke("GetComplainRecordPaging", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD> EndGetComplainRecordPaging(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_COMPLAINRECORD>)(base.EndInvoke("GetComplainRecordPaging", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCompainRecordByID(string CompainRecordID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = CompainRecordID;
                System.IAsyncResult _result = base.BeginInvoke("GetCompainRecordByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN EndGetCompainRecordByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN)(base.EndInvoke("GetCompainRecordByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCompainRecordUpdate(SMT.Saas.Tools.PerformanceWS.T_HR_KPIRECORDCOMPLAIN entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entity;
                System.IAsyncResult _result = base.BeginInvoke("CompainRecordUpdate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCompainRecordUpdate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CompainRecordUpdate", _args, result);
            }
            
            public System.IAsyncResult BeginCompainRecordUpdateOver(string kpirecordid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = kpirecordid;
                System.IAsyncResult _result = base.BeginInvoke("CompainRecordUpdateOver", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCompainRecordUpdateOver(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CompainRecordUpdateOver", _args, result);
            }
            
            public System.IAsyncResult BeginComplainRecordDelete(System.Collections.ObjectModel.ObservableCollection<string> ComplainRecords, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ComplainRecords;
                System.IAsyncResult _result = base.BeginInvoke("ComplainRecordDelete", _args, callback, asyncState);
                return _result;
            }
            
            public int EndComplainRecordDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("ComplainRecordDelete", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetKPIRecordPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string sType, string sValue, string userID, string startDate, string endDate, string strCheckState, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[12];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                _args[6] = sType;
                _args[7] = sValue;
                _args[8] = userID;
                _args[9] = startDate;
                _args[10] = endDate;
                _args[11] = strCheckState;
                System.IAsyncResult _result = base.BeginInvoke("GetKPIRecordPaging", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_KPIRECORD> EndGetKPIRecordPaging(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_KPIRECORD> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_KPIRECORD>)(base.EndInvoke("GetKPIRecordPaging", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckRecordIsSummarize(string recordId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = recordId;
                System.IAsyncResult _result = base.BeginInvoke("CheckRecordIsSummarize", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCheckRecordIsSummarize(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CheckRecordIsSummarize", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRandomGroupPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                _args[6] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetRandomGroupPaging", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP> EndGetRandomGroupPaging(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP>)(base.EndInvoke("GetRandomGroupPaging", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRandomGroupPersonAll(string randomGroupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = randomGroupID;
                System.IAsyncResult _result = base.BeginInvoke("GetRandomGroupPersonAll", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> EndGetRandomGroupPersonAll(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON>)(base.EndInvoke("GetRandomGroupPersonAll", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRandomGroupPersonPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string randomGroupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                _args[6] = randomGroupID;
                System.IAsyncResult _result = base.BeginInvoke("GetRandomGroupPersonPaging", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_EMPLOYEEVIEW> EndGetRandomGroupPersonPaging(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_EMPLOYEEVIEW> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_EMPLOYEEVIEW>)(base.EndInvoke("GetRandomGroupPersonPaging", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRandomGroupPersonByID(string randomGroupPersonID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = randomGroupPersonID;
                System.IAsyncResult _result = base.BeginInvoke("GetRandomGroupPersonByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON EndGetRandomGroupPersonByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON)(base.EndInvoke("GetRandomGroupPersonByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRandomGroupPersonByGroupID(string randomGroupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = randomGroupID;
                System.IAsyncResult _result = base.BeginInvoke("GetRandomGroupPersonByGroupID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> EndGetRandomGroupPersonByGroupID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON>)(base.EndInvoke("GetRandomGroupPersonByGroupID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRandomGroupAll(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRandomGroupAll", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP> EndGetRandomGroupAll(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP>)(base.EndInvoke("GetRandomGroupAll", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRandomGroupByID(string randomGroupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = randomGroupID;
                System.IAsyncResult _result = base.BeginInvoke("GetRandomGroupByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP EndGetRandomGroupByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP)(base.EndInvoke("GetRandomGroupByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddRandomGroup(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP entType, ref string strMsg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = entType;
                _args[1] = strMsg;
                System.IAsyncResult _result = base.BeginInvoke("AddRandomGroup", _args, callback, asyncState);
                strMsg = ((string)(_args[1]));
                return _result;
            }
            
            public void EndAddRandomGroup(ref string strMsg, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = strMsg;
                base.EndInvoke("AddRandomGroup", _args, result);
                strMsg = ((string)(_args[0]));
            }
            
            public System.IAsyncResult BeginUpdateRandomGroup(SMT.Saas.Tools.PerformanceWS.T_HR_RANDOMGROUP entType, ref string strMsg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = entType;
                _args[1] = strMsg;
                System.IAsyncResult _result = base.BeginInvoke("UpdateRandomGroup", _args, callback, asyncState);
                strMsg = ((string)(_args[1]));
                return _result;
            }
            
            public void EndUpdateRandomGroup(ref string strMsg, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = strMsg;
                base.EndInvoke("UpdateRandomGroup", _args, result);
                strMsg = ((string)(_args[0]));
            }
            
            public System.IAsyncResult BeginDeleteRandomGroup(string randomGroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = randomGroupId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteRandomGroup", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteRandomGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteRandomGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteRandomGroups(System.Collections.ObjectModel.ObservableCollection<string> randomGroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = randomGroupId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteRandomGroups", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteRandomGroups(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteRandomGroups", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddRandomGroupPerson(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON entType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entType;
                System.IAsyncResult _result = base.BeginInvoke("AddRandomGroupPerson", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddRandomGroupPerson(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddRandomGroupPerson", _args, result);
            }
            
            public System.IAsyncResult BeginAddRandomGroupPersonList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> entList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entList;
                System.IAsyncResult _result = base.BeginInvoke("AddRandomGroupPersonList", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAddRandomGroupPersonList(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AddRandomGroupPersonList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateRandomGroupPerson(SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON entType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entType;
                System.IAsyncResult _result = base.BeginInvoke("UpdateRandomGroupPerson", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateRandomGroupPerson(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateRandomGroupPerson", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateRandomGroupPersonList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_RAMDONGROUPPERSON> entList, System.Collections.ObjectModel.ObservableCollection<string> employeeIDs, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = entList;
                _args[1] = employeeIDs;
                System.IAsyncResult _result = base.BeginInvoke("UpdateRandomGroupPersonList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<int> EndUpdateRandomGroupPersonList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<int> _result = ((System.Collections.ObjectModel.ObservableCollection<int>)(base.EndInvoke("UpdateRandomGroupPersonList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteRandomGroupPerson(string randomGroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = randomGroupId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteRandomGroupPerson", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteRandomGroupPerson(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteRandomGroupPerson", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteRandomGroupPersons(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupPersonIDs;
                System.IAsyncResult _result = base.BeginInvoke("DeleteRandomGroupPersons", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteRandomGroupPersons(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteRandomGroupPersons", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteRandomPersons(System.Collections.ObjectModel.ObservableCollection<string> groupPersonIDs, string groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = groupPersonIDs;
                _args[1] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteRandomPersons", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteRandomPersons(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteRandomPersons", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSumPerformancePaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string sType, string sValue, string userID, bool isSelf, string checkState, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[11];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                _args[6] = sType;
                _args[7] = sValue;
                _args[8] = userID;
                _args[9] = isSelf;
                _args[10] = checkState;
                System.IAsyncResult _result = base.BeginInvoke("GetSumPerformancePaging", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD> EndGetSumPerformancePaging(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD>)(base.EndInvoke("GetSumPerformancePaging", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSumPerformancePagingByTime(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string sType, string sValue, string userID, bool isSelf, string startTime, string endTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[12];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                _args[6] = sType;
                _args[7] = sValue;
                _args[8] = userID;
                _args[9] = isSelf;
                _args[10] = startTime;
                _args[11] = endTime;
                System.IAsyncResult _result = base.BeginInvoke("GetSumPerformancePagingByTime", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD> EndGetSumPerformancePagingByTime(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD>)(base.EndInvoke("GetSumPerformancePagingByTime", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPerformanceDetailEmployeeAllPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string userID, string startTime, string endTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                _args[6] = userID;
                _args[7] = startTime;
                _args[8] = endTime;
                System.IAsyncResult _result = base.BeginInvoke("GetPerformanceDetailEmployeeAllPaging", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL> EndGetPerformanceDetailEmployeeAllPaging(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL>)(base.EndInvoke("GetPerformanceDetailEmployeeAllPaging", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEmployeePerformancePagingByTime(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string sType, string sValue, string userID, string startTime, string endTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[11];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                _args[6] = sType;
                _args[7] = sValue;
                _args[8] = userID;
                _args[9] = startTime;
                _args[10] = endTime;
                System.IAsyncResult _result = base.BeginInvoke("GetEmployeePerformancePagingByTime", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> EndGetEmployeePerformancePagingByTime(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD>)(base.EndInvoke("GetEmployeePerformancePagingByTime", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPerformanceEmployeeAllPaging(int pageIndex, int pageSize, string sort, string filterString, System.Collections.ObjectModel.ObservableCollection<string> paras, ref int pageCount, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = paras;
                _args[5] = pageCount;
                _args[6] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetPerformanceEmployeeAllPaging", _args, callback, asyncState);
                pageCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> EndGetPerformanceEmployeeAllPaging(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD>)(base.EndInvoke("GetPerformanceEmployeeAllPaging", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPerformanceAllBySumID(string sumID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sumID;
                System.IAsyncResult _result = base.BeginInvoke("GetPerformanceAllBySumID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> EndGetPerformanceAllBySumID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD>)(base.EndInvoke("GetPerformanceAllBySumID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPerformanceEmployeeAllBySumID(string sumID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sumID;
                System.IAsyncResult _result = base.BeginInvoke("GetPerformanceEmployeeAllBySumID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> EndGetPerformanceEmployeeAllBySumID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORD>)(base.EndInvoke("GetPerformanceEmployeeAllBySumID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPerformanceDetailEmployeeAllBySumID(string sumID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sumID;
                System.IAsyncResult _result = base.BeginInvoke("GetPerformanceDetailEmployeeAllBySumID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL> EndGetPerformanceDetailEmployeeAllBySumID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PerformanceWS.V_PERFORMANCERECORDDETAIL>)(base.EndInvoke("GetPerformanceDetailEmployeeAllBySumID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEmployePerformance(System.Collections.ObjectModel.ObservableCollection<string> employeIDs, System.DateTime startTime, System.DateTime endTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = employeIDs;
                _args[1] = startTime;
                _args[2] = endTime;
                System.IAsyncResult _result = base.BeginInvoke("GetEmployePerformance", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, decimal> EndGetEmployePerformance(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, decimal> _result = ((System.Collections.Generic.Dictionary<string, decimal>)(base.EndInvoke("GetEmployePerformance", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPerformanceRecordByID(string recordID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = recordID;
                System.IAsyncResult _result = base.BeginInvoke("GetPerformanceRecordByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD EndGetPerformanceRecordByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_PERFORMANCERECORD)(base.EndInvoke("GetPerformanceRecordByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddSumPerformance(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entType;
                System.IAsyncResult _result = base.BeginInvoke("AddSumPerformance", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddSumPerformance(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddSumPerformance", _args, result);
            }
            
            public System.IAsyncResult BeginGetSumPerformanceRecordByID(string sumid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sumid;
                System.IAsyncResult _result = base.BeginInvoke("GetSumPerformanceRecordByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD EndGetSumPerformanceRecordByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD _result = ((SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD)(base.EndInvoke("GetSumPerformanceRecordByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateSumPerformance(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entType;
                System.IAsyncResult _result = base.BeginInvoke("UpdateSumPerformance", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateSumPerformance(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateSumPerformance", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateSumPerformanceAndSum(SMT.Saas.Tools.PerformanceWS.T_HR_SUMPERFORMANCERECORD entType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entType;
                System.IAsyncResult _result = base.BeginInvoke("UpdateSumPerformanceAndSum", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateSumPerformanceAndSum(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateSumPerformanceAndSum", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteSumPerformance(string sumId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sumId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteSumPerformance", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteSumPerformance(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteSumPerformance", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteSumPerformances(System.Collections.ObjectModel.ObservableCollection<string> sumIdList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sumIdList;
                System.IAsyncResult _result = base.BeginInvoke("DeleteSumPerformances", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteSumPerformances(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteSumPerformances", _args, result)));
                return _result;
            }
        }
    }
}
