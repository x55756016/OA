//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace SMT.SaaS.OA.UI.TravelExpApplyMaster {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="TravelExpApplyMaster.OaInterface")]
    public interface OaInterface {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OaInterface/DoWork", ReplyAction="urn:OaInterface/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OaInterface/GetApplyOrderID", ReplyAction="urn:OaInterface/GetApplyOrderIDResponse")]
        System.IAsyncResult BeginGetApplyOrderID(string orderID, System.AsyncCallback callback, object asyncState);
        
        string EndGetApplyOrderID(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface OaInterfaceChannel : SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApplyOrderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplyOrderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OaInterfaceClient : System.ServiceModel.ClientBase<SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface>, SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApplyOrderIDDelegate;
        
        private EndOperationDelegate onEndGetApplyOrderIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplyOrderIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public OaInterfaceClient() {
        }
        
        public OaInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OaInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OaInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OaInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<GetApplyOrderIDCompletedEventArgs> GetApplyOrderIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface.BeginGetApplyOrderID(string orderID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplyOrderID(orderID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface.EndGetApplyOrderID(System.IAsyncResult result) {
            return base.Channel.EndGetApplyOrderID(result);
        }
        
        private System.IAsyncResult OnBeginGetApplyOrderID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string orderID = ((string)(inValues[0]));
            return ((SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface)(this)).BeginGetApplyOrderID(orderID, callback, asyncState);
        }
        
        private object[] OnEndGetApplyOrderID(System.IAsyncResult result) {
            string retVal = ((SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface)(this)).EndGetApplyOrderID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetApplyOrderIDCompleted(object state) {
            if ((this.GetApplyOrderIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplyOrderIDCompleted(this, new GetApplyOrderIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplyOrderIDAsync(string orderID) {
            this.GetApplyOrderIDAsync(orderID, null);
        }
        
        public void GetApplyOrderIDAsync(string orderID, object userState) {
            if ((this.onBeginGetApplyOrderIDDelegate == null)) {
                this.onBeginGetApplyOrderIDDelegate = new BeginOperationDelegate(this.OnBeginGetApplyOrderID);
            }
            if ((this.onEndGetApplyOrderIDDelegate == null)) {
                this.onEndGetApplyOrderIDDelegate = new EndOperationDelegate(this.OnEndGetApplyOrderID);
            }
            if ((this.onGetApplyOrderIDCompletedDelegate == null)) {
                this.onGetApplyOrderIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplyOrderIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplyOrderIDDelegate, new object[] {
                        orderID}, this.onEndGetApplyOrderIDDelegate, this.onGetApplyOrderIDCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface CreateChannel() {
            return new OaInterfaceClientChannel(this);
        }
        
        private class OaInterfaceClientChannel : ChannelBase<SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface>, SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface {
            
            public OaInterfaceClientChannel(System.ServiceModel.ClientBase<SMT.SaaS.OA.UI.TravelExpApplyMaster.OaInterface> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginGetApplyOrderID(string orderID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = orderID;
                System.IAsyncResult _result = base.BeginInvoke("GetApplyOrderID", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetApplyOrderID(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetApplyOrderID", _args, result)));
                return _result;
            }
        }
    }
}
